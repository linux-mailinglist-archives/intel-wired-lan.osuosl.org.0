Return-Path: <intel-wired-lan-bounces@osuosl.org>
X-Original-To: lists+intel-wired-lan@lfdr.de
Delivered-To: lists+intel-wired-lan@lfdr.de
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
	by mail.lfdr.de (Postfix) with ESMTPS id CEC3CA6414
	for <lists+intel-wired-lan@lfdr.de>; Tue,  3 Sep 2019 10:35:41 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by whitealder.osuosl.org (Postfix) with ESMTP id 653DD875C7;
	Tue,  3 Sep 2019 08:35:40 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id GgJ6HkZvz25H; Tue,  3 Sep 2019 08:35:40 +0000 (UTC)
Received: from ash.osuosl.org (ash.osuosl.org [140.211.166.34])
	by whitealder.osuosl.org (Postfix) with ESMTP id 8F98C875E2;
	Tue,  3 Sep 2019 08:35:38 +0000 (UTC)
X-Original-To: intel-wired-lan@osuosl.org
Delivered-To: intel-wired-lan@osuosl.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by ash.osuosl.org (Postfix) with ESMTP id 63C781BF2A9
 for <intel-wired-lan@osuosl.org>; Tue,  3 Sep 2019 08:35:36 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id 5DDB686448
 for <intel-wired-lan@osuosl.org>; Tue,  3 Sep 2019 08:35:36 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id ch7zTDjdz1Wa for <intel-wired-lan@osuosl.org>;
 Tue,  3 Sep 2019 08:35:34 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx1.molgen.mpg.de (mx3.molgen.mpg.de [141.14.17.11])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 09CC086308
 for <intel-wired-lan@osuosl.org>; Tue,  3 Sep 2019 08:35:33 +0000 (UTC)
Received: from [192.168.0.6] (ip5f5bd172.dynamic.kabel-deutschland.de
 [95.91.209.114])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested) (Authenticated sender: pmenzel)
 by mx.molgen.mpg.de (Postfix) with ESMTPSA id 9D9A720225734;
 Tue,  3 Sep 2019 10:35:30 +0200 (CEST)
To: Gavin Lambert <intel@mirality.co.nz>,
 Sasha Neftin <sasha.neftin@intel.com>,
 Vitaly Lifshits <vitaly.lifshits@intel.com>,
 Tomas Winkler <tomas.winkler@intel.com>
References: <3acf459ddbbd30687cda0a79523afe04@mirality.co.nz>
 <bec9f546d5a5a46586af0ac93d36f84f@mirality.co.nz>
 <000661bda5687541e895a949c76712fb@mirality.co.nz>
 <d3118220-e599-44cd-5ed6-43259c5fc2c2@intel.com>
 <3a63201c552a9cb6a9737fec92bc1264@mirality.co.nz>
 <f4a18bf808e6f30e9691e127722f851b@mirality.co.nz>
 <f6b7b539ece1ba352c60c6dc976a3ce2@mirality.co.nz>
 <0300439f389950a9f9baaaaf5e3ea697@mirality.co.nz>
From: Paul Menzel <pmenzel@molgen.mpg.de>
Message-ID: <aafb4ac9-6825-300c-6dee-1b603c09e373@molgen.mpg.de>
Date: Tue, 3 Sep 2019 10:35:30 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.8.0
MIME-Version: 1.0
In-Reply-To: <0300439f389950a9f9baaaaf5e3ea697@mirality.co.nz>
Content-Language: en-US
Subject: Re: [Intel-wired-lan] [e1000e] Linux 4.9: unable to send packets
 after link recovery with patched driver
X-BeenThere: intel-wired-lan@osuosl.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel Wired Ethernet Linux Kernel Driver Development
 <intel-wired-lan.osuosl.org>
List-Unsubscribe: <https://lists.osuosl.org/mailman/options/intel-wired-lan>, 
 <mailto:intel-wired-lan-request@osuosl.org?subject=unsubscribe>
List-Archive: <http://lists.osuosl.org/pipermail/intel-wired-lan/>
List-Post: <mailto:intel-wired-lan@osuosl.org>
List-Help: <mailto:intel-wired-lan-request@osuosl.org?subject=help>
List-Subscribe: <https://lists.osuosl.org/mailman/listinfo/intel-wired-lan>,
 <mailto:intel-wired-lan-request@osuosl.org?subject=subscribe>
Cc: intel-wired-lan@osuosl.org,
 "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>,
 Alexander Usyskin <alexander.usyskin@intel.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: intel-wired-lan-bounces@osuosl.org
Sender: "Intel-wired-lan" <intel-wired-lan-bounces@osuosl.org>

RGVhciBHYXZpbiwKCgpUaGFuayB5b3UgZm9yIGZvbGxvd2luZyB1cCBvbiB0aGlzLgoKT24gMDMu
MDkuMTkgMDk6NTYsIEdhdmluIExhbWJlcnQgd3JvdGU6Cj4gT24gMjAxOS0wOC0yMCAxNDoxNSwg
SSB3cm90ZToKPj4gRG9lcyBhbnlvbmUgaGF2ZSBhbnkgaWRlYXMgYWJvdXQgdGhpcz/CoCBFaXRo
ZXIgdG93YXJkcyBmdXJ0aGVyCj4+IGludmVzdGlnYXRpb24gb3IgdG8gYSBwb3NzaWJsZSByZXNv
bHV0aW9uPwo+Pgo+PiBUaGlzIGlzIGF0IHRoZSBwb2ludCBvZiBoYXJkd2FyZSBpbnRlcm5hbHMg
bm93LCBzbyBJIGhhdmUgbm8gaWRlYSBob3cKPj4gdG8gcHJvY2VlZCBpbiBlaXRoZXIgYXJlYS4K
PiAKPiBUbyByZWNhcCAocGx1cyBzb21lIG5ldyBpbmZvKToKPiAKPiAxLiBJIGFtIHVzaW5nIGEg
a2VybmVsIG1vZHVsZSB3aGljaCB1c2VzIHRoZSBjb2RlIGZyb20gdGhlIGUxMDAwZSBkcml2ZXIg
Cj4gdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgaGFyZHdhcmUgd2l0aG91dCBhY3R1YWxseSByZWdp
c3RlcmluZyBpdCBhcyBhIAo+IExpbnV4IG5ldGRldi7CoCAoVGhpcyBpcyBwYXJ0bHkgYmVjYXVz
ZSBpdCBjYW4gZ2V0IHVzZWQgaW4gYSBYZW5vbWFpIAo+IGNvbnRleHQgb3V0c2lkZSBvZiBMaW51
eCBpdHNlbGYsIGFsdGhvdWdoIEknbSBub3QgZG9pbmcgdGhhdCBteXNlbGYuKSAKPiBUaGlzIGhp
c3RvcmljYWxseSB3b3JrcyBmaW5lLgo+IAo+IDIuIE9uIGNlcnRhaW4gTGludXggdmVyc2lvbnMs
IEkgZW5jb3VudGVyZWQgYW4gaXNzdWUgd2hlcmUgZGlzY29ubmVjdGluZyAKPiB0aGUgbmV0d29y
ayBjYWJsZSBhbmQgcmVjb25uZWN0aW5nIGl0IGFsbW9zdCBhbHdheXMgcmVzdWx0cyBpbiBub3Qg
YmVpbmcgCj4gYWJsZSB0byBzZW5kIGFueSBwYWNrZXRzLsKgIChJIGNhbm5vdCBkZXRlcm1pbmUg
aWYgcmVjZWl2aW5nIHBhY2tldHMgCj4gd29ya3MgaW4gdGhpcyBjYXNlLCBhcyB0aGUgbmV0d29y
ayBkZXNpZ24gd2lsbCBub3QgcmVjZWl2ZSBwYWNrZXRzIAo+IHVubGVzcyBzb21lIGFyZSBzZW50
IGZpcnN0LinCoCBSZXN0YXJ0aW5nIHRoZSBkcml2ZXIgKHJtbW9kK21vZHByb2JlKSAKPiBkb2Vz
IHJlY292ZXIgZnJvbSB0aGlzIGNhc2UgKHVudGlsIHRoZSBuZXh0IGxpbmsgbG9zcyksIGJ1dCBz
aW1wbHkgCj4gcmVwbHVnZ2luZyB0aGUgY2FibGUgbmV2ZXIgZG9lcy4KPiAKPiAzLiBUaGUgcHJv
YmxlbSB3YXMgb2JzZXJ2ZWQgd2l0aCBib3RoIEkyMTktViBhbmQgSTIxOS1MTSAob24gCj4gbW90
aGVyYm9hcmQpLCBidXQgd2FzICpub3QqIG9ic2VydmVkIHdpdGggODI1NzFFQiAoUENJRSkuwqAg
VGhlIHByb2JsZW0gCj4gd2FzIG5vdCBvYnNlcnZlZCB3aXRoIGEgbW90aGVyYm9hcmQgaWdiLWJh
c2VkIEkyMTEuwqAgSSBzdXNwZWN0IHRoZSBpc3N1ZSAKPiBpcyBsaW1pdGVkIHRvIG1vdGhlcmJv
YXJkLWJhc2VkIGUxMDAwZSBhZGFwdGVycy7CoCAoT3IgcGVyaGFwcyB0aGVyZSdzIAo+IHNvbWV0
aGluZyBkaWZmZXJlbnQgYWJvdXQgaG93IHRoZSBJR0JzIGFyZSBpbnRlcm5hbGx5IGNvbm5lY3Rl
ZC4pCj4gCj4gNC4gVGhlIHByb2JsZW0gZG9lcyBub3Qgb2NjdXIgd2hlbiB0aGUgZTEwMDBlIGRy
aXZlciBpcyByZWdpc3RlcmVkIAo+ICJub3JtYWxseSIgYXMgYSBMaW51eCBuZXRkZXYuCj4gCj4g
NS4gVGhlIHByb2JsZW0gd2FzIGludHJvZHVjZWQgYnkgIm1laTogbWU6IGFsbG93IHJ1bnRpbWUg
cG0gZm9yIHBsYXRmb3JtIAo+IHdpdGggRDBpMyIgKHdoaWNoIGhhcyBiZWVuIGJhY2twb3J0ZWQg
dG8gNC40KywgYXMgZmFyIGFzIEkgY2FuIHRlbGwpLiAKPiBFeGNsdWRpbmcgdGhpcyBjb21taXQg
cmVsaWFibHkgcmVzb2x2ZXMgdGhlIGlzc3VlIGFuZCBpbmNsdWRpbmcgaXQgCj4gcmVsaWFibHkg
YnJlYWtzIGl0LgoKVGhlIGNvbW1pdCBoYXNoIGluIHRoZSBtYXN0ZXIgYnJhbmNoIGlzIApjYzM2
NWRjZjBlNTYyNzFiZWRmM2RlOTVmODg5MjJhYmUyNDhlOTUxIGFuZCBpcyB0aGVyZSBzaW5jZSB2
NC4xNi1yYzEuCgpTdHJhbmdlLCB0aGF0IGl0IGlzIGluIDQuNCBhbmQgNC45LCBhcyBpdCB3YXMg
b25seSB0YWdnZWQgZm9yIHY0LjEzKy4KCj4gNi4gQXBwbHlpbmcgdGhlIHByZXZpb3VzbHkgc3Vn
Z2VzdGVkIHBhdGNoIAo+IGh0dHBzOi8vZ2l0Lmtlcm5lbC5vcmcvcHViL3NjbS9saW51eC9rZXJu
ZWwvZ2l0L2praXJzaGVyL25leHQtcXVldWUuZ2l0L2NvbW1pdC9kcml2ZXJzL25ldC9ldGhlcm5l
dC9pbnRlbC9lMTAwMGU/aWQ9ZGVmNGVjNmRjZTM5M2UyMTM2YjYyYTA1NzEyZjM1YTdmYTVmNWU1
NiAKPiBoYXMgbm8gZWZmZWN0OyB0aGUgRTEwMDBfU1RBVFVTX1BDSU1fU1RBVEUgYml0IGlzIG5v
dCBzZXQgd2hlbiB0aGUgaXNzdWUgCj4gb2NjdXJzLgo+IAo+IDcuIEdpdmVuIHRoZSBjb250ZW50
IG9mIHRoZSBjaGFuZ2UgaW4gIzUsIEkgYXNzdW1lZCB0aGF0IHRoZSBwcm9ibGVtIHdhcyAKPiBw
b3dlci1tYW5hZ2VtZW50IHJlbGF0ZWQsIHBlcmhhcHMgYSBzaWRlIGVmZmVjdCBvZiB0aGUgZTEw
MDBlIGRyaXZlciBub3QgCj4gYmVpbmcgcmVnaXN0ZXJlZCBhcyBhIG5ldGRldi7CoCAoU28gcGVy
aGFwcyBzb21ldGhpbmcgdGhpbmtzIHRoYXQgbm8gCj4gZGV2aWNlcyBhcmUgaW4gdXNlIGFuZCB0
dXJucyBzb21ldGhpbmcgb2ZmPykKPiAKPiA4LiBJJ3ZlIHByZXZpb3VzbHkgcG9zdGVkIHJlZ2lz
dGVyIGR1bXBzIGZyb20gYW4gZTEwMDBlIGluIGJvdGggdGhlIAo+ICJub3JtYWwiIGFuZCAibGlu
ayB1cCBidXQgbm90IHRyYW5zbWl0dGluZyIgc3RhdGVzLsKgIFRoZXkgc2VlbWVkIHZlcnkgCj4g
c2ltaWxhciwgYnV0IGFzIEknbSBub3QgZmFtaWxpYXIgd2l0aCB0aGUgcmVnaXN0ZXIgbWVhbmlu
Z3MgSSBtYXkgaGF2ZSAKPiBvdmVybG9va2VkIHNvbWV0aGluZyBzaWduaWZpY2FudC7CoCAoTm90
ZSB0aGF0IHRoZSBkdW1wcyB3ZXJlIGNhcHR1cmVkIAo+IGluc2lkZSB0aGUgd2F0Y2hkb2cgdGFz
aywgd2hlbiBpdCBkZXRlY3RzIGxpbmsgdXAgYnV0IGJlZm9yZSBpdCBzZXRzIAo+IEUxMDAwX1RD
VExfRU4uKQo+IAo+IDkuIEkgZW5hYmxlZCBkZWJ1ZyBsb2dnaW5nIGluIHRoZSBtZWkgZHJpdmVy
OyBpdCBsb2dzIGEgY291cGxlIG9mIAo+IHJ1bnRpbWVfaWRsZXMgYW5kIHRoZW4gYSBydW50aW1l
X3N1c3BlbmQgZHVyaW5nIHN5c3RlbSBzdGFydHVwLsKgIChJIAo+IGFkZGVkIGEgbG9nIHRvIHJ1
bnRpbWVfcmVzdW1lIHRoYXQgaXMgbWlzc2luZyBpbiB0aGUgZHJpdmVyIHNvdXJjZSwgYnV0IAo+
IGl0IGFwcGVhcnMgdGhpcyBkb2VzIG5vdCBnZXQgY2FsbGVkIGluIG15IHNjZW5hcmlvLinCoCBO
b3RlIHRoYXQgdGhlIAo+IGUxMDAwZSBkcml2ZXIgaXMgc3RpbGwgd29ya2luZyBvayBhZnRlciB0
aGlzLi4gYXQgbGVhc3QgYXQgZmlyc3QuCj4gCj4gMTAuICJjYXQgL3N5cy9idXMvZGV2aWNlcy9w
Y2kwMDAwOjAwLzAwMDA6MDA6MTYuMC9wb3dlci9ydW50aW1lX3N0YXR1cyIgCj4gPT4gInN1c3Bl
bmRlZCIKPiAgwqDCoMKgICJjYXQgCj4gL3N5cy9idXMvZGV2aWNlcy9wY2kwMDAwOjAwLzAwMDA6
MDA6MTYuMC9tZWkvbWVpMC9wb3dlci9ydW50aW1lX3N0YXR1cyIgCj4gPT4gInVuc3VwcG9ydGVk
Igo+ICDCoMKgwqAgImNhdCAvc3lzL2J1cy9kZXZpY2VzL3BjaTAwMDA6MDAvMDAwMDowMDoxZi4w
L3Bvd2VyL3J1bnRpbWVfc3RhdHVzIiAKPiA9PiAiYWN0aXZlIgo+ICDCoMKgwqAgImNhdCAvc3lz
L2J1cy9kZXZpY2VzL3BjaTAwMDA6MDAvMDAwMDowMDoxZi42L3Bvd2VyL3J1bnRpbWVfc3RhdHVz
IiAKPiA9PiAiYWN0aXZlIiAodGhpcyBpcyB0aGUgYWN0dWFsIE5JQykKPiAgwqDCoMKgIFRoZXNl
IGRvbid0IGNoYW5nZSBiZXR3ZWVuIHRoZSB3b3JraW5nIGFuZCBub24td29ya2luZyBzdGF0ZXMu
IAo+IChJdCdzIHBvc3NpYmxlIHRoYXQgc29tZSBvdGhlciBkZXZpY2UgZG9lcywgYnV0IEkgaGF2
ZW4ndCBmb3VuZCBpdCB5ZXQuKQo+IAo+IDExLiBJIGRpZCB0cnkgZm9yY2luZyB0aGUgYWJvdmUg
dG8gdW5zdXNwZW5kLCBidXQgdGhpcyBkaWQgbm90IHJlY292ZXIgCj4gZnJvbSB0aGUgZTEwMDBl
IGlzc3VlLgo+IAo+IDEyLiBJIGFsc28gdHJpZWQgY2FsbGluZyBlMTAwMGVfcmVzZXQgb24gbGlu
ay1kb3duLsKgIFRoaXMgcHJvZHVjZXMgCj4gZGlmZmVyZW50IHJlZ2lzdGVyIG91dHB1dCBvbiBs
aW5rLXVwLCBidXQgZG9lc24ndCByZWNvdmVyIGZyb20gdGhlIGlzc3VlLgo+IAo+IDEzLiBJIGFs
c28gdHJpZWQgcmVjb21waWxpbmcgdGhlIGtlcm5lbCB3aXRoIENPTkZJR19QTSBkaXNhYmxlZCAo
bm8gCj4gcG93ZXIgbWFuYWdlbWVudCkuwqAgVGhpcyAqZG9lcyogcmVzb2x2ZSB0aGUgcHJvYmxl
bSAoYnV0IGlzIGEgdmVyeSBiaWcgCj4gaGFtbWVyKS4KPiAKPiAxNC4gUG9zc2libHkgYWxzbyBv
ZiBpbnRlcmVzdCBpcyB0aGF0IGlmIEkgZG8gKmJvdGgqICMxMiBhbmQgIzEzLCB0aGUgCj4gcHJv
YmxlbSByZW1haW5zIChzdWdnZXN0aW5nICMxMiB3YXMgY291bnRlci1wcm9kdWN0aXZlKS4KPiAK
PiBGWUkgdGhlIGhhcmR3YXJlIG9uIG9uZSBvZiB0aGUgdGVzdCBtYWNoaW5lcyBpcyBhcyBmb2xs
b3dzOgo+ICDCoMKgwqAgMDA6MDAuMCBIb3N0IGJyaWRnZTogSW50ZWwgQ29ycG9yYXRpb24gRGV2
aWNlIDU5MWYgKHJldiAwNSkKPiAgwqDCoMKgIDAwOjAxLjAgUENJIGJyaWRnZTogSW50ZWwgQ29y
cG9yYXRpb24gU2t5bGFrZSBQQ0llIENvbnRyb2xsZXIgKHgxNikgKHJldiAwNSkKPiAgwqDCoMKg
IDAwOjAyLjAgVkdBIGNvbXBhdGlibGUgY29udHJvbGxlcjogSW50ZWwgQ29ycG9yYXRpb24gRGV2
aWNlIDU5MTIgKHJldiAwNCkKPiAgwqDCoMKgIDAwOjA4LjAgU3lzdGVtIHBlcmlwaGVyYWw6IElu
dGVsIENvcnBvcmF0aW9uIFNreWxha2UgR2F1c3NpYW4gIE1peHR1cmUgTW9kZWwKPiAgwqDCoMKg
IDAwOjE0LjAgVVNCIGNvbnRyb2xsZXI6IEludGVsIENvcnBvcmF0aW9uIFN1bnJpc2UgUG9pbnQt
SCBVU0IgMy4wICB4SENJIENvbnRyb2xsZXIgKHJldiAzMSkKPiAgwqDCoMKgIDAwOjE0LjIgU2ln
bmFsIHByb2Nlc3NpbmcgY29udHJvbGxlcjogSW50ZWwgQ29ycG9yYXRpb24gU3VucmlzZSBQb2lu
dC1IIFRoZXJtYWwgc3Vic3lzdGVtIChyZXYgMzEpCj4gIMKgwqDCoCAwMDoxNS4wIFNpZ25hbCBw
cm9jZXNzaW5nIGNvbnRyb2xsZXI6IEludGVsIENvcnBvcmF0aW9uIFN1bnJpc2UgUG9pbnQtSCBT
ZXJpYWwgSU8gSTJDIENvbnRyb2xsZXIgIzAgKHJldiAzMSkKPiAgwqDCoMKgIDAwOjE1LjEgU2ln
bmFsIHByb2Nlc3NpbmcgY29udHJvbGxlcjogSW50ZWwgQ29ycG9yYXRpb24gU3VucmlzZSBQb2lu
dC1IIFNlcmlhbCBJTyBJMkMgQ29udHJvbGxlciAjMSAocmV2IDMxKQo+ICDCoMKgwqAgMDA6MTYu
MCBDb21tdW5pY2F0aW9uIGNvbnRyb2xsZXI6IEludGVsIENvcnBvcmF0aW9uIFN1bnJpc2UgUG9p
bnQtSCBDU01FIEhFQ0kgIzEgKHJldiAzMSkKPiAgwqDCoMKgIDAwOjE3LjAgU0FUQSBjb250cm9s
bGVyOiBJbnRlbCBDb3Jwb3JhdGlvbiBTdW5yaXNlIFBvaW50LUggU0FUQSBjb250cm9sbGVyIFtB
SENJIG1vZGVdIChyZXYgMzEpCj4gIMKgwqDCoCAwMDoxYi4wIFBDSSBicmlkZ2U6IEludGVsIENv
cnBvcmF0aW9uIFN1bnJpc2UgUG9pbnQtSCBQQ0kgUm9vdCBQb3J0ICMxOSAocmV2IGYxKQo+ICDC
oMKgwqAgMDA6MWIuMyBQQ0kgYnJpZGdlOiBJbnRlbCBDb3Jwb3JhdGlvbiBTdW5yaXNlIFBvaW50
LUggUENJIFJvb3QgUG9ydCAjMjAgKHJldiBmMSkKPiAgwqDCoMKgIDAwOjFjLjAgUENJIGJyaWRn
ZTogSW50ZWwgQ29ycG9yYXRpb24gU3VucmlzZSBQb2ludC1IIFBDSSBFeHByZXNzIFJvb3QgUG9y
dCAjNSAocmV2IGYxKQo+ICDCoMKgwqAgMDA6MWQuMCBQQ0kgYnJpZGdlOiBJbnRlbCBDb3Jwb3Jh
dGlvbiBTdW5yaXNlIFBvaW50LUggUENJIEV4cHJlc3MgUm9vdCBQb3J0ICMxMSAocmV2IGYxKQo+
ICDCoMKgwqAgMDA6MWUuMCBTaWduYWwgcHJvY2Vzc2luZyBjb250cm9sbGVyOiBJbnRlbCBDb3Jw
b3JhdGlvbiBTdW5yaXNlIFBvaW50LUggU2VyaWFsIElPIFVBUlQgIzAgKHJldiAzMSkKPiAgwqDC
oMKgIDAwOjFmLjAgSVNBIGJyaWRnZTogSW50ZWwgQ29ycG9yYXRpb24gU3VucmlzZSBQb2ludC1I
IExQQyBDb250cm9sbGVyIChyZXYgMzEpCj4gIMKgwqDCoCAwMDoxZi4yIE1lbW9yeSBjb250cm9s
bGVyOiBJbnRlbCBDb3Jwb3JhdGlvbiBTdW5yaXNlIFBvaW50LUggUE1DIChyZXYgMzEpCj4gIMKg
wqDCoCAwMDoxZi40IFNNQnVzOiBJbnRlbCBDb3Jwb3JhdGlvbiBTdW5yaXNlIFBvaW50LUggU01C
dXMgKHJldiAzMSkKPiAgwqDCoMKgIDAwOjFmLjYgRXRoZXJuZXQgY29udHJvbGxlcjogSW50ZWwg
Q29ycG9yYXRpb24gRXRoZXJuZXQgQ29ubmVjdGlvbiAoMikgSTIxOS1MTSAocmV2IDMxKQo+ICDC
oMKgwqAgMDI6MDAuMCBFdGhlcm5ldCBjb250cm9sbGVyOiBJbnRlbCBDb3Jwb3JhdGlvbiBJMjEx
IEdpZ2FiaXQgTmV0d29yayBDb25uZWN0aW9uIChyZXYgMDMpCj4gIMKgwqDCoCAwMzowMC4wIEV0
aGVybmV0IGNvbnRyb2xsZXI6IEludGVsIENvcnBvcmF0aW9uIEkyMTEgR2lnYWJpdCBOZXR3b3Jr
IENvbm5lY3Rpb24gKHJldiAwMykKPiAgwqDCoMKgIDA1OjAwLjAgRXRoZXJuZXQgY29udHJvbGxl
cjogSW50ZWwgQ29ycG9yYXRpb24gSTIxMSBHaWdhYml0IE5ldHdvcmsgQ29ubmVjdGlvbiAocmV2
IDAzKQo+IAo+IEknbSBoYXBweSB0byBhZGQgYW55IGNvZGUgaW5zdHJ1bWVudGF0aW9uIG9yIG1h
a2UgYW55IG90aGVyIGNoYW5nZXMgCj4gbmVlZGVkIHRvIGxvY2F0ZSBhbmQgcmVzb2x2ZSB0aGUg
cHJvYmxlbSwgYW5kIEkgY2FuIHJlYWRpbHkgcmVwcm9kdWNlIGl0IAo+IC0tIEknbSBqdXN0IGF0
IGEgY29tcGxldGUgbG9zcyBhcyB0byB3aGVyZSB0byBzdGFydCBsb29raW5nLCBhbmQgYW0gCj4g
c3RpbGwgaG9waW5nIGZvciBzb21lIHN1Z2dlc3Rpb25zIGluIHRoYXQgcmVnYXJkLgo+IAo+IElm
IHRoZXJlJ3MgYW55d2hlcmUgKG9yIGFueW9uZSkgZWxzZSBiZXR0ZXIgZm9yIG1lIHRvIHRhbGsg
dG8gYWJvdXQgdGhpcyAKPiBpc3N1ZSwgcGxlYXNlIGxldCBtZSBrbm93IHRoYXQgdG9vLgoKSXQg
aXMgbm90IGNsZWFyIHRvIG1lLCBpZiB0aGlzIGlzIHN0aWxsIHJlcHJvZHVjaWJsZSBvbiBMaW51
eCA1LjMtcmM3IAoob3IgTGludXPigJkgbWFzdGVyIGJyYW5jaCkuCgpJZiBpdCBpcywgdGhpcyBp
cyBhIGRlZmluaXRlbHkgcmVncmVzc2lvbiwgYW5kIHRoZSBjb21taXRzIG5lZWQgdG8gYmUgCnJl
dmVydGVkIGR1ZSB0byBMaW51eOKAmSBubyByZWdyZXNzaW9uIHBvbGljeS4KCgpLaW5kIHJlZ2Fy
ZHMsCgpQYXVsCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkludGVsLXdpcmVkLWxhbiBtYWlsaW5nIGxpc3QKSW50ZWwtd2lyZWQtbGFuQG9zdW9zbC5vcmcK
aHR0cHM6Ly9saXN0cy5vc3Vvc2wub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtd2lyZWQtbGFu
Cg==
