Return-Path: <intel-wired-lan-bounces@osuosl.org>
X-Original-To: lists+intel-wired-lan@lfdr.de
Delivered-To: lists+intel-wired-lan@lfdr.de
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
	by mail.lfdr.de (Postfix) with ESMTPS id 567221DBE21
	for <lists+intel-wired-lan@lfdr.de>; Wed, 20 May 2020 21:38:57 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by hemlock.osuosl.org (Postfix) with ESMTP id ED6A088C43;
	Wed, 20 May 2020 19:38:55 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id j75NdLpLrVoM; Wed, 20 May 2020 19:38:52 +0000 (UTC)
Received: from ash.osuosl.org (ash.osuosl.org [140.211.166.34])
	by hemlock.osuosl.org (Postfix) with ESMTP id B4C2388C49;
	Wed, 20 May 2020 19:38:52 +0000 (UTC)
X-Original-To: intel-wired-lan@lists.osuosl.org
Delivered-To: intel-wired-lan@lists.osuosl.org
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
 by ash.osuosl.org (Postfix) with ESMTP id 8C30E1BF2F9
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:22:04 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by whitealder.osuosl.org (Postfix) with ESMTP id 8660387F8B
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:22:04 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id U0pyplo4+56Y for <intel-wired-lan@lists.osuosl.org>;
 Wed, 20 May 2020 19:22:02 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mail-pj1-f67.google.com (mail-pj1-f67.google.com
 [209.85.216.67])
 by whitealder.osuosl.org (Postfix) with ESMTPS id DA18487ED9
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:22:02 +0000 (UTC)
Received: by mail-pj1-f67.google.com with SMTP id q9so1808703pjm.2
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 12:22:02 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=WWsnXbuy3qB4i4s/QctZchmNsMWt5QFLd5KYA2p1+K0=;
 b=BMGaITPK1WvJl+fkghOnq+xA10wyLMMzYajcxC60l7/EJi6vkOtpoX5hcmQAhjuy2m
 p9JW4YhMF7UmoQgdl8RTE0oUm6dxUfwS5tY3HJS0udGnDCO+M+LVag4jQjTULrrGojtA
 Gty+A4J67C2saTyVVPJAQ27+YKzJ159+y//xP7sJuql1tWYUiF5n5kQtZVI5jwDIZ2kQ
 7eK4MFLcHzAZ5caE7w+dv/KASdr3lqkBeGY3RTc9L5dnOVWiE1+DaWKlyUptO+rcQJed
 sgW/fBjQkYOquTnQvHlkvEbIkTUYOfRMA7qoAeh9iDQ7Xs/NjrARwxBqTSkZI0/3H93z
 VWDg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=WWsnXbuy3qB4i4s/QctZchmNsMWt5QFLd5KYA2p1+K0=;
 b=Ad1YxfcI70fnMfZFQGwoLUjzIE2njbCXdefQ6cJPRNkLW/ejWxZzHVbI9yAiYLmIWy
 GoUaVppVitJfDP96W9JuIqV66qEG9UecP/WiY3CUkMhGJbYfH41B/t/tb+brLiUamiFw
 8xs/OEyjCqf96o01QN0xclzW001IOXt8o3UAY/+nwXxqI4y0atnG3oGn442B64Y9ZHqw
 EnO7+38TtzlCQMhU0BA1wtoYRRuAhTHF6/b33c4npFBn5zDmdnaTMB0Ly1lTzcUNBbSC
 1hpM2lEg0cXb3q7OqbOc/GYzp581hSKZnDgyEric5YWgPvkNZPDI7UYri3OXQ3NCrjUH
 FioA==
X-Gm-Message-State: AOAM533q9JePQ9ZWUzL17J0Szag2g5VwQ01yq3e+78839V5tUbdEL5zE
 sKe8WHcwvomvPUjfo0TSwQg=
X-Google-Smtp-Source: ABdhPJy6uH7JFKNEMFNk763LA0Hv3+8GSiDbpMVAFHxstYITT55crEFrv1efQQOUx9BxG8xB3L3e4Q==
X-Received: by 2002:a17:90a:68cd:: with SMTP id
 q13mr6984306pjj.177.1590002522255; 
 Wed, 20 May 2020 12:22:02 -0700 (PDT)
Received: from btopel-mobl.ger.intel.com (fmdmzpr03-ext.fm.intel.com.
 [192.55.54.38])
 by smtp.gmail.com with ESMTPSA id 62sm2762424pfc.204.2020.05.20.12.21.57
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Wed, 20 May 2020 12:22:01 -0700 (PDT)
From: =?UTF-8?q?Bj=C3=B6rn=20T=C3=B6pel?= <bjorn.topel@gmail.com>
To: ast@kernel.org, daniel@iogearbox.net, davem@davemloft.net, kuba@kernel.org,
 hawk@kernel.org, john.fastabend@gmail.com, netdev@vger.kernel.org,
 bpf@vger.kernel.org, magnus.karlsson@intel.com, jonathan.lemon@gmail.com,
 jeffrey.t.kirsher@intel.com
Date: Wed, 20 May 2020 21:20:56 +0200
Message-Id: <20200520192103.355233-9-bjorn.topel@gmail.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20200520192103.355233-1-bjorn.topel@gmail.com>
References: <20200520192103.355233-1-bjorn.topel@gmail.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 20 May 2020 19:38:45 +0000
Subject: [Intel-wired-lan] [PATCH bpf-next v5 08/15] i40e,
 xsk: migrate to new MEM_TYPE_XSK_BUFF_POOL
X-BeenThere: intel-wired-lan@osuosl.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel Wired Ethernet Linux Kernel Driver Development
 <intel-wired-lan.osuosl.org>
List-Unsubscribe: <https://lists.osuosl.org/mailman/options/intel-wired-lan>, 
 <mailto:intel-wired-lan-request@osuosl.org?subject=unsubscribe>
List-Archive: <http://lists.osuosl.org/pipermail/intel-wired-lan/>
List-Post: <mailto:intel-wired-lan@osuosl.org>
List-Help: <mailto:intel-wired-lan-request@osuosl.org?subject=help>
List-Subscribe: <https://lists.osuosl.org/mailman/listinfo/intel-wired-lan>,
 <mailto:intel-wired-lan-request@osuosl.org?subject=subscribe>
Cc: maximmi@mellanox.com,
 =?UTF-8?q?Bj=C3=B6rn=20T=C3=B6pel?= <bjorn.topel@intel.com>,
 maciej.fijalkowski@intel.com, intel-wired-lan@lists.osuosl.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-wired-lan-bounces@osuosl.org
Sender: "Intel-wired-lan" <intel-wired-lan-bounces@osuosl.org>

RnJvbTogQmrDtnJuIFTDtnBlbCA8Ympvcm4udG9wZWxAaW50ZWwuY29tPgoKUmVtb3ZlIE1FTV9U
WVBFX1pFUk9fQ09QWSBpbiBmYXZvciBvZiB0aGUgbmV3IE1FTV9UWVBFX1hTS19CVUZGX1BPT0wK
QVBJcy4gVGhlIEFGX1hEUCB6ZXJvLWNvcHkgcnhfYmkgcmluZyBpcyBub3cgc2ltcGx5IGEgc3Ry
dWN0IHhkcF9idWZmCnBvaW50ZXIuCgp2NC0+djU6IEZpeGVkICJ3YXJuaW5nOiBFeGNlc3MgZnVu
Y3Rpb24gcGFyYW1ldGVyICdiaScgZGVzY3JpcHRpb24gaW4KICAgICAgICAnaTQwZV9jb25zdHJ1
Y3Rfc2tiX3pjJyIuIChKYWt1YikKCkNjOiBpbnRlbC13aXJlZC1sYW5AbGlzdHMub3N1b3NsLm9y
ZwpTaWduZWQtb2ZmLWJ5OiBCasO2cm4gVMO2cGVsIDxiam9ybi50b3BlbEBpbnRlbC5jb20+Ci0t
LQogZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX21haW4uYyB8ICAxOSArLQog
ZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnguaCB8ICAgOSArLQogZHJp
dmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5jICB8IDM1MyArKy0tLS0tLS0t
LS0tLS0tLS0tLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5oICB8
ICAgMSAtCiA0IGZpbGVzIGNoYW5nZWQsIDQ3IGluc2VydGlvbnMoKyksIDMzNSBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfbWFp
bi5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX21haW4uYwppbmRleCAz
ZTE2OTViYjgyNjIuLmVhNzM5NWIzOTFlNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJu
ZXQvaW50ZWwvaTQwZS9pNDBlX21haW4uYworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRl
bC9pNDBlL2k0MGVfbWFpbi5jCkBAIC0zMjY2LDIxICszMjY2LDE5IEBAIHN0YXRpYyBpbnQgaTQw
ZV9jb25maWd1cmVfcnhfcmluZyhzdHJ1Y3QgaTQwZV9yaW5nICpyaW5nKQogCQlyZXQgPSBpNDBl
X2FsbG9jX3J4X2JpX3pjKHJpbmcpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKLQkJcmlu
Zy0+cnhfYnVmX2xlbiA9IHJpbmctPnhza191bWVtLT5jaHVua19zaXplX25vaHIgLQotCQkJCSAg
IFhEUF9QQUNLRVRfSEVBRFJPT007CisJCXJpbmctPnJ4X2J1Zl9sZW4gPSB4c2tfdW1lbV9nZXRf
cnhfZnJhbWVfc2l6ZShyaW5nLT54c2tfdW1lbSk7CiAJCS8qIEZvciBBRl9YRFAgWkMsIHdlIGRp
c2FsbG93IHBhY2tldHMgdG8gc3BhbiBvbgogCQkgKiBtdWx0aXBsZSBidWZmZXJzLCB0aHVzIGxl
dHRpbmcgdXMgc2tpcCB0aGF0CiAJCSAqIGhhbmRsaW5nIGluIHRoZSBmYXN0LXBhdGguCiAJCSAq
LwogCQljaGFpbl9sZW4gPSAxOwotCQlyaW5nLT56Y2EuZnJlZSA9IGk0MGVfemNhX2ZyZWU7CiAJ
CXJldCA9IHhkcF9yeHFfaW5mb19yZWdfbWVtX21vZGVsKCZyaW5nLT54ZHBfcnhxLAotCQkJCQkJ
IE1FTV9UWVBFX1pFUk9fQ09QWSwKLQkJCQkJCSAmcmluZy0+emNhKTsKKwkJCQkJCSBNRU1fVFlQ
RV9YU0tfQlVGRl9QT09MLAorCQkJCQkJIE5VTEwpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJl
dDsKIAkJZGV2X2luZm8oJnZzaS0+YmFjay0+cGRldi0+ZGV2LAotCQkJICJSZWdpc3RlcmVkIFhE
UCBtZW0gbW9kZWwgTUVNX1RZUEVfWkVST19DT1BZIG9uIFJ4IHJpbmcgJWRcbiIsCisJCQkgIlJl
Z2lzdGVyZWQgWERQIG1lbSBtb2RlbCBNRU1fVFlQRV9YU0tfQlVGRl9QT09MIG9uIFJ4IHJpbmcg
JWRcbiIsCiAJCQkgcmluZy0+cXVldWVfaW5kZXgpOwogCiAJfSBlbHNlIHsKQEAgLTMzNTEsOSAr
MzM0OSwxMiBAQCBzdGF0aWMgaW50IGk0MGVfY29uZmlndXJlX3J4X3Jpbmcoc3RydWN0IGk0MGVf
cmluZyAqcmluZykKIAlyaW5nLT50YWlsID0gaHctPmh3X2FkZHIgKyBJNDBFX1FSWF9UQUlMKHBm
X3EpOwogCXdyaXRlbCgwLCByaW5nLT50YWlsKTsKIAotCW9rID0gcmluZy0+eHNrX3VtZW0gPwot
CSAgICAgaTQwZV9hbGxvY19yeF9idWZmZXJzX3pjKHJpbmcsIEk0MEVfREVTQ19VTlVTRUQocmlu
ZykpIDoKLQkgICAgICFpNDBlX2FsbG9jX3J4X2J1ZmZlcnMocmluZywgSTQwRV9ERVNDX1VOVVNF
RChyaW5nKSk7CisJaWYgKHJpbmctPnhza191bWVtKSB7CisJCXhza19idWZmX3NldF9yeHFfaW5m
byhyaW5nLT54c2tfdW1lbSwgJnJpbmctPnhkcF9yeHEpOworCQlvayA9IGk0MGVfYWxsb2Nfcnhf
YnVmZmVyc196YyhyaW5nLCBJNDBFX0RFU0NfVU5VU0VEKHJpbmcpKTsKKwl9IGVsc2UgeworCQlv
ayA9ICFpNDBlX2FsbG9jX3J4X2J1ZmZlcnMocmluZywgSTQwRV9ERVNDX1VOVVNFRChyaW5nKSk7
CisJfQogCWlmICghb2spIHsKIAkJLyogTG9nIHRoaXMgaW4gY2FzZSB0aGUgdXNlciBoYXMgZm9y
Z290dGVuIHRvIGdpdmUgdGhlIGtlcm5lbAogCQkgKiBhbnkgYnVmZmVycywgZXZlbiBsYXRlciBp
biB0aGUgYXBwbGljYXRpb24uCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRl
bC9pNDBlL2k0MGVfdHhyeC5oIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBl
X3R4cnguaAppbmRleCBkMzQzNDk4ZThkZTUuLjVjMjU1OTc3ZmQ1OCAxMDA2NDQKLS0tIGEvZHJp
dmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnguaAorKysgYi9kcml2ZXJzL25l
dC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfdHhyeC5oCkBAIC0zMDEsMTIgKzMwMSw2IEBAIHN0
cnVjdCBpNDBlX3J4X2J1ZmZlciB7CiAJX191MTYgcGFnZWNudF9iaWFzOwogfTsKIAotc3RydWN0
IGk0MGVfcnhfYnVmZmVyX3pjIHsKLQlkbWFfYWRkcl90IGRtYTsKLQl2b2lkICphZGRyOwotCXU2
NCBoYW5kbGU7Ci19OwotCiBzdHJ1Y3QgaTQwZV9xdWV1ZV9zdGF0cyB7CiAJdTY0IHBhY2tldHM7
CiAJdTY0IGJ5dGVzOwpAQCAtMzU2LDcgKzM1MCw3IEBAIHN0cnVjdCBpNDBlX3JpbmcgewogCXVu
aW9uIHsKIAkJc3RydWN0IGk0MGVfdHhfYnVmZmVyICp0eF9iaTsKIAkJc3RydWN0IGk0MGVfcnhf
YnVmZmVyICpyeF9iaTsKLQkJc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpyeF9iaV96YzsKKwkJ
c3RydWN0IHhkcF9idWZmICoqcnhfYmlfemM7CiAJfTsKIAlERUNMQVJFX0JJVE1BUChzdGF0ZSwg
X19JNDBFX1JJTkdfU1RBVEVfTkJJVFMpOwogCXUxNiBxdWV1ZV9pbmRleDsJCS8qIFF1ZXVlIG51
bWJlciBvZiByaW5nICovCkBAIC00MTgsNyArNDEyLDYgQEAgc3RydWN0IGk0MGVfcmluZyB7CiAJ
c3RydWN0IGk0MGVfY2hhbm5lbCAqY2g7CiAJc3RydWN0IHhkcF9yeHFfaW5mbyB4ZHBfcnhxOwog
CXN0cnVjdCB4ZHBfdW1lbSAqeHNrX3VtZW07Ci0Jc3RydWN0IHplcm9fY29weV9hbGxvY2F0b3Ig
emNhOyAvKiBaQyBhbGxvY2F0b3IgYW5jaG9yICovCiB9IF9fX19jYWNoZWxpbmVfaW50ZXJub2Rl
YWxpZ25lZF9pbl9zbXA7CiAKIHN0YXRpYyBpbmxpbmUgYm9vbCByaW5nX3VzZXNfYnVpbGRfc2ti
KHN0cnVjdCBpNDBlX3JpbmcgKnJpbmcpCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5l
dC9pbnRlbC9pNDBlL2k0MGVfeHNrLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBl
L2k0MGVfeHNrLmMKaW5kZXggNGZjYTUyYTMwZWE0Li5mMzk1Mzc0NGM1MDUgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV94c2suYworKysgYi9kcml2ZXJz
L25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfeHNrLmMKQEAgLTIzLDY4ICsyMywxMSBAQCB2
b2lkIGk0MGVfY2xlYXJfcnhfYmlfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykKIAkgICAg
ICAgc2l6ZW9mKCpyeF9yaW5nLT5yeF9iaV96YykgKiByeF9yaW5nLT5jb3VudCk7CiB9CiAKLXN0
YXRpYyBzdHJ1Y3QgaTQwZV9yeF9idWZmZXJfemMgKmk0MGVfcnhfYmkoc3RydWN0IGk0MGVfcmlu
ZyAqcnhfcmluZywgdTMyIGlkeCkKK3N0YXRpYyBzdHJ1Y3QgeGRwX2J1ZmYgKippNDBlX3J4X2Jp
KHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsIHUzMiBpZHgpCiB7CiAJcmV0dXJuICZyeF9yaW5n
LT5yeF9iaV96Y1tpZHhdOwogfQogCi0vKioKLSAqIGk0MGVfeHNrX3VtZW1fZG1hX21hcCAtIERN
QSBtYXBzIGFsbCBVTUVNIG1lbW9yeSBmb3IgdGhlIG5ldGRldgotICogQHZzaTogQ3VycmVudCBW
U0kKLSAqIEB1bWVtOiBVTUVNIHRvIERNQSBtYXAKLSAqCi0gKiBSZXR1cm5zIDAgb24gc3VjY2Vz
cywgPDAgb24gZmFpbHVyZQotICoqLwotc3RhdGljIGludCBpNDBlX3hza191bWVtX2RtYV9tYXAo
c3RydWN0IGk0MGVfdnNpICp2c2ksIHN0cnVjdCB4ZHBfdW1lbSAqdW1lbSkKLXsKLQlzdHJ1Y3Qg
aTQwZV9wZiAqcGYgPSB2c2ktPmJhY2s7Ci0Jc3RydWN0IGRldmljZSAqZGV2OwotCXVuc2lnbmVk
IGludCBpLCBqOwotCWRtYV9hZGRyX3QgZG1hOwotCi0JZGV2ID0gJnBmLT5wZGV2LT5kZXY7Ci0J
Zm9yIChpID0gMDsgaSA8IHVtZW0tPm5wZ3M7IGkrKykgewotCQlkbWEgPSBkbWFfbWFwX3BhZ2Vf
YXR0cnMoZGV2LCB1bWVtLT5wZ3NbaV0sIDAsIFBBR0VfU0laRSwKLQkJCQkJIERNQV9CSURJUkVD
VElPTkFMLCBJNDBFX1JYX0RNQV9BVFRSKTsKLQkJaWYgKGRtYV9tYXBwaW5nX2Vycm9yKGRldiwg
ZG1hKSkKLQkJCWdvdG8gb3V0X3VubWFwOwotCi0JCXVtZW0tPnBhZ2VzW2ldLmRtYSA9IGRtYTsK
LQl9Ci0KLQlyZXR1cm4gMDsKLQotb3V0X3VubWFwOgotCWZvciAoaiA9IDA7IGogPCBpOyBqKysp
IHsKLQkJZG1hX3VubWFwX3BhZ2VfYXR0cnMoZGV2LCB1bWVtLT5wYWdlc1tpXS5kbWEsIFBBR0Vf
U0laRSwKLQkJCQkgICAgIERNQV9CSURJUkVDVElPTkFMLCBJNDBFX1JYX0RNQV9BVFRSKTsKLQkJ
dW1lbS0+cGFnZXNbaV0uZG1hID0gMDsKLQl9Ci0KLQlyZXR1cm4gLTE7Ci19Ci0KLS8qKgotICog
aTQwZV94c2tfdW1lbV9kbWFfdW5tYXAgLSBETUEgdW5tYXBzIGFsbCBVTUVNIG1lbW9yeSBmb3Ig
dGhlIG5ldGRldgotICogQHZzaTogQ3VycmVudCBWU0kKLSAqIEB1bWVtOiBVTUVNIHRvIERNQSBt
YXAKLSAqKi8KLXN0YXRpYyB2b2lkIGk0MGVfeHNrX3VtZW1fZG1hX3VubWFwKHN0cnVjdCBpNDBl
X3ZzaSAqdnNpLCBzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0pCi17Ci0Jc3RydWN0IGk0MGVfcGYgKnBm
ID0gdnNpLT5iYWNrOwotCXN0cnVjdCBkZXZpY2UgKmRldjsKLQl1bnNpZ25lZCBpbnQgaTsKLQot
CWRldiA9ICZwZi0+cGRldi0+ZGV2OwotCi0JZm9yIChpID0gMDsgaSA8IHVtZW0tPm5wZ3M7IGkr
KykgewotCQlkbWFfdW5tYXBfcGFnZV9hdHRycyhkZXYsIHVtZW0tPnBhZ2VzW2ldLmRtYSwgUEFH
RV9TSVpFLAotCQkJCSAgICAgRE1BX0JJRElSRUNUSU9OQUwsIEk0MEVfUlhfRE1BX0FUVFIpOwot
Ci0JCXVtZW0tPnBhZ2VzW2ldLmRtYSA9IDA7Ci0JfQotfQotCiAvKioKICAqIGk0MGVfeHNrX3Vt
ZW1fZW5hYmxlIC0gRW5hYmxlL2Fzc29jaWF0ZSBhIFVNRU0gdG8gYSBjZXJ0YWluIHJpbmcvcWlk
CiAgKiBAdnNpOiBDdXJyZW50IFZTSQpAQCAtOTcsNyArNDAsNiBAQCBzdGF0aWMgaW50IGk0MGVf
eHNrX3VtZW1fZW5hYmxlKHN0cnVjdCBpNDBlX3ZzaSAqdnNpLCBzdHJ1Y3QgeGRwX3VtZW0gKnVt
ZW0sCiAJCQkJdTE2IHFpZCkKIHsKIAlzdHJ1Y3QgbmV0X2RldmljZSAqbmV0ZGV2ID0gdnNpLT5u
ZXRkZXY7Ci0Jc3RydWN0IHhkcF91bWVtX2ZxX3JldXNlICpyZXVzZXE7CiAJYm9vbCBpZl9ydW5u
aW5nOwogCWludCBlcnI7CiAKQEAgLTExMSwxMyArNTMsNyBAQCBzdGF0aWMgaW50IGk0MGVfeHNr
X3VtZW1fZW5hYmxlKHN0cnVjdCBpNDBlX3ZzaSAqdnNpLCBzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0s
CiAJICAgIHFpZCA+PSBuZXRkZXYtPnJlYWxfbnVtX3R4X3F1ZXVlcykKIAkJcmV0dXJuIC1FSU5W
QUw7CiAKLQlyZXVzZXEgPSB4c2tfcmV1c2VxX3ByZXBhcmUodnNpLT5yeF9yaW5nc1swXS0+Y291
bnQpOwotCWlmICghcmV1c2VxKQotCQlyZXR1cm4gLUVOT01FTTsKLQotCXhza19yZXVzZXFfZnJl
ZSh4c2tfcmV1c2VxX3N3YXAodW1lbSwgcmV1c2VxKSk7Ci0KLQllcnIgPSBpNDBlX3hza191bWVt
X2RtYV9tYXAodnNpLCB1bWVtKTsKKwllcnIgPSB4c2tfYnVmZl9kbWFfbWFwKHVtZW0sICZ2c2kt
PmJhY2stPnBkZXYtPmRldiwgSTQwRV9SWF9ETUFfQVRUUik7CiAJaWYgKGVycikKIAkJcmV0dXJu
IGVycjsKIApAQCAtMTcwLDcgKzEwNiw3IEBAIHN0YXRpYyBpbnQgaTQwZV94c2tfdW1lbV9kaXNh
YmxlKHN0cnVjdCBpNDBlX3ZzaSAqdnNpLCB1MTYgcWlkKQogCX0KIAogCWNsZWFyX2JpdChxaWQs
IHZzaS0+YWZfeGRwX3pjX3Fwcyk7Ci0JaTQwZV94c2tfdW1lbV9kbWFfdW5tYXAodnNpLCB1bWVt
KTsKKwl4c2tfYnVmZl9kbWFfdW5tYXAodW1lbSwgSTQwRV9SWF9ETUFfQVRUUik7CiAKIAlpZiAo
aWZfcnVubmluZykgewogCQllcnIgPSBpNDBlX3F1ZXVlX3BhaXJfZW5hYmxlKHZzaSwgcWlkKTsK
QEAgLTIwOSwxMSArMTQ1LDkgQEAgaW50IGk0MGVfeHNrX3VtZW1fc2V0dXAoc3RydWN0IGk0MGVf
dnNpICp2c2ksIHN0cnVjdCB4ZHBfdW1lbSAqdW1lbSwKICAqKi8KIHN0YXRpYyBpbnQgaTQwZV9y
dW5feGRwX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsIHN0cnVjdCB4ZHBfYnVmZiAqeGRw
KQogewotCXN0cnVjdCB4ZHBfdW1lbSAqdW1lbSA9IHJ4X3JpbmctPnhza191bWVtOwogCWludCBl
cnIsIHJlc3VsdCA9IEk0MEVfWERQX1BBU1M7CiAJc3RydWN0IGk0MGVfcmluZyAqeGRwX3Jpbmc7
CiAJc3RydWN0IGJwZl9wcm9nICp4ZHBfcHJvZzsKLQl1NjQgb2Zmc2V0OwogCXUzMiBhY3Q7CiAK
IAlyY3VfcmVhZF9sb2NrKCk7CkBAIC0yMjIsOSArMTU2LDYgQEAgc3RhdGljIGludCBpNDBlX3J1
bl94ZHBfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgc3RydWN0IHhkcF9idWZmICp4ZHAp
CiAJICovCiAJeGRwX3Byb2cgPSBSRUFEX09OQ0UocnhfcmluZy0+eGRwX3Byb2cpOwogCWFjdCA9
IGJwZl9wcm9nX3J1bl94ZHAoeGRwX3Byb2csIHhkcCk7Ci0Jb2Zmc2V0ID0geGRwLT5kYXRhIC0g
eGRwLT5kYXRhX2hhcmRfc3RhcnQ7Ci0KLQl4ZHAtPmhhbmRsZSA9IHhza191bWVtX2FkanVzdF9v
ZmZzZXQodW1lbSwgeGRwLT5oYW5kbGUsIG9mZnNldCk7CiAKIAlzd2l0Y2ggKGFjdCkgewogCWNh
c2UgWERQX1BBU1M6CkBAIC0yNTEsMTA3ICsxODIsMjYgQEAgc3RhdGljIGludCBpNDBlX3J1bl94
ZHBfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgc3RydWN0IHhkcF9idWZmICp4ZHApCiAJ
cmV0dXJuIHJlc3VsdDsKIH0KIAotLyoqCi0gKiBpNDBlX2FsbG9jX2J1ZmZlcl96YyAtIEFsbG9j
YXRlcyBhbiBpNDBlX3J4X2J1ZmZlcl96YwotICogQHJ4X3Jpbmc6IFJ4IHJpbmcKLSAqIEBiaTog
UnggYnVmZmVyIHRvIHBvcHVsYXRlCi0gKgotICogVGhpcyBmdW5jdGlvbiBhbGxvY2F0ZXMgYW4g
UnggYnVmZmVyLiBUaGUgYnVmZmVyIGNhbiBjb21lIGZyb20gZmlsbAotICogcXVldWUsIG9yIHZp
YSB0aGUgcmVjeWNsZSBxdWV1ZSAobmV4dF90b19hbGxvYykuCi0gKgotICogUmV0dXJucyB0cnVl
IGZvciBhIHN1Y2Nlc3NmdWwgYWxsb2NhdGlvbiwgZmFsc2Ugb3RoZXJ3aXNlCi0gKiovCi1zdGF0
aWMgYm9vbCBpNDBlX2FsbG9jX2J1ZmZlcl96YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAot
CQkJCSBzdHJ1Y3QgaTQwZV9yeF9idWZmZXJfemMgKmJpKQotewotCXN0cnVjdCB4ZHBfdW1lbSAq
dW1lbSA9IHJ4X3JpbmctPnhza191bWVtOwotCXZvaWQgKmFkZHIgPSBiaS0+YWRkcjsKLQl1NjQg
aGFuZGxlLCBocjsKLQotCWlmIChhZGRyKSB7Ci0JCXJ4X3JpbmctPnJ4X3N0YXRzLnBhZ2VfcmV1
c2VfY291bnQrKzsKLQkJcmV0dXJuIHRydWU7Ci0JfQotCi0JaWYgKCF4c2tfdW1lbV9wZWVrX2Fk
ZHIodW1lbSwgJmhhbmRsZSkpIHsKLQkJcnhfcmluZy0+cnhfc3RhdHMuYWxsb2NfcGFnZV9mYWls
ZWQrKzsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQotCWhyID0gdW1lbS0+aGVhZHJvb20gKyBYRFBf
UEFDS0VUX0hFQURST09NOwotCi0JYmktPmRtYSA9IHhkcF91bWVtX2dldF9kbWEodW1lbSwgaGFu
ZGxlKTsKLQliaS0+ZG1hICs9IGhyOwotCi0JYmktPmFkZHIgPSB4ZHBfdW1lbV9nZXRfZGF0YSh1
bWVtLCBoYW5kbGUpOwotCWJpLT5hZGRyICs9IGhyOwotCi0JYmktPmhhbmRsZSA9IHhza191bWVt
X2FkanVzdF9vZmZzZXQodW1lbSwgaGFuZGxlLCB1bWVtLT5oZWFkcm9vbSk7Ci0KLQl4c2tfdW1l
bV9yZWxlYXNlX2FkZHIodW1lbSk7Ci0JcmV0dXJuIHRydWU7Ci19Ci0KLS8qKgotICogaTQwZV9h
bGxvY19idWZmZXJfc2xvd196YyAtIEFsbG9jYXRlcyBhbiBpNDBlX3J4X2J1ZmZlcl96YwotICog
QHJ4X3Jpbmc6IFJ4IHJpbmcKLSAqIEBiaTogUnggYnVmZmVyIHRvIHBvcHVsYXRlCi0gKgotICog
VGhpcyBmdW5jdGlvbiBhbGxvY2F0ZXMgYW4gUnggYnVmZmVyLiBUaGUgYnVmZmVyIGNhbiBjb21l
IGZyb20gZmlsbAotICogcXVldWUsIG9yIHZpYSB0aGUgcmV1c2UgcXVldWUuCi0gKgotICogUmV0
dXJucyB0cnVlIGZvciBhIHN1Y2Nlc3NmdWwgYWxsb2NhdGlvbiwgZmFsc2Ugb3RoZXJ3aXNlCi0g
KiovCi1zdGF0aWMgYm9vbCBpNDBlX2FsbG9jX2J1ZmZlcl9zbG93X3pjKHN0cnVjdCBpNDBlX3Jp
bmcgKnJ4X3JpbmcsCi0JCQkJICAgICAgc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpiaSkKLXsK
LQlzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0gPSByeF9yaW5nLT54c2tfdW1lbTsKLQl1NjQgaGFuZGxl
LCBocjsKLQotCWlmICgheHNrX3VtZW1fcGVla19hZGRyX3JxKHVtZW0sICZoYW5kbGUpKSB7Ci0J
CXJ4X3JpbmctPnJ4X3N0YXRzLmFsbG9jX3BhZ2VfZmFpbGVkKys7Ci0JCXJldHVybiBmYWxzZTsK
LQl9Ci0KLQloYW5kbGUgJj0gcnhfcmluZy0+eHNrX3VtZW0tPmNodW5rX21hc2s7Ci0KLQlociA9
IHVtZW0tPmhlYWRyb29tICsgWERQX1BBQ0tFVF9IRUFEUk9PTTsKLQotCWJpLT5kbWEgPSB4ZHBf
dW1lbV9nZXRfZG1hKHVtZW0sIGhhbmRsZSk7Ci0JYmktPmRtYSArPSBocjsKLQotCWJpLT5hZGRy
ID0geGRwX3VtZW1fZ2V0X2RhdGEodW1lbSwgaGFuZGxlKTsKLQliaS0+YWRkciArPSBocjsKLQot
CWJpLT5oYW5kbGUgPSB4c2tfdW1lbV9hZGp1c3Rfb2Zmc2V0KHVtZW0sIGhhbmRsZSwgdW1lbS0+
aGVhZHJvb20pOwotCi0JeHNrX3VtZW1fcmVsZWFzZV9hZGRyX3JxKHVtZW0pOwotCXJldHVybiB0
cnVlOwotfQotCi1zdGF0aWMgX19hbHdheXNfaW5saW5lIGJvb2wKLV9faTQwZV9hbGxvY19yeF9i
dWZmZXJzX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsIHUxNiBjb3VudCwKLQkJCSAgIGJv
b2wgYWxsb2Moc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKLQkJCQkgICAgICBzdHJ1Y3QgaTQw
ZV9yeF9idWZmZXJfemMgKmJpKSkKK2Jvb2wgaTQwZV9hbGxvY19yeF9idWZmZXJzX3pjKHN0cnVj
dCBpNDBlX3JpbmcgKnJ4X3JpbmcsIHUxNiBjb3VudCkKIHsKIAl1MTYgbnR1ID0gcnhfcmluZy0+
bmV4dF90b191c2U7CiAJdW5pb24gaTQwZV9yeF9kZXNjICpyeF9kZXNjOwotCXN0cnVjdCBpNDBl
X3J4X2J1ZmZlcl96YyAqYmk7CisJc3RydWN0IHhkcF9idWZmICoqYmksICp4ZHA7CisJZG1hX2Fk
ZHJfdCBkbWE7CiAJYm9vbCBvayA9IHRydWU7CiAKIAlyeF9kZXNjID0gSTQwRV9SWF9ERVNDKHJ4
X3JpbmcsIG50dSk7CiAJYmkgPSBpNDBlX3J4X2JpKHJ4X3JpbmcsIG50dSk7CiAJZG8gewotCQlp
ZiAoIWFsbG9jKHJ4X3JpbmcsIGJpKSkgeworCQl4ZHAgPSB4c2tfYnVmZl9hbGxvYyhyeF9yaW5n
LT54c2tfdW1lbSk7CisJCWlmICgheGRwKSB7CiAJCQlvayA9IGZhbHNlOwogCQkJZ290byBub19i
dWZmZXJzOwogCQl9Ci0KLQkJZG1hX3N5bmNfc2luZ2xlX3JhbmdlX2Zvcl9kZXZpY2Uocnhfcmlu
Zy0+ZGV2LCBiaS0+ZG1hLCAwLAotCQkJCQkJIHJ4X3JpbmctPnJ4X2J1Zl9sZW4sCi0JCQkJCQkg
RE1BX0JJRElSRUNUSU9OQUwpOwotCi0JCXJ4X2Rlc2MtPnJlYWQucGt0X2FkZHIgPSBjcHVfdG9f
bGU2NChiaS0+ZG1hKTsKKwkJKmJpID0geGRwOworCQlkbWEgPSB4c2tfYnVmZl94ZHBfZ2V0X2Rt
YSh4ZHApOworCQlyeF9kZXNjLT5yZWFkLnBrdF9hZGRyID0gY3B1X3RvX2xlNjQoZG1hKTsKKwkJ
cnhfZGVzYy0+cmVhZC5oZHJfYWRkciA9IDA7CiAKIAkJcnhfZGVzYysrOwogCQliaSsrOwpAQCAt
MzYzLDcgKzIxMyw2IEBAIF9faTQwZV9hbGxvY19yeF9idWZmZXJzX3pjKHN0cnVjdCBpNDBlX3Jp
bmcgKnJ4X3JpbmcsIHUxNiBjb3VudCwKIAkJCW50dSA9IDA7CiAJCX0KIAotCQlyeF9kZXNjLT53
Yi5xd29yZDEuc3RhdHVzX2Vycm9yX2xlbiA9IDA7CiAJCWNvdW50LS07CiAJfSB3aGlsZSAoY291
bnQpOwogCkBAIC0zNzQsMTMwICsyMjMsOSBAQCBfX2k0MGVfYWxsb2NfcnhfYnVmZmVyc196Yyhz
dHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLCB1MTYgY291bnQsCiAJcmV0dXJuIG9rOwogfQogCi0v
KioKLSAqIGk0MGVfYWxsb2NfcnhfYnVmZmVyc196YyAtIEFsbG9jYXRlcyBhIG51bWJlciBvZiBS
eCBidWZmZXJzCi0gKiBAcnhfcmluZzogUnggcmluZwotICogQGNvdW50OiBUaGUgbnVtYmVyIG9m
IGJ1ZmZlcnMgdG8gYWxsb2NhdGUKLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGFsbG9jYXRlcyBhIG51
bWJlciBvZiBSeCBidWZmZXJzIGZyb20gdGhlIHJldXNlIHF1ZXVlCi0gKiBvciBmaWxsIHJpbmcg
YW5kIHBsYWNlcyB0aGVtIG9uIHRoZSBSeCByaW5nLgotICoKLSAqIFJldHVybnMgdHJ1ZSBmb3Ig
YSBzdWNjZXNzZnVsIGFsbG9jYXRpb24sIGZhbHNlIG90aGVyd2lzZQotICoqLwotYm9vbCBpNDBl
X2FsbG9jX3J4X2J1ZmZlcnNfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgdTE2IGNvdW50
KQotewotCXJldHVybiBfX2k0MGVfYWxsb2NfcnhfYnVmZmVyc196YyhyeF9yaW5nLCBjb3VudCwK
LQkJCQkJICBpNDBlX2FsbG9jX2J1ZmZlcl9zbG93X3pjKTsKLX0KLQotLyoqCi0gKiBpNDBlX2Fs
bG9jX3J4X2J1ZmZlcnNfZmFzdF96YyAtIEFsbG9jYXRlcyBhIG51bWJlciBvZiBSeCBidWZmZXJz
Ci0gKiBAcnhfcmluZzogUnggcmluZwotICogQGNvdW50OiBUaGUgbnVtYmVyIG9mIGJ1ZmZlcnMg
dG8gYWxsb2NhdGUKLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGFsbG9jYXRlcyBhIG51bWJlciBvZiBS
eCBidWZmZXJzIGZyb20gdGhlIGZpbGwgcmluZwotICogb3IgdGhlIGludGVybmFsIHJlY3ljbGUg
bWVjaGFuaXNtIGFuZCBwbGFjZXMgdGhlbSBvbiB0aGUgUnggcmluZy4KLSAqCi0gKiBSZXR1cm5z
IHRydWUgZm9yIGEgc3VjY2Vzc2Z1bCBhbGxvY2F0aW9uLCBmYWxzZSBvdGhlcndpc2UKLSAqKi8K
LXN0YXRpYyBib29sIGk0MGVfYWxsb2NfcnhfYnVmZmVyc19mYXN0X3pjKHN0cnVjdCBpNDBlX3Jp
bmcgKnJ4X3JpbmcsIHUxNiBjb3VudCkKLXsKLQlyZXR1cm4gX19pNDBlX2FsbG9jX3J4X2J1ZmZl
cnNfemMocnhfcmluZywgY291bnQsCi0JCQkJCSAgaTQwZV9hbGxvY19idWZmZXJfemMpOwotfQot
Ci0vKioKLSAqIGk0MGVfZ2V0X3J4X2J1ZmZlcl96YyAtIFJldHVybiB0aGUgY3VycmVudCBSeCBi
dWZmZXIKLSAqIEByeF9yaW5nOiBSeCByaW5nCi0gKiBAc2l6ZTogVGhlIHNpemUgb2YgdGhlIHJ4
IGJ1ZmZlciAocmVhZCBmcm9tIGRlc2NyaXB0b3IpCi0gKgotICogVGhpcyBmdW5jdGlvbiByZXR1
cm5zIHRoZSBjdXJyZW50LCByZWNlaXZlZCBSeCBidWZmZXIsIGFuZCBhbHNvCi0gKiBkb2VzIERN
QSBzeW5jaHJvbml6YXRpb24uICB0aGUgUnggcmluZy4KLSAqCi0gKiBSZXR1cm5zIHRoZSByZWNl
aXZlZCBSeCBidWZmZXIKLSAqKi8KLXN0YXRpYyBzdHJ1Y3QgaTQwZV9yeF9idWZmZXJfemMgKmk0
MGVfZ2V0X3J4X2J1ZmZlcl96YygKLQlzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAotCWNvbnN0
IHVuc2lnbmVkIGludCBzaXplKQotewotCXN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqYmk7Ci0K
LQliaSA9IGk0MGVfcnhfYmkocnhfcmluZywgcnhfcmluZy0+bmV4dF90b19jbGVhbik7Ci0KLQkv
KiB3ZSBhcmUgcmV1c2luZyBzbyBzeW5jIHRoaXMgYnVmZmVyIGZvciBDUFUgdXNlICovCi0JZG1h
X3N5bmNfc2luZ2xlX3JhbmdlX2Zvcl9jcHUocnhfcmluZy0+ZGV2LAotCQkJCSAgICAgIGJpLT5k
bWEsIDAsCi0JCQkJICAgICAgc2l6ZSwKLQkJCQkgICAgICBETUFfQklESVJFQ1RJT05BTCk7Ci0K
LQlyZXR1cm4gYmk7Ci19Ci0KLS8qKgotICogaTQwZV9yZXVzZV9yeF9idWZmZXJfemMgLSBSZWN5
Y2xlIGFuIFJ4IGJ1ZmZlcgotICogQHJ4X3Jpbmc6IFJ4IHJpbmcKLSAqIEBvbGRfYmk6IFRoZSBS
eCBidWZmZXIgdG8gcmVjeWNsZQotICoKLSAqIFRoaXMgZnVuY3Rpb24gcmVjeWNsZXMgYSBmaW5p
c2hlZCBSeCBidWZmZXIsIGFuZCBwbGFjZXMgaXQgb24gdGhlCi0gKiByZWN5Y2xlIHF1ZXVlIChu
ZXh0X3RvX2FsbG9jKS4KLSAqKi8KLXN0YXRpYyB2b2lkIGk0MGVfcmV1c2VfcnhfYnVmZmVyX3pj
KHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsCi0JCQkJICAgIHN0cnVjdCBpNDBlX3J4X2J1ZmZl
cl96YyAqb2xkX2JpKQotewotCXN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqbmV3X2JpID0gaTQw
ZV9yeF9iaShyeF9yaW5nLAotCQkJCQkJICAgICAgcnhfcmluZy0+bmV4dF90b19hbGxvYyk7Ci0J
dTE2IG50YSA9IHJ4X3JpbmctPm5leHRfdG9fYWxsb2M7Ci0KLQkvKiB1cGRhdGUsIGFuZCBzdG9y
ZSBuZXh0IHRvIGFsbG9jICovCi0JbnRhKys7Ci0JcnhfcmluZy0+bmV4dF90b19hbGxvYyA9IChu
dGEgPCByeF9yaW5nLT5jb3VudCkgPyBudGEgOiAwOwotCi0JLyogdHJhbnNmZXIgcGFnZSBmcm9t
IG9sZCBidWZmZXIgdG8gbmV3IGJ1ZmZlciAqLwotCW5ld19iaS0+ZG1hID0gb2xkX2JpLT5kbWE7
Ci0JbmV3X2JpLT5hZGRyID0gb2xkX2JpLT5hZGRyOwotCW5ld19iaS0+aGFuZGxlID0gb2xkX2Jp
LT5oYW5kbGU7Ci0KLQlvbGRfYmktPmFkZHIgPSBOVUxMOwotfQotCi0vKioKLSAqIGk0MGVfemNh
X2ZyZWUgLSBGcmVlIGNhbGxiYWNrIGZvciBNRU1fVFlQRV9aRVJPX0NPUFkgYWxsb2NhdGlvbnMK
LSAqIEBhbGxvYzogWmVyby1jb3B5IGFsbG9jYXRvcgotICogQGhhbmRsZTogQnVmZmVyIGhhbmRs
ZQotICoqLwotdm9pZCBpNDBlX3pjYV9mcmVlKHN0cnVjdCB6ZXJvX2NvcHlfYWxsb2NhdG9yICph
bGxvYywgdW5zaWduZWQgbG9uZyBoYW5kbGUpCi17Ci0Jc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pj
ICpiaTsKLQlzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nOwotCXU2NCBociwgbWFzazsKLQl1MTYg
bnRhOwotCi0JcnhfcmluZyA9IGNvbnRhaW5lcl9vZihhbGxvYywgc3RydWN0IGk0MGVfcmluZywg
emNhKTsKLQlociA9IHJ4X3JpbmctPnhza191bWVtLT5oZWFkcm9vbSArIFhEUF9QQUNLRVRfSEVB
RFJPT007Ci0JbWFzayA9IHJ4X3JpbmctPnhza191bWVtLT5jaHVua19tYXNrOwotCi0JbnRhID0g
cnhfcmluZy0+bmV4dF90b19hbGxvYzsKLQliaSA9IGk0MGVfcnhfYmkocnhfcmluZywgbnRhKTsK
LQotCW50YSsrOwotCXJ4X3JpbmctPm5leHRfdG9fYWxsb2MgPSAobnRhIDwgcnhfcmluZy0+Y291
bnQpID8gbnRhIDogMDsKLQotCWhhbmRsZSAmPSBtYXNrOwotCi0JYmktPmRtYSA9IHhkcF91bWVt
X2dldF9kbWEocnhfcmluZy0+eHNrX3VtZW0sIGhhbmRsZSk7Ci0JYmktPmRtYSArPSBocjsKLQot
CWJpLT5hZGRyID0geGRwX3VtZW1fZ2V0X2RhdGEocnhfcmluZy0+eHNrX3VtZW0sIGhhbmRsZSk7
Ci0JYmktPmFkZHIgKz0gaHI7Ci0KLQliaS0+aGFuZGxlID0geHNrX3VtZW1fYWRqdXN0X29mZnNl
dChyeF9yaW5nLT54c2tfdW1lbSwgKHU2NCloYW5kbGUsCi0JCQkJCSAgICByeF9yaW5nLT54c2tf
dW1lbS0+aGVhZHJvb20pOwotfQotCiAvKioKICAqIGk0MGVfY29uc3RydWN0X3NrYl96YyAtIENy
ZWF0ZSBza2J1ZmZmIGZyb20gemVyby1jb3B5IFJ4IGJ1ZmZlcgogICogQHJ4X3Jpbmc6IFJ4IHJp
bmcKLSAqIEBiaTogUnggYnVmZmVyCiAgKiBAeGRwOiB4ZHBfYnVmZgogICoKICAqIFRoaXMgZnVu
Y3Rpb25zIGFsbG9jYXRlcyBhIG5ldyBza2IgZnJvbSBhIHplcm8tY29weSBSeCBidWZmZXIuCkBA
IC01MDUsNyArMjMzLDYgQEAgdm9pZCBpNDBlX3pjYV9mcmVlKHN0cnVjdCB6ZXJvX2NvcHlfYWxs
b2NhdG9yICphbGxvYywgdW5zaWduZWQgbG9uZyBoYW5kbGUpCiAgKiBSZXR1cm5zIHRoZSBza2Is
IG9yIE5VTEwgb24gZmFpbHVyZS4KICAqKi8KIHN0YXRpYyBzdHJ1Y3Qgc2tfYnVmZiAqaTQwZV9j
b25zdHJ1Y3Rfc2tiX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsCi0JCQkJCSAgICAgc3Ry
dWN0IGk0MGVfcnhfYnVmZmVyX3pjICpiaSwKIAkJCQkJICAgICBzdHJ1Y3QgeGRwX2J1ZmYgKnhk
cCkKIHsKIAl1bnNpZ25lZCBpbnQgbWV0YXNpemUgPSB4ZHAtPmRhdGEgLSB4ZHAtPmRhdGFfbWV0
YTsKQEAgLTUyNCw3ICsyNTEsNyBAQCBzdGF0aWMgc3RydWN0IHNrX2J1ZmYgKmk0MGVfY29uc3Ry
dWN0X3NrYl96YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAogCWlmIChtZXRhc2l6ZSkKIAkJ
c2tiX21ldGFkYXRhX3NldChza2IsIG1ldGFzaXplKTsKIAotCWk0MGVfcmV1c2VfcnhfYnVmZmVy
X3pjKHJ4X3JpbmcsIGJpKTsKKwl4c2tfYnVmZl9mcmVlKHhkcCk7CiAJcmV0dXJuIHNrYjsKIH0K
IApAQCAtNTM5LDI1ICsyNjYsMjAgQEAgaW50IGk0MGVfY2xlYW5fcnhfaXJxX3pjKHN0cnVjdCBp
NDBlX3JpbmcgKnJ4X3JpbmcsIGludCBidWRnZXQpCiB7CiAJdW5zaWduZWQgaW50IHRvdGFsX3J4
X2J5dGVzID0gMCwgdG90YWxfcnhfcGFja2V0cyA9IDA7CiAJdTE2IGNsZWFuZWRfY291bnQgPSBJ
NDBFX0RFU0NfVU5VU0VEKHJ4X3JpbmcpOwotCXN0cnVjdCB4ZHBfdW1lbSAqdW1lbSA9IHJ4X3Jp
bmctPnhza191bWVtOwogCXVuc2lnbmVkIGludCB4ZHBfcmVzLCB4ZHBfeG1pdCA9IDA7CiAJYm9v
bCBmYWlsdXJlID0gZmFsc2U7CiAJc3RydWN0IHNrX2J1ZmYgKnNrYjsKLQlzdHJ1Y3QgeGRwX2J1
ZmYgeGRwOwotCi0JeGRwLnJ4cSA9ICZyeF9yaW5nLT54ZHBfcnhxOwotCXhkcC5mcmFtZV9zeiA9
IHhza191bWVtX3hkcF9mcmFtZV9zeih1bWVtKTsKIAogCXdoaWxlIChsaWtlbHkodG90YWxfcnhf
cGFja2V0cyA8ICh1bnNpZ25lZCBpbnQpYnVkZ2V0KSkgewotCQlzdHJ1Y3QgaTQwZV9yeF9idWZm
ZXJfemMgKmJpOwogCQl1bmlvbiBpNDBlX3J4X2Rlc2MgKnJ4X2Rlc2M7CisJCXN0cnVjdCB4ZHBf
YnVmZiAqKmJpOwogCQl1bnNpZ25lZCBpbnQgc2l6ZTsKIAkJdTY0IHF3b3JkOwogCiAJCWlmIChj
bGVhbmVkX2NvdW50ID49IEk0MEVfUlhfQlVGRkVSX1dSSVRFKSB7CiAJCQlmYWlsdXJlID0gZmFp
bHVyZSB8fAotCQkJCSAgIWk0MGVfYWxsb2NfcnhfYnVmZmVyc19mYXN0X3pjKHJ4X3JpbmcsCi0J
CQkJCQkJCSBjbGVhbmVkX2NvdW50KTsKKwkJCQkgICFpNDBlX2FsbG9jX3J4X2J1ZmZlcnNfemMo
cnhfcmluZywKKwkJCQkJCQkgICAgY2xlYW5lZF9jb3VudCk7CiAJCQljbGVhbmVkX2NvdW50ID0g
MDsKIAkJfQogCkBAIC01NzUsOSArMjk3LDEwIEBAIGludCBpNDBlX2NsZWFuX3J4X2lycV96Yyhz
dHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLCBpbnQgYnVkZ2V0KQogCQkJCQkJICAgICAgcnhfZGVz
Yy0+cmF3LnF3b3JkWzBdLAogCQkJCQkJICAgICAgcXdvcmQpOwogCQkJYmkgPSBpNDBlX3J4X2Jp
KHJ4X3JpbmcsIHJ4X3JpbmctPm5leHRfdG9fY2xlYW4pOwotCQkJaTQwZV9pbmNfbnRjKHJ4X3Jp
bmcpOwotCQkJaTQwZV9yZXVzZV9yeF9idWZmZXJfemMocnhfcmluZywgYmkpOworCQkJeHNrX2J1
ZmZfZnJlZSgqYmkpOworCQkJKmJpID0gTlVMTDsKIAkJCWNsZWFuZWRfY291bnQrKzsKKwkJCWk0
MGVfaW5jX250YyhyeF9yaW5nKTsKIAkJCWNvbnRpbnVlOwogCQl9CiAKQEAgLTU4NywyMiArMzEw
LDE4IEBAIGludCBpNDBlX2NsZWFuX3J4X2lycV96YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5n
LCBpbnQgYnVkZ2V0KQogCQlpZiAoIXNpemUpCiAJCQlicmVhazsKIAotCQliaSA9IGk0MGVfZ2V0
X3J4X2J1ZmZlcl96YyhyeF9yaW5nLCBzaXplKTsKLQkJeGRwLmRhdGEgPSBiaS0+YWRkcjsKLQkJ
eGRwLmRhdGFfbWV0YSA9IHhkcC5kYXRhOwotCQl4ZHAuZGF0YV9oYXJkX3N0YXJ0ID0geGRwLmRh
dGEgLSBYRFBfUEFDS0VUX0hFQURST09NOwotCQl4ZHAuZGF0YV9lbmQgPSB4ZHAuZGF0YSArIHNp
emU7Ci0JCXhkcC5oYW5kbGUgPSBiaS0+aGFuZGxlOworCQliaSA9IGk0MGVfcnhfYmkocnhfcmlu
ZywgcnhfcmluZy0+bmV4dF90b19jbGVhbik7CisJCSgqYmkpLT5kYXRhX2VuZCA9ICgqYmkpLT5k
YXRhICsgc2l6ZTsKKwkJeHNrX2J1ZmZfZG1hX3N5bmNfZm9yX2NwdSgqYmkpOwogCi0JCXhkcF9y
ZXMgPSBpNDBlX3J1bl94ZHBfemMocnhfcmluZywgJnhkcCk7CisJCXhkcF9yZXMgPSBpNDBlX3J1
bl94ZHBfemMocnhfcmluZywgKmJpKTsKIAkJaWYgKHhkcF9yZXMpIHsKLQkJCWlmICh4ZHBfcmVz
ICYgKEk0MEVfWERQX1RYIHwgSTQwRV9YRFBfUkVESVIpKSB7CisJCQlpZiAoeGRwX3JlcyAmIChJ
NDBFX1hEUF9UWCB8IEk0MEVfWERQX1JFRElSKSkKIAkJCQl4ZHBfeG1pdCB8PSB4ZHBfcmVzOwot
CQkJCWJpLT5hZGRyID0gTlVMTDsKLQkJCX0gZWxzZSB7Ci0JCQkJaTQwZV9yZXVzZV9yeF9idWZm
ZXJfemMocnhfcmluZywgYmkpOwotCQkJfQorCQkJZWxzZQorCQkJCXhza19idWZmX2ZyZWUoKmJp
KTsKIAorCQkJKmJpID0gTlVMTDsKIAkJCXRvdGFsX3J4X2J5dGVzICs9IHNpemU7CiAJCQl0b3Rh
bF9yeF9wYWNrZXRzKys7CiAKQEAgLTYxOCw3ICszMzcsOCBAQCBpbnQgaTQwZV9jbGVhbl9yeF9p
cnFfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgaW50IGJ1ZGdldCkKIAkJICogQklUKEk0
MEVfUlhEX1FXMV9FUlJPUl9TSElGVCkuIFRoaXMgaXMgZHVlIHRvIHRoYXQKIAkJICogU0JQIGlz
ICpub3QqIHNldCBpbiBQUlRfU0JQVlNJIChkZWZhdWx0IG5vdCBzZXQpLgogCQkgKi8KLQkJc2ti
ID0gaTQwZV9jb25zdHJ1Y3Rfc2tiX3pjKHJ4X3JpbmcsIGJpLCAmeGRwKTsKKwkJc2tiID0gaTQw
ZV9jb25zdHJ1Y3Rfc2tiX3pjKHJ4X3JpbmcsICpiaSk7CisJCSpiaSA9IE5VTEw7CiAJCWlmICgh
c2tiKSB7CiAJCQlyeF9yaW5nLT5yeF9zdGF0cy5hbGxvY19idWZmX2ZhaWxlZCsrOwogCQkJYnJl
YWs7CkBAIC02NzYsMTAgKzM5Niw5IEBAIHN0YXRpYyBib29sIGk0MGVfeG1pdF96YyhzdHJ1Y3Qg
aTQwZV9yaW5nICp4ZHBfcmluZywgdW5zaWduZWQgaW50IGJ1ZGdldCkKIAkJaWYgKCF4c2tfdW1l
bV9jb25zdW1lX3R4KHhkcF9yaW5nLT54c2tfdW1lbSwgJmRlc2MpKQogCQkJYnJlYWs7CiAKLQkJ
ZG1hID0geGRwX3VtZW1fZ2V0X2RtYSh4ZHBfcmluZy0+eHNrX3VtZW0sIGRlc2MuYWRkcik7Ci0K
LQkJZG1hX3N5bmNfc2luZ2xlX2Zvcl9kZXZpY2UoeGRwX3JpbmctPmRldiwgZG1hLCBkZXNjLmxl
biwKLQkJCQkJICAgRE1BX0JJRElSRUNUSU9OQUwpOworCQlkbWEgPSB4c2tfYnVmZl9yYXdfZ2V0
X2RtYSh4ZHBfcmluZy0+eHNrX3VtZW0sIGRlc2MuYWRkcik7CisJCXhza19idWZmX3Jhd19kbWFf
c3luY19mb3JfZGV2aWNlKHhkcF9yaW5nLT54c2tfdW1lbSwgZG1hLAorCQkJCQkJIGRlc2MubGVu
KTsKIAogCQl0eF9iaSA9ICZ4ZHBfcmluZy0+dHhfYmlbeGRwX3JpbmctPm5leHRfdG9fdXNlXTsK
IAkJdHhfYmktPmJ5dGVjb3VudCA9IGRlc2MubGVuOwpAQCAtODM4LDEzICs1NTcsMTMgQEAgdm9p
ZCBpNDBlX3hza19jbGVhbl9yeF9yaW5nKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcpCiAJdTE2
IGk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgcnhfcmluZy0+Y291bnQ7IGkrKykgewotCQlzdHJ1Y3Qg
aTQwZV9yeF9idWZmZXJfemMgKnJ4X2JpID0gaTQwZV9yeF9iaShyeF9yaW5nLCBpKTsKKwkJc3Ry
dWN0IHhkcF9idWZmICpyeF9iaSA9ICppNDBlX3J4X2JpKHJ4X3JpbmcsIGkpOwogCi0JCWlmICgh
cnhfYmktPmFkZHIpCisJCWlmICghcnhfYmkpCiAJCQljb250aW51ZTsKIAotCQl4c2tfdW1lbV9m
cV9yZXVzZShyeF9yaW5nLT54c2tfdW1lbSwgcnhfYmktPmhhbmRsZSk7Ci0JCXJ4X2JpLT5hZGRy
ID0gTlVMTDsKKwkJeHNrX2J1ZmZfZnJlZShyeF9iaSk7CisJCXJ4X2JpID0gTlVMTDsKIAl9CiB9
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV94c2su
aCBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV94c2suaAppbmRleCBmNWUy
OTJjMjE4ZWUuLmVhOTE5YTdkNjBlYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQv
aW50ZWwvaTQwZS9pNDBlX3hzay5oCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0
MGUvaTQwZV94c2suaApAQCAtMTIsNyArMTIsNiBAQCBpbnQgaTQwZV9xdWV1ZV9wYWlyX2Rpc2Fi
bGUoc3RydWN0IGk0MGVfdnNpICp2c2ksIGludCBxdWV1ZV9wYWlyKTsKIGludCBpNDBlX3F1ZXVl
X3BhaXJfZW5hYmxlKHN0cnVjdCBpNDBlX3ZzaSAqdnNpLCBpbnQgcXVldWVfcGFpcik7CiBpbnQg
aTQwZV94c2tfdW1lbV9zZXR1cChzdHJ1Y3QgaTQwZV92c2kgKnZzaSwgc3RydWN0IHhkcF91bWVt
ICp1bWVtLAogCQkJdTE2IHFpZCk7Ci12b2lkIGk0MGVfemNhX2ZyZWUoc3RydWN0IHplcm9fY29w
eV9hbGxvY2F0b3IgKmFsbG9jLCB1bnNpZ25lZCBsb25nIGhhbmRsZSk7CiBib29sIGk0MGVfYWxs
b2NfcnhfYnVmZmVyc196YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLCB1MTYgY2xlYW5lZF9j
b3VudCk7CiBpbnQgaTQwZV9jbGVhbl9yeF9pcnFfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmlu
ZywgaW50IGJ1ZGdldCk7CiAKLS0gCjIuMjUuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KSW50ZWwtd2lyZWQtbGFuIG1haWxpbmcgbGlzdApJbnRlbC13
aXJlZC1sYW5Ab3N1b3NsLm9yZwpodHRwczovL2xpc3RzLm9zdW9zbC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC13aXJlZC1sYW4K
