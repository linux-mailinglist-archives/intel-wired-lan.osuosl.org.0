Return-Path: <intel-wired-lan-bounces@osuosl.org>
X-Original-To: lists+intel-wired-lan@lfdr.de
Delivered-To: lists+intel-wired-lan@lfdr.de
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
	by mail.lfdr.de (Postfix) with ESMTPS id D37AA1DBE1C
	for <lists+intel-wired-lan@lfdr.de>; Wed, 20 May 2020 21:38:53 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by silver.osuosl.org (Postfix) with ESMTP id 3C35A25067;
	Wed, 20 May 2020 19:38:51 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id YHoL1JoK0KjS; Wed, 20 May 2020 19:38:51 +0000 (UTC)
Received: from ash.osuosl.org (ash.osuosl.org [140.211.166.34])
	by silver.osuosl.org (Postfix) with ESMTP id 3D54524E00;
	Wed, 20 May 2020 19:38:47 +0000 (UTC)
X-Original-To: intel-wired-lan@lists.osuosl.org
Delivered-To: intel-wired-lan@lists.osuosl.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by ash.osuosl.org (Postfix) with ESMTP id A23451BF424
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 09:48:53 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id 7174C2035C
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 09:48:53 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id v+LOIwU31otX for <intel-wired-lan@lists.osuosl.org>;
 Wed, 20 May 2020 09:48:51 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mail-pl1-f193.google.com (mail-pl1-f193.google.com
 [209.85.214.193])
 by silver.osuosl.org (Postfix) with ESMTPS id 6C46F20439
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 09:48:51 +0000 (UTC)
Received: by mail-pl1-f193.google.com with SMTP id s20so1100343plp.6
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 02:48:51 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=yX54DFS4Lj3EX+oO3ThePMZHZyM/8+OvQ2E21Szo59Y=;
 b=IQQetgG9wZX6AG5NDDH8TUF9JXvSqDcPtp+vS33+bX7mYSEm+VJqkpEkH4FoQLcPj4
 2iqMPhDuJGzSAOrrUWN5rPkwme86p+ttEXoIVI81VBQuj6htlN2z31yFjbs/Zshu6CHX
 dWkG35Wk42CzhF5CLxKDSC7idNMm/vlJbjnNYywSpRFoLQcia/xXtEKAX9n1lcQG/dW2
 OsNbA5vqmLMrwO7TdULbKrSzmWoziSdwt2NMRWM8Ts1RveiVapk1jXEulfy/qvIGOAGj
 kxL9GuqamgKDwgHbVDV+PgZNaZkDJj73gc8f2JXdLEGdAQhfZOC+k7nmu3OIzvArU26M
 ktig==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=yX54DFS4Lj3EX+oO3ThePMZHZyM/8+OvQ2E21Szo59Y=;
 b=DXg3HMu+oAO974gX7G+1BqOGJZ8h28yyu0Q2p4Py3nhAW1oi3M/Rcv2cKMyhwwyVGR
 /HEXKTIIrZy4fNM/hQBkpuqGfpqfWE6tA3ZGeooLxUunsCDUR+vArPMh6B+COnWtWJH1
 /e8SHXmKI6lQ1p98UqpcOZa/McwqkLokMUj3EpzElGIs7/s9tmIBBA8YqvF+5KRVk8yt
 dKJ4FAQIJfcmEr3oiTvF4b0unZTHQP2LNgrymGOHkzo1Ir6HLAUfD/k3Z26O+YFVwBe7
 Y8uMfme0P1jMVBY1paJjHevFiQVlcP1UnqDDRlz3i417IXsaA3dQE6CzB7tmzKgq16dy
 EHsA==
X-Gm-Message-State: AOAM532dTdCTmFn8RqIg7ODso/IEcaYWpziQuv8R0Zvm6Imh0COoFxVF
 pz/svf44XhE3TNgBQZ7crsc=
X-Google-Smtp-Source: ABdhPJzvJXS5ZpEp4ZdLThvT9SucPKdG15b6XCc3GA6fQDlGmiolL7lgMdqfN5VD+/TtTurozpFTTg==
X-Received: by 2002:a17:90a:f108:: with SMTP id
 cc8mr4499134pjb.198.1589968130800; 
 Wed, 20 May 2020 02:48:50 -0700 (PDT)
Received: from btopel-mobl.ger.intel.com (fmdmzpr03-ext.fm.intel.com.
 [192.55.54.38])
 by smtp.gmail.com with ESMTPSA id c124sm1707494pfb.187.2020.05.20.02.48.43
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Wed, 20 May 2020 02:48:50 -0700 (PDT)
From: =?UTF-8?q?Bj=C3=B6rn=20T=C3=B6pel?= <bjorn.topel@gmail.com>
To: ast@kernel.org, daniel@iogearbox.net, davem@davemloft.net, kuba@kernel.org,
 hawk@kernel.org, john.fastabend@gmail.com, netdev@vger.kernel.org,
 bpf@vger.kernel.org, magnus.karlsson@intel.com, jonathan.lemon@gmail.com,
 jeffrey.t.kirsher@intel.com
Date: Wed, 20 May 2020 11:47:34 +0200
Message-Id: <20200520094742.337678-8-bjorn.topel@gmail.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20200520094742.337678-1-bjorn.topel@gmail.com>
References: <20200520094742.337678-1-bjorn.topel@gmail.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 20 May 2020 19:38:45 +0000
Subject: [Intel-wired-lan] [PATCH bpf-next v4 07/15] i40e: separate kernel
 allocated rx_bi rings from AF_XDP rings
X-BeenThere: intel-wired-lan@osuosl.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel Wired Ethernet Linux Kernel Driver Development
 <intel-wired-lan.osuosl.org>
List-Unsubscribe: <https://lists.osuosl.org/mailman/options/intel-wired-lan>, 
 <mailto:intel-wired-lan-request@osuosl.org?subject=unsubscribe>
List-Archive: <http://lists.osuosl.org/pipermail/intel-wired-lan/>
List-Post: <mailto:intel-wired-lan@osuosl.org>
List-Help: <mailto:intel-wired-lan-request@osuosl.org?subject=help>
List-Subscribe: <https://lists.osuosl.org/mailman/listinfo/intel-wired-lan>,
 <mailto:intel-wired-lan-request@osuosl.org?subject=subscribe>
Cc: maximmi@mellanox.com,
 =?UTF-8?q?Bj=C3=B6rn=20T=C3=B6pel?= <bjorn.topel@intel.com>,
 maciej.fijalkowski@intel.com, intel-wired-lan@lists.osuosl.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-wired-lan-bounces@osuosl.org
Sender: "Intel-wired-lan" <intel-wired-lan-bounces@osuosl.org>

RnJvbTogQmrDtnJuIFTDtnBlbCA8Ympvcm4udG9wZWxAaW50ZWwuY29tPgoKQ29udGludWluZyB0
aGUgcGF0aCB0byBzdXBwb3J0IE1FTV9UWVBFX1hTS19CVUZGX1BPT0wsIHRoZSBBRl9YRFAKemVy
by1jb3B5L3NrX2J1ZmYgcnhfYmkgcmluZ3MgYXJlIG5vdyBzZXBhcmF0ZS4gRnVuY3Rpb25zIHRv
IHByb3Blcmx5CmFsbG9jYXRlIHRoZSBkaWZmZXJlbnQgcmluZ3MgYXJlIGFkZGVkIGFzIHdlbGwu
Cgp2My0+djQ6IE1hZGUgaTQwZV9mZF9oYW5kbGVfc3RhdHVzKCkgc3RhdGljLiAoa2J1aWxkIHRl
c3Qgcm9ib3QpCgpDYzogaW50ZWwtd2lyZWQtbGFuQGxpc3RzLm9zdW9zbC5vcmcKU2lnbmVkLW9m
Zi1ieTogQmrDtnJuIFTDtnBlbCA8Ympvcm4udG9wZWxAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMv
bmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV9tYWluLmMgICB8ICAgNyArKwogZHJpdmVycy9u
ZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnguYyAgIHwgMTE5ICsrKysrKystLS0tLS0t
LS0tLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnguaCAgIHwgIDIy
ICsrLS0KIC4uLi9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfdHhyeF9jb21tb24uaCAgICB8ICA0
MCArKysrKy0KIGRyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV90eXBlLmggICB8
ICAgNSArLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5jICAgIHwg
IDc0ICsrKysrKy0tLS0tCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfeHNr
LmggICAgfCAgIDIgKwogNyBmaWxlcyBjaGFuZ2VkLCAxNDIgaW5zZXJ0aW9ucygrKSwgMTI3IGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUv
aTQwZV9tYWluLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfbWFpbi5j
CmluZGV4IGQ2YjJkYjRmMmM2NS4uM2UxNjk1YmI4MjYyIDEwMDY0NAotLS0gYS9kcml2ZXJzL25l
dC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfbWFpbi5jCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L2ludGVsL2k0MGUvaTQwZV9tYWluLmMKQEAgLTMyNjAsOCArMzI2MCwxMiBAQCBzdGF0aWMg
aW50IGk0MGVfY29uZmlndXJlX3J4X3Jpbmcoc3RydWN0IGk0MGVfcmluZyAqcmluZykKIAlpZiAo
cmluZy0+dnNpLT50eXBlID09IEk0MEVfVlNJX01BSU4pCiAJCXhkcF9yeHFfaW5mb191bnJlZ19t
ZW1fbW9kZWwoJnJpbmctPnhkcF9yeHEpOwogCisJa2ZyZWUocmluZy0+cnhfYmkpOwogCXJpbmct
Pnhza191bWVtID0gaTQwZV94c2tfdW1lbShyaW5nKTsKIAlpZiAocmluZy0+eHNrX3VtZW0pIHsK
KwkJcmV0ID0gaTQwZV9hbGxvY19yeF9iaV96YyhyaW5nKTsKKwkJaWYgKHJldCkKKwkJCXJldHVy
biByZXQ7CiAJCXJpbmctPnJ4X2J1Zl9sZW4gPSByaW5nLT54c2tfdW1lbS0+Y2h1bmtfc2l6ZV9u
b2hyIC0KIAkJCQkgICBYRFBfUEFDS0VUX0hFQURST09NOwogCQkvKiBGb3IgQUZfWERQIFpDLCB3
ZSBkaXNhbGxvdyBwYWNrZXRzIHRvIHNwYW4gb24KQEAgLTMyODAsNiArMzI4NCw5IEBAIHN0YXRp
YyBpbnQgaTQwZV9jb25maWd1cmVfcnhfcmluZyhzdHJ1Y3QgaTQwZV9yaW5nICpyaW5nKQogCQkJ
IHJpbmctPnF1ZXVlX2luZGV4KTsKIAogCX0gZWxzZSB7CisJCXJldCA9IGk0MGVfYWxsb2Nfcnhf
YmkocmluZyk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OwogCQlyaW5nLT5yeF9idWZfbGVu
ID0gdnNpLT5yeF9idWZfbGVuOwogCQlpZiAocmluZy0+dnNpLT50eXBlID09IEk0MEVfVlNJX01B
SU4pIHsKIAkJCXJldCA9IHhkcF9yeHFfaW5mb19yZWdfbWVtX21vZGVsKCZyaW5nLT54ZHBfcnhx
LApkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cngu
YyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV90eHJ4LmMKaW5kZXggOWI5
ZWY5NTFmOWNlLi5lMTQzOWE2YzgwNjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0
L2ludGVsL2k0MGUvaTQwZV90eHJ4LmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwv
aTQwZS9pNDBlX3R4cnguYwpAQCAtNTIxLDI4ICs1MjEsMjkgQEAgaW50IGk0MGVfYWRkX2RlbF9m
ZGlyKHN0cnVjdCBpNDBlX3ZzaSAqdnNpLAogLyoqCiAgKiBpNDBlX2ZkX2hhbmRsZV9zdGF0dXMg
LSBjaGVjayB0aGUgUHJvZ3JhbW1pbmcgU3RhdHVzIGZvciBGRAogICogQHJ4X3Jpbmc6IHRoZSBS
eCByaW5nIGZvciB0aGlzIGRlc2NyaXB0b3IKLSAqIEByeF9kZXNjOiB0aGUgUnggZGVzY3JpcHRv
ciBmb3IgcHJvZ3JhbW1pbmcgU3RhdHVzLCBub3QgYSBwYWNrZXQgZGVzY3JpcHRvci4KKyAqIEBx
d29yZDBfcmF3OiBxd29yZDAKKyAqIEBxd29yZDE6IHF3b3JkMSBhZnRlciBsZV90b19jcHUKICAq
IEBwcm9nX2lkOiB0aGUgaWQgb3JpZ2luYWxseSB1c2VkIGZvciBwcm9ncmFtbWluZwogICoKICAq
IFRoaXMgaXMgdXNlZCB0byB2ZXJpZnkgaWYgdGhlIEZEIHByb2dyYW1taW5nIG9yIGludmFsaWRh
dGlvbgogICogcmVxdWVzdGVkIGJ5IFNXIHRvIHRoZSBIVyBpcyBzdWNjZXNzZnVsIG9yIG5vdCBh
bmQgdGFrZSBhY3Rpb25zIGFjY29yZGluZ2x5LgogICoqLwotdm9pZCBpNDBlX2ZkX2hhbmRsZV9z
dGF0dXMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKLQkJCSAgIHVuaW9uIGk0MGVfcnhfZGVz
YyAqcnhfZGVzYywgdTggcHJvZ19pZCkKK3N0YXRpYyB2b2lkIGk0MGVfZmRfaGFuZGxlX3N0YXR1
cyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLCB1NjQgcXdvcmQwX3JhdywKKwkJCQkgIHU2NCBx
d29yZDEsIHU4IHByb2dfaWQpCiB7CiAJc3RydWN0IGk0MGVfcGYgKnBmID0gcnhfcmluZy0+dnNp
LT5iYWNrOwogCXN0cnVjdCBwY2lfZGV2ICpwZGV2ID0gcGYtPnBkZXY7CisJc3RydWN0IGk0MGVf
MzJiX3J4X3diX3F3MCAqcXcwOwogCXUzMiBmY250X3Byb2csIGZjbnRfYXZhaWw7CiAJdTMyIGVy
cm9yOwotCXU2NCBxdzsKIAotCXF3ID0gbGU2NF90b19jcHUocnhfZGVzYy0+d2IucXdvcmQxLnN0
YXR1c19lcnJvcl9sZW4pOwotCWVycm9yID0gKHF3ICYgSTQwRV9SWF9QUk9HX1NUQVRVU19ERVND
X1FXMV9FUlJPUl9NQVNLKSA+PgorCXF3MCA9IChzdHJ1Y3QgaTQwZV8zMmJfcnhfd2JfcXcwICop
JnF3b3JkMF9yYXc7CisJZXJyb3IgPSAocXdvcmQxICYgSTQwRV9SWF9QUk9HX1NUQVRVU19ERVND
X1FXMV9FUlJPUl9NQVNLKSA+PgogCQlJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfUVcxX0VSUk9S
X1NISUZUOwogCiAJaWYgKGVycm9yID09IEJJVChJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfRkRf
VEJMX0ZVTExfU0hJRlQpKSB7Ci0JCXBmLT5mZF9pbnYgPSBsZTMyX3RvX2NwdShyeF9kZXNjLT53
Yi5xd29yZDAuaGlfZHdvcmQuZmRfaWQpOwotCQlpZiAoKHJ4X2Rlc2MtPndiLnF3b3JkMC5oaV9k
d29yZC5mZF9pZCAhPSAwKSB8fAorCQlwZi0+ZmRfaW52ID0gbGUzMl90b19jcHUocXcwLT5oaV9k
d29yZC5mZF9pZCk7CisJCWlmIChxdzAtPmhpX2R3b3JkLmZkX2lkICE9IDAgfHwKIAkJICAgIChJ
NDBFX0RFQlVHX0ZEICYgcGYtPmh3LmRlYnVnX21hc2spKQogCQkJZGV2X3dhcm4oJnBkZXYtPmRl
diwgIm50dXBsZSBmaWx0ZXIgbG9jID0gJWQsIGNvdWxkIG5vdCBiZSBhZGRlZFxuIiwKIAkJCQkg
cGYtPmZkX2ludik7CkBAIC01NjAsNyArNTYxLDcgQEAgdm9pZCBpNDBlX2ZkX2hhbmRsZV9zdGF0
dXMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKIAkJLyogc3RvcmUgdGhlIGN1cnJlbnQgYXRy
IGZpbHRlciBjb3VudCAqLwogCQlwZi0+ZmRfYXRyX2NudCA9IGk0MGVfZ2V0X2N1cnJlbnRfYXRy
X2NudChwZik7CiAKLQkJaWYgKChyeF9kZXNjLT53Yi5xd29yZDAuaGlfZHdvcmQuZmRfaWQgPT0g
MCkgJiYKKwkJaWYgKHF3MC0+aGlfZHdvcmQuZmRfaWQgPT0gMCAmJgogCQkgICAgdGVzdF9iaXQo
X19JNDBFX0ZEX1NCX0FVVE9fRElTQUJMRUQsIHBmLT5zdGF0ZSkpIHsKIAkJCS8qIFRoZXNlIHNl
dF9iaXQoKSBjYWxscyBhcmVuJ3QgYXRvbWljIHdpdGggdGhlCiAJCQkgKiB0ZXN0X2JpdCgpIGhl
cmUsIGJ1dCB3b3JzZSBjYXNlIHdlIHBvdGVudGlhbGx5CkBAIC01ODksNyArNTkwLDcgQEAgdm9p
ZCBpNDBlX2ZkX2hhbmRsZV9zdGF0dXMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKIAl9IGVs
c2UgaWYgKGVycm9yID09IEJJVChJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfTk9fRkRfRU5UUllf
U0hJRlQpKSB7CiAJCWlmIChJNDBFX0RFQlVHX0ZEICYgcGYtPmh3LmRlYnVnX21hc2spCiAJCQlk
ZXZfaW5mbygmcGRldi0+ZGV2LCAibnR1cGxlIGZpbHRlciBmZF9pZCA9ICVkLCBjb3VsZCBub3Qg
YmUgcmVtb3ZlZFxuIiwKLQkJCQkgcnhfZGVzYy0+d2IucXdvcmQwLmhpX2R3b3JkLmZkX2lkKTsK
KwkJCQkgcXcwLT5oaV9kd29yZC5mZF9pZCk7CiAJfQogfQogCkBAIC0xMjMyLDI5ICsxMjMzLDEw
IEBAIHN0YXRpYyB2b2lkIGk0MGVfcmV1c2VfcnhfcGFnZShzdHJ1Y3QgaTQwZV9yaW5nICpyeF9y
aW5nLAogfQogCiAvKioKLSAqIGk0MGVfcnhfaXNfcHJvZ3JhbW1pbmdfc3RhdHVzIC0gY2hlY2sg
Zm9yIHByb2dyYW1taW5nIHN0YXR1cyBkZXNjcmlwdG9yCi0gKiBAcXc6IHF3b3JkIHJlcHJlc2Vu
dGluZyBzdGF0dXNfZXJyb3JfbGVuIGluIENQVSBvcmRlcmluZwotICoKLSAqIFRoZSB2YWx1ZSBv
ZiBpbiB0aGUgZGVzY3JpcHRvciBsZW5ndGggZmllbGQgaW5kaWNhdGUgaWYgdGhpcwotICogaXMg
YSBwcm9ncmFtbWluZyBzdGF0dXMgZGVzY3JpcHRvciBmb3IgZmxvdyBkaXJlY3RvciBvciBGQ29F
Ci0gKiBieSB0aGUgdmFsdWUgb2YgSTQwRV9SWF9QUk9HX1NUQVRVU19ERVNDX0xFTkdUSCwgb3Ro
ZXJ3aXNlCi0gKiBpdCBpcyBhIHBhY2tldCBkZXNjcmlwdG9yLgotICoqLwotc3RhdGljIGlubGlu
ZSBib29sIGk0MGVfcnhfaXNfcHJvZ3JhbW1pbmdfc3RhdHVzKHU2NCBxdykKLXsKLQkvKiBUaGUg
UnggZmlsdGVyIHByb2dyYW1taW5nIHN0YXR1cyBhbmQgU1BIIGJpdCBvY2N1cHkgdGhlIHNhbWUK
LQkgKiBzcG90IGluIHRoZSBkZXNjcmlwdG9yLiBTaW5jZSB3ZSBkb24ndCBzdXBwb3J0IHBhY2tl
dCBzcGxpdCB3ZQotCSAqIGNhbiBqdXN0IHJldXNlIHRoZSBiaXQgYXMgYW4gaW5kaWNhdGlvbiB0
aGF0IHRoaXMgaXMgYQotCSAqIHByb2dyYW1taW5nIHN0YXR1cyBkZXNjcmlwdG9yLgotCSAqLwot
CXJldHVybiBxdyAmIEk0MEVfUlhEX1FXMV9MRU5HVEhfU1BIX01BU0s7Ci19Ci0KLS8qKgotICog
aTQwZV9jbGVhbl9wcm9ncmFtbWluZ19zdGF0dXMgLSB0cnkgY2xlYW4gdGhlIHByb2dyYW1taW5n
IHN0YXR1cyBkZXNjcmlwdG9yCisgKiBpNDBlX2NsZWFuX3Byb2dyYW1taW5nX3N0YXR1cyAtIGNs
ZWFuIHRoZSBwcm9ncmFtbWluZyBzdGF0dXMgZGVzY3JpcHRvcgogICogQHJ4X3Jpbmc6IHRoZSBy
eCByaW5nIHRoYXQgaGFzIHRoaXMgZGVzY3JpcHRvcgotICogQHJ4X2Rlc2M6IHRoZSByeCBkZXNj
cmlwdG9yIHdyaXR0ZW4gYmFjayBieSBIVwotICogQHF3OiBxd29yZCByZXByZXNlbnRpbmcgc3Rh
dHVzX2Vycm9yX2xlbiBpbiBDUFUgb3JkZXJpbmcKKyAqIEBxd29yZDA6IHF3b3JkMAorICogQHF3
b3JkMTogcXdvcmQxIHJlcHJlc2VudGluZyBzdGF0dXNfZXJyb3JfbGVuIGluIENQVSBvcmRlcmlu
ZwogICoKICAqIEZsb3cgZGlyZWN0b3Igc2hvdWxkIGhhbmRsZSBGRF9GSUxURVJfU1RBVFVTIHRv
IGNoZWNrIGl0cyBmaWx0ZXIgcHJvZ3JhbW1pbmcKICAqIHN0YXR1cyBiZWluZyBzdWNjZXNzZnVs
IG9yIG5vdCBhbmQgdGFrZSBhY3Rpb25zIGFjY29yZGluZ2x5LiBGQ29FIHNob3VsZApAQCAtMTI2
MiwzNCArMTI0NCwxNiBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaTQwZV9yeF9pc19wcm9ncmFtbWlu
Z19zdGF0dXModTY0IHF3KQogICoKICAqIFJldHVybnMgYW4gaTQwZV9yeF9idWZmZXIgdG8gcmV1
c2UgaWYgdGhlIGNsZWFudXAgb2NjdXJyZWQsIG90aGVyd2lzZSBOVUxMLgogICoqLwotc3RydWN0
IGk0MGVfcnhfYnVmZmVyICppNDBlX2NsZWFuX3Byb2dyYW1taW5nX3N0YXR1cygKLQlzdHJ1Y3Qg
aTQwZV9yaW5nICpyeF9yaW5nLAotCXVuaW9uIGk0MGVfcnhfZGVzYyAqcnhfZGVzYywKLQl1NjQg
cXcpCit2b2lkIGk0MGVfY2xlYW5fcHJvZ3JhbW1pbmdfc3RhdHVzKHN0cnVjdCBpNDBlX3Jpbmcg
KnJ4X3JpbmcsIHU2NCBxd29yZDBfcmF3LAorCQkJCSAgIHU2NCBxd29yZDEpCiB7Ci0Jc3RydWN0
IGk0MGVfcnhfYnVmZmVyICpyeF9idWZmZXI7Ci0JdTMyIG50YzsKIAl1OCBpZDsKIAotCWlmICgh
aTQwZV9yeF9pc19wcm9ncmFtbWluZ19zdGF0dXMocXcpKQotCQlyZXR1cm4gTlVMTDsKLQotCW50
YyA9IHJ4X3JpbmctPm5leHRfdG9fY2xlYW47Ci0KLQkvKiBmZXRjaCwgdXBkYXRlLCBhbmQgc3Rv
cmUgbmV4dCB0byBjbGVhbiAqLwotCXJ4X2J1ZmZlciA9IGk0MGVfcnhfYmkocnhfcmluZywgbnRj
KyspOwotCW50YyA9IChudGMgPCByeF9yaW5nLT5jb3VudCkgPyBudGMgOiAwOwotCXJ4X3Jpbmct
Pm5leHRfdG9fY2xlYW4gPSBudGM7Ci0KLQlwcmVmZXRjaChJNDBFX1JYX0RFU0MocnhfcmluZywg
bnRjKSk7Ci0KLQlpZCA9IChxdyAmIEk0MEVfUlhfUFJPR19TVEFUVVNfREVTQ19RVzFfUFJPR0lE
X01BU0spID4+CisJaWQgPSAocXdvcmQxICYgSTQwRV9SWF9QUk9HX1NUQVRVU19ERVNDX1FXMV9Q
Uk9HSURfTUFTSykgPj4KIAkJICBJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfUVcxX1BST0dJRF9T
SElGVDsKIAogCWlmIChpZCA9PSBJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfRkRfRklMVEVSX1NU
QVRVUykKLQkJaTQwZV9mZF9oYW5kbGVfc3RhdHVzKHJ4X3JpbmcsIHJ4X2Rlc2MsIGlkKTsKLQot
CXJldHVybiByeF9idWZmZXI7CisJCWk0MGVfZmRfaGFuZGxlX3N0YXR1cyhyeF9yaW5nLCBxd29y
ZDBfcmF3LCBxd29yZDEsIGlkKTsKIH0KIAogLyoqCkBAIC0xMzQxLDEzICsxMzA1LDI1IEBAIGlu
dCBpNDBlX3NldHVwX3R4X2Rlc2NyaXB0b3JzKHN0cnVjdCBpNDBlX3JpbmcgKnR4X3JpbmcpCiAJ
cmV0dXJuIC1FTk9NRU07CiB9CiAKK2ludCBpNDBlX2FsbG9jX3J4X2JpKHN0cnVjdCBpNDBlX3Jp
bmcgKnJ4X3JpbmcpCit7CisJdW5zaWduZWQgbG9uZyBzeiA9IHNpemVvZigqcnhfcmluZy0+cnhf
YmkpICogcnhfcmluZy0+Y291bnQ7CisKKwlyeF9yaW5nLT5yeF9iaSA9IGt6YWxsb2Moc3osIEdG
UF9LRVJORUwpOworCXJldHVybiByeF9yaW5nLT5yeF9iaSA/IDAgOiAtRU5PTUVNOworfQorCitz
dGF0aWMgdm9pZCBpNDBlX2NsZWFyX3J4X2JpKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcpCit7
CisJbWVtc2V0KHJ4X3JpbmctPnJ4X2JpLCAwLCBzaXplb2YoKnJ4X3JpbmctPnJ4X2JpKSAqIHJ4
X3JpbmctPmNvdW50KTsKK30KKwogLyoqCiAgKiBpNDBlX2NsZWFuX3J4X3JpbmcgLSBGcmVlIFJ4
IGJ1ZmZlcnMKICAqIEByeF9yaW5nOiByaW5nIHRvIGJlIGNsZWFuZWQKICAqKi8KIHZvaWQgaTQw
ZV9jbGVhbl9yeF9yaW5nKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcpCiB7Ci0JdW5zaWduZWQg
bG9uZyBiaV9zaXplOwogCXUxNiBpOwogCiAJLyogcmluZyBhbHJlYWR5IGNsZWFyZWQsIG5vdGhp
bmcgdG8gZG8gKi8KQEAgLTEzOTMsOCArMTM2OSwxMCBAQCB2b2lkIGk0MGVfY2xlYW5fcnhfcmlu
ZyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nKQogCX0KIAogc2tpcF9mcmVlOgotCWJpX3NpemUg
PSBzaXplb2Yoc3RydWN0IGk0MGVfcnhfYnVmZmVyKSAqIHJ4X3JpbmctPmNvdW50OwotCW1lbXNl
dChyeF9yaW5nLT5yeF9iaSwgMCwgYmlfc2l6ZSk7CisJaWYgKHJ4X3JpbmctPnhza191bWVtKQor
CQlpNDBlX2NsZWFyX3J4X2JpX3pjKHJ4X3JpbmcpOworCWVsc2UKKwkJaTQwZV9jbGVhcl9yeF9i
aShyeF9yaW5nKTsKIAogCS8qIFplcm8gb3V0IHRoZSBkZXNjcmlwdG9yIHJpbmcgKi8KIAltZW1z
ZXQocnhfcmluZy0+ZGVzYywgMCwgcnhfcmluZy0+c2l6ZSk7CkBAIC0xNDM1LDE1ICsxNDEzLDcg
QEAgdm9pZCBpNDBlX2ZyZWVfcnhfcmVzb3VyY2VzKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3Jpbmcp
CiBpbnQgaTQwZV9zZXR1cF9yeF9kZXNjcmlwdG9ycyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5n
KQogewogCXN0cnVjdCBkZXZpY2UgKmRldiA9IHJ4X3JpbmctPmRldjsKLQlpbnQgZXJyID0gLUVO
T01FTTsKLQlpbnQgYmlfc2l6ZTsKLQotCS8qIHdhcm4gaWYgd2UgYXJlIGFib3V0IHRvIG92ZXJ3
cml0ZSB0aGUgcG9pbnRlciAqLwotCVdBUk5fT04ocnhfcmluZy0+cnhfYmkpOwotCWJpX3NpemUg
PSBzaXplb2Yoc3RydWN0IGk0MGVfcnhfYnVmZmVyKSAqIHJ4X3JpbmctPmNvdW50OwotCXJ4X3Jp
bmctPnJ4X2JpID0ga3phbGxvYyhiaV9zaXplLCBHRlBfS0VSTkVMKTsKLQlpZiAoIXJ4X3Jpbmct
PnJ4X2JpKQotCQlnb3RvIGVycjsKKwlpbnQgZXJyOwogCiAJdTY0X3N0YXRzX2luaXQoJnJ4X3Jp
bmctPnN5bmNwKTsKIApAQCAtMTQ1Niw3ICsxNDI2LDcgQEAgaW50IGk0MGVfc2V0dXBfcnhfZGVz
Y3JpcHRvcnMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykKIAlpZiAoIXJ4X3JpbmctPmRlc2Mp
IHsKIAkJZGV2X2luZm8oZGV2LCAiVW5hYmxlIHRvIGFsbG9jYXRlIG1lbW9yeSBmb3IgdGhlIFJ4
IGRlc2NyaXB0b3IgcmluZywgc2l6ZT0lZFxuIiwKIAkJCSByeF9yaW5nLT5zaXplKTsKLQkJZ290
byBlcnI7CisJCXJldHVybiAtRU5PTUVNOwogCX0KIAogCXJ4X3JpbmctPm5leHRfdG9fYWxsb2Mg
PSAwOwpAQCAtMTQ2OCwxNiArMTQzOCwxMiBAQCBpbnQgaTQwZV9zZXR1cF9yeF9kZXNjcmlwdG9y
cyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nKQogCQllcnIgPSB4ZHBfcnhxX2luZm9fcmVnKCZy
eF9yaW5nLT54ZHBfcnhxLCByeF9yaW5nLT5uZXRkZXYsCiAJCQkJICAgICAgIHJ4X3JpbmctPnF1
ZXVlX2luZGV4KTsKIAkJaWYgKGVyciA8IDApCi0JCQlnb3RvIGVycjsKKwkJCXJldHVybiBlcnI7
CiAJfQogCiAJcnhfcmluZy0+eGRwX3Byb2cgPSByeF9yaW5nLT52c2ktPnhkcF9wcm9nOwogCiAJ
cmV0dXJuIDA7Ci1lcnI6Ci0Ja2ZyZWUocnhfcmluZy0+cnhfYmkpOwotCXJ4X3JpbmctPnJ4X2Jp
ID0gTlVMTDsKLQlyZXR1cm4gZXJyOwogfQogCiAvKioKQEAgLTIzODcsOSArMjM1MywxMiBAQCBz
dGF0aWMgaW50IGk0MGVfY2xlYW5fcnhfaXJxKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsIGlu
dCBidWRnZXQpCiAJCSAqLwogCQlkbWFfcm1iKCk7CiAKLQkJcnhfYnVmZmVyID0gaTQwZV9jbGVh
bl9wcm9ncmFtbWluZ19zdGF0dXMocnhfcmluZywgcnhfZGVzYywKLQkJCQkJCQkgIHF3b3JkKTsK
LQkJaWYgKHVubGlrZWx5KHJ4X2J1ZmZlcikpIHsKKwkJaWYgKGk0MGVfcnhfaXNfcHJvZ3JhbW1p
bmdfc3RhdHVzKHF3b3JkKSkgeworCQkJaTQwZV9jbGVhbl9wcm9ncmFtbWluZ19zdGF0dXMocnhf
cmluZywKKwkJCQkJCSAgICAgIHJ4X2Rlc2MtPnJhdy5xd29yZFswXSwKKwkJCQkJCSAgICAgIHF3
b3JkKTsKKwkJCXJ4X2J1ZmZlciA9IGk0MGVfcnhfYmkocnhfcmluZywgcnhfcmluZy0+bmV4dF90
b19jbGVhbik7CisJCQlpNDBlX2luY19udGMocnhfcmluZyk7CiAJCQlpNDBlX3JldXNlX3J4X3Bh
Z2UocnhfcmluZywgcnhfYnVmZmVyKTsKIAkJCWNsZWFuZWRfY291bnQrKzsKIAkJCWNvbnRpbnVl
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cngu
aCBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV90eHJ4LmgKaW5kZXggMzZk
MzdmMzFhMjg3Li5kMzQzNDk4ZThkZTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0
L2ludGVsL2k0MGUvaTQwZV90eHJ4LmgKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwv
aTQwZS9pNDBlX3R4cnguaApAQCAtMjk2LDE3ICsyOTYsMTUgQEAgc3RydWN0IGk0MGVfdHhfYnVm
ZmVyIHsKIAogc3RydWN0IGk0MGVfcnhfYnVmZmVyIHsKIAlkbWFfYWRkcl90IGRtYTsKLQl1bmlv
biB7Ci0JCXN0cnVjdCB7Ci0JCQlzdHJ1Y3QgcGFnZSAqcGFnZTsKLQkJCV9fdTMyIHBhZ2Vfb2Zm
c2V0OwotCQkJX191MTYgcGFnZWNudF9iaWFzOwotCQl9OwotCQlzdHJ1Y3QgewotCQkJdm9pZCAq
YWRkcjsKLQkJCXU2NCBoYW5kbGU7Ci0JCX07Ci0JfTsKKwlzdHJ1Y3QgcGFnZSAqcGFnZTsKKwlf
X3UzMiBwYWdlX29mZnNldDsKKwlfX3UxNiBwYWdlY250X2JpYXM7Cit9OworCitzdHJ1Y3QgaTQw
ZV9yeF9idWZmZXJfemMgeworCWRtYV9hZGRyX3QgZG1hOworCXZvaWQgKmFkZHI7CisJdTY0IGhh
bmRsZTsKIH07CiAKIHN0cnVjdCBpNDBlX3F1ZXVlX3N0YXRzIHsKQEAgLTM1OCw2ICszNTYsNyBA
QCBzdHJ1Y3QgaTQwZV9yaW5nIHsKIAl1bmlvbiB7CiAJCXN0cnVjdCBpNDBlX3R4X2J1ZmZlciAq
dHhfYmk7CiAJCXN0cnVjdCBpNDBlX3J4X2J1ZmZlciAqcnhfYmk7CisJCXN0cnVjdCBpNDBlX3J4
X2J1ZmZlcl96YyAqcnhfYmlfemM7CiAJfTsKIAlERUNMQVJFX0JJVE1BUChzdGF0ZSwgX19JNDBF
X1JJTkdfU1RBVEVfTkJJVFMpOwogCXUxNiBxdWV1ZV9pbmRleDsJCS8qIFF1ZXVlIG51bWJlciBv
ZiByaW5nICovCkBAIC00OTUsNiArNDk0LDcgQEAgaW50IF9faTQwZV9tYXliZV9zdG9wX3R4KHN0
cnVjdCBpNDBlX3JpbmcgKnR4X3JpbmcsIGludCBzaXplKTsKIGJvb2wgX19pNDBlX2Noa19saW5l
YXJpemUoc3RydWN0IHNrX2J1ZmYgKnNrYik7CiBpbnQgaTQwZV94ZHBfeG1pdChzdHJ1Y3QgbmV0
X2RldmljZSAqZGV2LCBpbnQgbiwgc3RydWN0IHhkcF9mcmFtZSAqKmZyYW1lcywKIAkJICB1MzIg
ZmxhZ3MpOworaW50IGk0MGVfYWxsb2NfcnhfYmkoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZyk7
CiAKIC8qKgogICogaTQwZV9nZXRfaGVhZCAtIFJldHJpZXZlIGhlYWQgZnJvbSBoZWFkIHdyaXRl
YmFjawpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4
cnhfY29tbW9uLmggYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfdHhyeF9j
b21tb24uaAppbmRleCA4YWYwZTk5YzZjMGQuLjY2N2M0ZGM0YjM5ZiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnhfY29tbW9uLmgKKysrIGIvZHJp
dmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnhfY29tbW9uLmgKQEAgLTQsMTMg
KzQsOSBAQAogI2lmbmRlZiBJNDBFX1RYUlhfQ09NTU9OXwogI2RlZmluZSBJNDBFX1RYUlhfQ09N
TU9OXwogCi12b2lkIGk0MGVfZmRfaGFuZGxlX3N0YXR1cyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9y
aW5nLAotCQkJICAgdW5pb24gaTQwZV9yeF9kZXNjICpyeF9kZXNjLCB1OCBwcm9nX2lkKTsKIGlu
dCBpNDBlX3htaXRfeGRwX3R4X3Jpbmcoc3RydWN0IHhkcF9idWZmICp4ZHAsIHN0cnVjdCBpNDBl
X3JpbmcgKnhkcF9yaW5nKTsKLXN0cnVjdCBpNDBlX3J4X2J1ZmZlciAqaTQwZV9jbGVhbl9wcm9n
cmFtbWluZ19zdGF0dXMoCi0Jc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKLQl1bmlvbiBpNDBl
X3J4X2Rlc2MgKnJ4X2Rlc2MsCi0JdTY0IHF3KTsKK3ZvaWQgaTQwZV9jbGVhbl9wcm9ncmFtbWlu
Z19zdGF0dXMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgdTY0IHF3b3JkMF9yYXcsCisJCQkJ
ICAgdTY0IHF3b3JkMSk7CiB2b2lkIGk0MGVfcHJvY2Vzc19za2JfZmllbGRzKHN0cnVjdCBpNDBl
X3JpbmcgKnJ4X3JpbmcsCiAJCQkgICAgIHVuaW9uIGk0MGVfcnhfZGVzYyAqcnhfZGVzYywgc3Ry
dWN0IHNrX2J1ZmYgKnNrYik7CiB2b2lkIGk0MGVfeGRwX3JpbmdfdXBkYXRlX3RhaWwoc3RydWN0
IGk0MGVfcmluZyAqeGRwX3JpbmcpOwpAQCAtODQsNiArODAsMzggQEAgc3RhdGljIGlubGluZSB2
b2lkIGk0MGVfYXJtX3diKHN0cnVjdCBpNDBlX3JpbmcgKnR4X3JpbmcsCiAJfQogfQogCisvKioK
KyAqIGk0MGVfcnhfaXNfcHJvZ3JhbW1pbmdfc3RhdHVzIC0gY2hlY2sgZm9yIHByb2dyYW1taW5n
IHN0YXR1cyBkZXNjcmlwdG9yCisgKiBAcXdvcmQxOiBxd29yZDEgcmVwcmVzZW50aW5nIHN0YXR1
c19lcnJvcl9sZW4gaW4gQ1BVIG9yZGVyaW5nCisgKgorICogVGhlIHZhbHVlIG9mIGluIHRoZSBk
ZXNjcmlwdG9yIGxlbmd0aCBmaWVsZCBpbmRpY2F0ZSBpZiB0aGlzCisgKiBpcyBhIHByb2dyYW1t
aW5nIHN0YXR1cyBkZXNjcmlwdG9yIGZvciBmbG93IGRpcmVjdG9yIG9yIEZDb0UKKyAqIGJ5IHRo
ZSB2YWx1ZSBvZiBJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfTEVOR1RILCBvdGhlcndpc2UKKyAq
IGl0IGlzIGEgcGFja2V0IGRlc2NyaXB0b3IuCisgKiovCitzdGF0aWMgaW5saW5lIGJvb2wgaTQw
ZV9yeF9pc19wcm9ncmFtbWluZ19zdGF0dXModTY0IHF3b3JkMSkKK3sKKwkvKiBUaGUgUnggZmls
dGVyIHByb2dyYW1taW5nIHN0YXR1cyBhbmQgU1BIIGJpdCBvY2N1cHkgdGhlIHNhbWUKKwkgKiBz
cG90IGluIHRoZSBkZXNjcmlwdG9yLiBTaW5jZSB3ZSBkb24ndCBzdXBwb3J0IHBhY2tldCBzcGxp
dCB3ZQorCSAqIGNhbiBqdXN0IHJldXNlIHRoZSBiaXQgYXMgYW4gaW5kaWNhdGlvbiB0aGF0IHRo
aXMgaXMgYQorCSAqIHByb2dyYW1taW5nIHN0YXR1cyBkZXNjcmlwdG9yLgorCSAqLworCXJldHVy
biBxd29yZDEgJiBJNDBFX1JYRF9RVzFfTEVOR1RIX1NQSF9NQVNLOworfQorCisvKioKKyAqIGk0
MGVfaW5jX250YzogQWR2YW5jZSB0aGUgbmV4dF90b19jbGVhbiBpbmRleAorICogQHJ4X3Jpbmc6
IFJ4IHJpbmcKKyAqKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCBpNDBlX2luY19udGMoc3RydWN0IGk0
MGVfcmluZyAqcnhfcmluZykKK3sKKwl1MzIgbnRjID0gcnhfcmluZy0+bmV4dF90b19jbGVhbiAr
IDE7CisKKwludGMgPSAobnRjIDwgcnhfcmluZy0+Y291bnQpID8gbnRjIDogMDsKKwlyeF9yaW5n
LT5uZXh0X3RvX2NsZWFuID0gbnRjOworCXByZWZldGNoKEk0MEVfUlhfREVTQyhyeF9yaW5nLCBu
dGMpKTsKK30KKwogdm9pZCBpNDBlX3hza19jbGVhbl9yeF9yaW5nKHN0cnVjdCBpNDBlX3Jpbmcg
KnJ4X3JpbmcpOwogdm9pZCBpNDBlX3hza19jbGVhbl90eF9yaW5nKHN0cnVjdCBpNDBlX3Jpbmcg
KnR4X3JpbmcpOwogYm9vbCBpNDBlX3hza19hbnlfcnhfcmluZ19lbmFibGVkKHN0cnVjdCBpNDBl
X3ZzaSAqdnNpKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUv
aTQwZV90eXBlLmggYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfdHlwZS5o
CmluZGV4IDZlYTI4NjdmZjYwZi4uNjNlMDk4ZjdjYjYzIDEwMDY0NAotLS0gYS9kcml2ZXJzL25l
dC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfdHlwZS5oCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L2ludGVsL2k0MGUvaTQwZV90eXBlLmgKQEAgLTY4OSw3ICs2ODksNyBAQCB1bmlvbiBpNDBl
XzMyYnl0ZV9yeF9kZXNjIHsKIAkJX19sZTY0ICByc3ZkMjsKIAl9IHJlYWQ7CiAJc3RydWN0IHsK
LQkJc3RydWN0IHsKKwkJc3RydWN0IGk0MGVfMzJiX3J4X3diX3F3MCB7CiAJCQlzdHJ1Y3Qgewog
CQkJCXVuaW9uIHsKIAkJCQkJX19sZTE2IG1pcnJvcmluZ19zdGF0dXM7CkBAIC03MjcsNiArNzI3
LDkgQEAgdW5pb24gaTQwZV8zMmJ5dGVfcnhfZGVzYyB7CiAJCQl9IGhpX2R3b3JkOwogCQl9IHF3
b3JkMzsKIAl9IHdiOyAgLyogd3JpdGViYWNrICovCisJc3RydWN0IHsKKwkJdTY0IHF3b3JkWzRd
OworCX0gcmF3OwogfTsKIAogZW51bSBpNDBlX3J4X2Rlc2Nfc3RhdHVzX2JpdHMgewpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5jIGIvZHJpdmVy
cy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5jCmluZGV4IGQ4NGVjOTJmODUzOC4u
NGZjYTUyYTMwZWE0IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBl
L2k0MGVfeHNrLmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hz
ay5jCkBAIC05LDkgKzksMjMgQEAKICNpbmNsdWRlICJpNDBlX3R4cnhfY29tbW9uLmgiCiAjaW5j
bHVkZSAiaTQwZV94c2suaCIKIAotc3RhdGljIHN0cnVjdCBpNDBlX3J4X2J1ZmZlciAqaTQwZV9y
eF9iaShzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLCB1MzIgaWR4KQoraW50IGk0MGVfYWxsb2Nf
cnhfYmlfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykKIHsKLQlyZXR1cm4gJnJ4X3Jpbmct
PnJ4X2JpW2lkeF07CisJdW5zaWduZWQgbG9uZyBzeiA9IHNpemVvZigqcnhfcmluZy0+cnhfYmlf
emMpICogcnhfcmluZy0+Y291bnQ7CisKKwlyeF9yaW5nLT5yeF9iaV96YyA9IGt6YWxsb2Moc3os
IEdGUF9LRVJORUwpOworCXJldHVybiByeF9yaW5nLT5yeF9iaV96YyA/IDAgOiAtRU5PTUVNOwor
fQorCit2b2lkIGk0MGVfY2xlYXJfcnhfYmlfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykK
K3sKKwltZW1zZXQocnhfcmluZy0+cnhfYmlfemMsIDAsCisJICAgICAgIHNpemVvZigqcnhfcmlu
Zy0+cnhfYmlfemMpICogcnhfcmluZy0+Y291bnQpOworfQorCitzdGF0aWMgc3RydWN0IGk0MGVf
cnhfYnVmZmVyX3pjICppNDBlX3J4X2JpKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsIHUzMiBp
ZHgpCit7CisJcmV0dXJuICZyeF9yaW5nLT5yeF9iaV96Y1tpZHhdOwogfQogCiAvKioKQEAgLTIz
OCw3ICsyNTIsNyBAQCBzdGF0aWMgaW50IGk0MGVfcnVuX3hkcF96YyhzdHJ1Y3QgaTQwZV9yaW5n
ICpyeF9yaW5nLCBzdHJ1Y3QgeGRwX2J1ZmYgKnhkcCkKIH0KIAogLyoqCi0gKiBpNDBlX2FsbG9j
X2J1ZmZlcl96YyAtIEFsbG9jYXRlcyBhbiBpNDBlX3J4X2J1ZmZlcgorICogaTQwZV9hbGxvY19i
dWZmZXJfemMgLSBBbGxvY2F0ZXMgYW4gaTQwZV9yeF9idWZmZXJfemMKICAqIEByeF9yaW5nOiBS
eCByaW5nCiAgKiBAYmk6IFJ4IGJ1ZmZlciB0byBwb3B1bGF0ZQogICoKQEAgLTI0OCw3ICsyNjIs
NyBAQCBzdGF0aWMgaW50IGk0MGVfcnVuX3hkcF96YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5n
LCBzdHJ1Y3QgeGRwX2J1ZmYgKnhkcCkKICAqIFJldHVybnMgdHJ1ZSBmb3IgYSBzdWNjZXNzZnVs
IGFsbG9jYXRpb24sIGZhbHNlIG90aGVyd2lzZQogICoqLwogc3RhdGljIGJvb2wgaTQwZV9hbGxv
Y19idWZmZXJfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKLQkJCQkgc3RydWN0IGk0MGVf
cnhfYnVmZmVyICpiaSkKKwkJCQkgc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpiaSkKIHsKIAlz
dHJ1Y3QgeGRwX3VtZW0gKnVtZW0gPSByeF9yaW5nLT54c2tfdW1lbTsKIAl2b2lkICphZGRyID0g
YmktPmFkZHI7CkBAIC0yNzksNyArMjkzLDcgQEAgc3RhdGljIGJvb2wgaTQwZV9hbGxvY19idWZm
ZXJfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKIH0KIAogLyoqCi0gKiBpNDBlX2FsbG9j
X2J1ZmZlcl9zbG93X3pjIC0gQWxsb2NhdGVzIGFuIGk0MGVfcnhfYnVmZmVyCisgKiBpNDBlX2Fs
bG9jX2J1ZmZlcl9zbG93X3pjIC0gQWxsb2NhdGVzIGFuIGk0MGVfcnhfYnVmZmVyX3pjCiAgKiBA
cnhfcmluZzogUnggcmluZwogICogQGJpOiBSeCBidWZmZXIgdG8gcG9wdWxhdGUKICAqCkBAIC0y
ODksNyArMzAzLDcgQEAgc3RhdGljIGJvb2wgaTQwZV9hbGxvY19idWZmZXJfemMoc3RydWN0IGk0
MGVfcmluZyAqcnhfcmluZywKICAqIFJldHVybnMgdHJ1ZSBmb3IgYSBzdWNjZXNzZnVsIGFsbG9j
YXRpb24sIGZhbHNlIG90aGVyd2lzZQogICoqLwogc3RhdGljIGJvb2wgaTQwZV9hbGxvY19idWZm
ZXJfc2xvd196YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAotCQkJCSAgICAgIHN0cnVjdCBp
NDBlX3J4X2J1ZmZlciAqYmkpCisJCQkJICAgICAgc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpi
aSkKIHsKIAlzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0gPSByeF9yaW5nLT54c2tfdW1lbTsKIAl1NjQg
aGFuZGxlLCBocjsKQEAgLTMxOCwxMSArMzMyLDExIEBAIHN0YXRpYyBib29sIGk0MGVfYWxsb2Nf
YnVmZmVyX3Nsb3dfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKIHN0YXRpYyBfX2Fsd2F5
c19pbmxpbmUgYm9vbAogX19pNDBlX2FsbG9jX3J4X2J1ZmZlcnNfemMoc3RydWN0IGk0MGVfcmlu
ZyAqcnhfcmluZywgdTE2IGNvdW50LAogCQkJICAgYm9vbCBhbGxvYyhzdHJ1Y3QgaTQwZV9yaW5n
ICpyeF9yaW5nLAotCQkJCSAgICAgIHN0cnVjdCBpNDBlX3J4X2J1ZmZlciAqYmkpKQorCQkJCSAg
ICAgIHN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqYmkpKQogewogCXUxNiBudHUgPSByeF9yaW5n
LT5uZXh0X3RvX3VzZTsKIAl1bmlvbiBpNDBlX3J4X2Rlc2MgKnJ4X2Rlc2M7Ci0Jc3RydWN0IGk0
MGVfcnhfYnVmZmVyICpiaTsKKwlzdHJ1Y3QgaTQwZV9yeF9idWZmZXJfemMgKmJpOwogCWJvb2wg
b2sgPSB0cnVlOwogCiAJcnhfZGVzYyA9IEk0MEVfUlhfREVTQyhyeF9yaW5nLCBudHUpOwpAQCAt
NDAyLDEwICs0MTYsMTEgQEAgc3RhdGljIGJvb2wgaTQwZV9hbGxvY19yeF9idWZmZXJzX2Zhc3Rf
emMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgdTE2IGNvdW50KQogICoKICAqIFJldHVybnMg
dGhlIHJlY2VpdmVkIFJ4IGJ1ZmZlcgogICoqLwotc3RhdGljIHN0cnVjdCBpNDBlX3J4X2J1ZmZl
ciAqaTQwZV9nZXRfcnhfYnVmZmVyX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsCi0JCQkJ
CQkgICAgY29uc3QgdW5zaWduZWQgaW50IHNpemUpCitzdGF0aWMgc3RydWN0IGk0MGVfcnhfYnVm
ZmVyX3pjICppNDBlX2dldF9yeF9idWZmZXJfemMoCisJc3RydWN0IGk0MGVfcmluZyAqcnhfcmlu
ZywKKwljb25zdCB1bnNpZ25lZCBpbnQgc2l6ZSkKIHsKLQlzdHJ1Y3QgaTQwZV9yeF9idWZmZXIg
KmJpOworCXN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqYmk7CiAKIAliaSA9IGk0MGVfcnhfYmko
cnhfcmluZywgcnhfcmluZy0+bmV4dF90b19jbGVhbik7CiAKQEAgLTQyNywxMCArNDQyLDEwIEBA
IHN0YXRpYyBzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKmk0MGVfZ2V0X3J4X2J1ZmZlcl96YyhzdHJ1
Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAogICogcmVjeWNsZSBxdWV1ZSAobmV4dF90b19hbGxvYyku
CiAgKiovCiBzdGF0aWMgdm9pZCBpNDBlX3JldXNlX3J4X2J1ZmZlcl96YyhzdHJ1Y3QgaTQwZV9y
aW5nICpyeF9yaW5nLAotCQkJCSAgICBzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKm9sZF9iaSkKKwkJ
CQkgICAgc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpvbGRfYmkpCiB7Ci0Jc3RydWN0IGk0MGVf
cnhfYnVmZmVyICpuZXdfYmkgPSBpNDBlX3J4X2JpKHJ4X3JpbmcsCi0JCQkJCQkgICByeF9yaW5n
LT5uZXh0X3RvX2FsbG9jKTsKKwlzdHJ1Y3QgaTQwZV9yeF9idWZmZXJfemMgKm5ld19iaSA9IGk0
MGVfcnhfYmkocnhfcmluZywKKwkJCQkJCSAgICAgIHJ4X3JpbmctPm5leHRfdG9fYWxsb2MpOwog
CXUxNiBudGEgPSByeF9yaW5nLT5uZXh0X3RvX2FsbG9jOwogCiAJLyogdXBkYXRlLCBhbmQgc3Rv
cmUgbmV4dCB0byBhbGxvYyAqLwpAQCAtNDUyLDcgKzQ2Nyw3IEBAIHN0YXRpYyB2b2lkIGk0MGVf
cmV1c2VfcnhfYnVmZmVyX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsCiAgKiovCiB2b2lk
IGk0MGVfemNhX2ZyZWUoc3RydWN0IHplcm9fY29weV9hbGxvY2F0b3IgKmFsbG9jLCB1bnNpZ25l
ZCBsb25nIGhhbmRsZSkKIHsKLQlzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKmJpOworCXN0cnVjdCBp
NDBlX3J4X2J1ZmZlcl96YyAqYmk7CiAJc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZzsKIAl1NjQg
aHIsIG1hc2s7CiAJdTE2IG50YTsKQEAgLTQ5MCw3ICs1MDUsNyBAQCB2b2lkIGk0MGVfemNhX2Zy
ZWUoc3RydWN0IHplcm9fY29weV9hbGxvY2F0b3IgKmFsbG9jLCB1bnNpZ25lZCBsb25nIGhhbmRs
ZSkKICAqIFJldHVybnMgdGhlIHNrYiwgb3IgTlVMTCBvbiBmYWlsdXJlLgogICoqLwogc3RhdGlj
IHN0cnVjdCBza19idWZmICppNDBlX2NvbnN0cnVjdF9za2JfemMoc3RydWN0IGk0MGVfcmluZyAq
cnhfcmluZywKLQkJCQkJICAgICBzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKmJpLAorCQkJCQkgICAg
IHN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqYmksCiAJCQkJCSAgICAgc3RydWN0IHhkcF9idWZm
ICp4ZHApCiB7CiAJdW5zaWduZWQgaW50IG1ldGFzaXplID0geGRwLT5kYXRhIC0geGRwLT5kYXRh
X21ldGE7CkBAIC01MTMsMTkgKzUyOCw2IEBAIHN0YXRpYyBzdHJ1Y3Qgc2tfYnVmZiAqaTQwZV9j
b25zdHJ1Y3Rfc2tiX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsCiAJcmV0dXJuIHNrYjsK
IH0KIAotLyoqCi0gKiBpNDBlX2luY19udGM6IEFkdmFuY2UgdGhlIG5leHRfdG9fY2xlYW4gaW5k
ZXgKLSAqIEByeF9yaW5nOiBSeCByaW5nCi0gKiovCi1zdGF0aWMgdm9pZCBpNDBlX2luY19udGMo
c3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykKLXsKLQl1MzIgbnRjID0gcnhfcmluZy0+bmV4dF90
b19jbGVhbiArIDE7Ci0KLQludGMgPSAobnRjIDwgcnhfcmluZy0+Y291bnQpID8gbnRjIDogMDsK
LQlyeF9yaW5nLT5uZXh0X3RvX2NsZWFuID0gbnRjOwotCXByZWZldGNoKEk0MEVfUlhfREVTQyhy
eF9yaW5nLCBudGMpKTsKLX0KLQogLyoqCiAgKiBpNDBlX2NsZWFuX3J4X2lycV96YyAtIENvbnN1
bWVzIFJ4IHBhY2tldHMgZnJvbSB0aGUgaGFyZHdhcmUgcmluZwogICogQHJ4X3Jpbmc6IFJ4IHJp
bmcKQEAgLTU0Nyw3ICs1NDksNyBAQCBpbnQgaTQwZV9jbGVhbl9yeF9pcnFfemMoc3RydWN0IGk0
MGVfcmluZyAqcnhfcmluZywgaW50IGJ1ZGdldCkKIAl4ZHAuZnJhbWVfc3ogPSB4c2tfdW1lbV94
ZHBfZnJhbWVfc3oodW1lbSk7CiAKIAl3aGlsZSAobGlrZWx5KHRvdGFsX3J4X3BhY2tldHMgPCAo
dW5zaWduZWQgaW50KWJ1ZGdldCkpIHsKLQkJc3RydWN0IGk0MGVfcnhfYnVmZmVyICpiaTsKKwkJ
c3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpiaTsKIAkJdW5pb24gaTQwZV9yeF9kZXNjICpyeF9k
ZXNjOwogCQl1bnNpZ25lZCBpbnQgc2l6ZTsKIAkJdTY0IHF3b3JkOwpAQCAtNTY4LDE0ICs1NzAs
MTggQEAgaW50IGk0MGVfY2xlYW5fcnhfaXJxX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3Jpbmcs
IGludCBidWRnZXQpCiAJCSAqLwogCQlkbWFfcm1iKCk7CiAKLQkJYmkgPSBpNDBlX2NsZWFuX3By
b2dyYW1taW5nX3N0YXR1cyhyeF9yaW5nLCByeF9kZXNjLAotCQkJCQkJICAgcXdvcmQpOwotCQlp
ZiAodW5saWtlbHkoYmkpKSB7CisJCWlmIChpNDBlX3J4X2lzX3Byb2dyYW1taW5nX3N0YXR1cyhx
d29yZCkpIHsKKwkJCWk0MGVfY2xlYW5fcHJvZ3JhbW1pbmdfc3RhdHVzKHJ4X3JpbmcsCisJCQkJ
CQkgICAgICByeF9kZXNjLT5yYXcucXdvcmRbMF0sCisJCQkJCQkgICAgICBxd29yZCk7CisJCQli
aSA9IGk0MGVfcnhfYmkocnhfcmluZywgcnhfcmluZy0+bmV4dF90b19jbGVhbik7CisJCQlpNDBl
X2luY19udGMocnhfcmluZyk7CiAJCQlpNDBlX3JldXNlX3J4X2J1ZmZlcl96YyhyeF9yaW5nLCBi
aSk7CiAJCQljbGVhbmVkX2NvdW50Kys7CiAJCQljb250aW51ZTsKIAkJfQogCisJCWJpID0gaTQw
ZV9yeF9iaShyeF9yaW5nLCByeF9yaW5nLT5uZXh0X3RvX2NsZWFuKTsKIAkJc2l6ZSA9IChxd29y
ZCAmIEk0MEVfUlhEX1FXMV9MRU5HVEhfUEJVRl9NQVNLKSA+PgogCQkgICAgICAgSTQwRV9SWERf
UVcxX0xFTkdUSF9QQlVGX1NISUZUOwogCQlpZiAoIXNpemUpCkBAIC04MzIsNyArODM4LDcgQEAg
dm9pZCBpNDBlX3hza19jbGVhbl9yeF9yaW5nKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcpCiAJ
dTE2IGk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgcnhfcmluZy0+Y291bnQ7IGkrKykgewotCQlzdHJ1
Y3QgaTQwZV9yeF9idWZmZXIgKnJ4X2JpID0gaTQwZV9yeF9iaShyeF9yaW5nLCBpKTsKKwkJc3Ry
dWN0IGk0MGVfcnhfYnVmZmVyX3pjICpyeF9iaSA9IGk0MGVfcnhfYmkocnhfcmluZywgaSk7CiAK
IAkJaWYgKCFyeF9iaS0+YWRkcikKIAkJCWNvbnRpbnVlOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9u
ZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5oIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQv
aW50ZWwvaTQwZS9pNDBlX3hzay5oCmluZGV4IDllZDU5YzE0ZWI1NS4uZjVlMjkyYzIxOGVlIDEw
MDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfeHNrLmgKKysr
IGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5oCkBAIC0xOSw1ICsx
OSw3IEBAIGludCBpNDBlX2NsZWFuX3J4X2lycV96YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5n
LCBpbnQgYnVkZ2V0KTsKIGJvb2wgaTQwZV9jbGVhbl94ZHBfdHhfaXJxKHN0cnVjdCBpNDBlX3Zz
aSAqdnNpLAogCQkJICAgc3RydWN0IGk0MGVfcmluZyAqdHhfcmluZywgaW50IG5hcGlfYnVkZ2V0
KTsKIGludCBpNDBlX3hza193YWtldXAoc3RydWN0IG5ldF9kZXZpY2UgKmRldiwgdTMyIHF1ZXVl
X2lkLCB1MzIgZmxhZ3MpOworaW50IGk0MGVfYWxsb2NfcnhfYmlfemMoc3RydWN0IGk0MGVfcmlu
ZyAqcnhfcmluZyk7Cit2b2lkIGk0MGVfY2xlYXJfcnhfYmlfemMoc3RydWN0IGk0MGVfcmluZyAq
cnhfcmluZyk7CiAKICNlbmRpZiAvKiBfSTQwRV9YU0tfSF8gKi8KLS0gCjIuMjUuMQoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtd2lyZWQtbGFu
IG1haWxpbmcgbGlzdApJbnRlbC13aXJlZC1sYW5Ab3N1b3NsLm9yZwpodHRwczovL2xpc3RzLm9z
dW9zbC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC13aXJlZC1sYW4K
