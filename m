Return-Path: <intel-wired-lan-bounces@osuosl.org>
X-Original-To: lists+intel-wired-lan@lfdr.de
Delivered-To: lists+intel-wired-lan@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id E09D11DBE23
	for <lists+intel-wired-lan@lfdr.de>; Wed, 20 May 2020 21:38:59 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 9F51786FB7;
	Wed, 20 May 2020 19:38:58 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id QWDvDQe4ZOh4; Wed, 20 May 2020 19:38:53 +0000 (UTC)
Received: from ash.osuosl.org (ash.osuosl.org [140.211.166.34])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 455F08711A;
	Wed, 20 May 2020 19:38:53 +0000 (UTC)
X-Original-To: intel-wired-lan@lists.osuosl.org
Delivered-To: intel-wired-lan@lists.osuosl.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by ash.osuosl.org (Postfix) with ESMTP id D5D8D1BF2F9
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:22:14 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id C69692011A
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:22:14 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id fzCsW3Zqf7WC for <intel-wired-lan@lists.osuosl.org>;
 Wed, 20 May 2020 19:22:11 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mail-pf1-f193.google.com (mail-pf1-f193.google.com
 [209.85.210.193])
 by silver.osuosl.org (Postfix) with ESMTPS id A579A25175
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:22:08 +0000 (UTC)
Received: by mail-pf1-f193.google.com with SMTP id 145so2030472pfw.13
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 12:22:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=nk0bdDqtdV1QcTA60jsKu+zUHamRghokn4yIOEdpje0=;
 b=kPutYhKXHsuoexpWbHiPlNbOvYqDzk1xhXmsdbS8uzldHuipM+6uhBwSVjKLzQcFqu
 qH+gg5bZzqeDFtucgVCiMAYrq385+cwOoAZga4+i8AqTsbS/x1eBz236msOSNPgB5zuo
 j3yBP26CbxrBbv+O/D5VEFirOMqhAVDkJ3C8WIB98jJZx84LZxl9YFT074Sy0JhDs9YN
 O9TAucxxT++vZGk10PV/KUC1LqkHrmc0YSgbe2ppP2QzYAUsRoOnyM2PX8tV0Jvi0WJl
 /XLyrFjx4n+1XGDwSesetkjWYdeEFiwCQFz2bDkn5Bh+/4kRhL8fSERx1r36IkuUl78Q
 rTfg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=nk0bdDqtdV1QcTA60jsKu+zUHamRghokn4yIOEdpje0=;
 b=GQvOpmZXQSEjODGLGZSnsF6D1/XE79pM6xZyMPoqKx7HZUPB52mrhHm+hFZNo9CyWY
 Z93d0YlDye+KhEGQqPSO0rR1otwwxUbpmXn+BD+hhJtfxT+8gQkHy8y3c8v8qS+fOwsy
 fqNBECuXrujVHEHbd/Mpvq9SUpFUeWg+Ov4gOXnIWnVzBb0EigJ8iKN+TC9ocFbkF4gT
 kG0IXUT9YFZEV15Qw1zuGaaL30CxlsmoiN3cSMhVjhdAbo7a41GyeNXI0uYVM7xmDY+1
 LV7PTycmhCWhCdK0GimnZjbk94TTZcksTrw0CDmz2WuQ3NoDZ0I7GSUYErVoIumOvLbC
 mapQ==
X-Gm-Message-State: AOAM533syfhMg+2TyeM063b3IiNfl7SnVqJdFuYepstNouYUn9peZ1pW
 H16CJku8sHKx+xB5NrgKPYM=
X-Google-Smtp-Source: ABdhPJyIVFP67k7ozgM1RbfgcmWgrLoXt8WSVG+QbuvzXmRpiArVYTnUZN7At8rpevgTtTyDaQhB5w==
X-Received: by 2002:a63:2216:: with SMTP id i22mr5228978pgi.359.1590002528088; 
 Wed, 20 May 2020 12:22:08 -0700 (PDT)
Received: from btopel-mobl.ger.intel.com (fmdmzpr03-ext.fm.intel.com.
 [192.55.54.38])
 by smtp.gmail.com with ESMTPSA id 62sm2762424pfc.204.2020.05.20.12.22.02
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Wed, 20 May 2020 12:22:07 -0700 (PDT)
From: =?UTF-8?q?Bj=C3=B6rn=20T=C3=B6pel?= <bjorn.topel@gmail.com>
To: ast@kernel.org, daniel@iogearbox.net, davem@davemloft.net, kuba@kernel.org,
 hawk@kernel.org, john.fastabend@gmail.com, netdev@vger.kernel.org,
 bpf@vger.kernel.org, magnus.karlsson@intel.com, jonathan.lemon@gmail.com,
 jeffrey.t.kirsher@intel.com
Date: Wed, 20 May 2020 21:20:57 +0200
Message-Id: <20200520192103.355233-10-bjorn.topel@gmail.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20200520192103.355233-1-bjorn.topel@gmail.com>
References: <20200520192103.355233-1-bjorn.topel@gmail.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 20 May 2020 19:38:45 +0000
Subject: [Intel-wired-lan] [PATCH bpf-next v5 09/15] ice,
 xsk: migrate to new MEM_TYPE_XSK_BUFF_POOL
X-BeenThere: intel-wired-lan@osuosl.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel Wired Ethernet Linux Kernel Driver Development
 <intel-wired-lan.osuosl.org>
List-Unsubscribe: <https://lists.osuosl.org/mailman/options/intel-wired-lan>, 
 <mailto:intel-wired-lan-request@osuosl.org?subject=unsubscribe>
List-Archive: <http://lists.osuosl.org/pipermail/intel-wired-lan/>
List-Post: <mailto:intel-wired-lan@osuosl.org>
List-Help: <mailto:intel-wired-lan-request@osuosl.org?subject=help>
List-Subscribe: <https://lists.osuosl.org/mailman/listinfo/intel-wired-lan>,
 <mailto:intel-wired-lan-request@osuosl.org?subject=subscribe>
Cc: maximmi@mellanox.com,
 =?UTF-8?q?Bj=C3=B6rn=20T=C3=B6pel?= <bjorn.topel@intel.com>,
 maciej.fijalkowski@intel.com, intel-wired-lan@lists.osuosl.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-wired-lan-bounces@osuosl.org
Sender: "Intel-wired-lan" <intel-wired-lan-bounces@osuosl.org>

RnJvbTogQmrDtnJuIFTDtnBlbCA8Ympvcm4udG9wZWxAaW50ZWwuY29tPgoKUmVtb3ZlIE1FTV9U
WVBFX1pFUk9fQ09QWSBpbiBmYXZvciBvZiB0aGUgbmV3IE1FTV9UWVBFX1hTS19CVUZGX1BPT0wK
QVBJcy4KCnY0LT52NTogRml4ZWQgIndhcm5pbmc6IEV4Y2VzcyBmdW5jdGlvbiBwYXJhbWV0ZXIg
J2FsbG9jJyBkZXNjcmlwdGlvbgogICAgICAgIGluICdpY2VfYWxsb2NfcnhfYnVmc196YyciIGFu
ZCAid2FybmluZzogRXhjZXNzIGZ1bmN0aW9uCiAgICAgICAgcGFyYW1ldGVyICd4ZHAnIGRlc2Ny
aXB0aW9uIGluCiAgICAgICAgJ2ljZV9jb25zdHJ1Y3Rfc2tiX3pjJyIuIChKYWt1YikKCkNjOiBp
bnRlbC13aXJlZC1sYW5AbGlzdHMub3N1b3NsLm9yZwpTaWduZWQtb2ZmLWJ5OiBNYWNpZWogRmlq
YWxrb3dza2kgPG1hY2llai5maWphbGtvd3NraUBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEJq
w7ZybiBUw7ZwZWwgPGJqb3JuLnRvcGVsQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL25ldC9ldGhl
cm5ldC9pbnRlbC9pY2UvaWNlX2Jhc2UuYyB8ICAxNiArLQogZHJpdmVycy9uZXQvZXRoZXJuZXQv
aW50ZWwvaWNlL2ljZV90eHJ4LmggfCAgIDggKy0KIGRyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVs
L2ljZS9pY2VfeHNrLmMgIHwgMzc2ICsrKy0tLS0tLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvbmV0
L2V0aGVybmV0L2ludGVsL2ljZS9pY2VfeHNrLmggIHwgIDEzICstCiA0IGZpbGVzIGNoYW5nZWQs
IDU0IGluc2VydGlvbnMoKyksIDM1OSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L25ldC9ldGhlcm5ldC9pbnRlbC9pY2UvaWNlX2Jhc2UuYyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0
L2ludGVsL2ljZS9pY2VfYmFzZS5jCmluZGV4IGExOWNkNmY1NDM2Yi4uNDMzZWI3MmIxYzg1IDEw
MDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pY2UvaWNlX2Jhc2UuYworKysg
Yi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pY2UvaWNlX2Jhc2UuYwpAQCAtMSw2ICsxLDcg
QEAKIC8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCiAvKiBDb3B5cmlnaHQgKGMp
IDIwMTksIEludGVsIENvcnBvcmF0aW9uLiAqLwogCisjaW5jbHVkZSA8bmV0L3hkcF9zb2NrX2Ry
di5oPgogI2luY2x1ZGUgImljZV9iYXNlLmgiCiAjaW5jbHVkZSAiaWNlX2RjYl9saWIuaCIKIApA
QCAtMzA4LDI0ICszMDksMjMgQEAgaW50IGljZV9zZXR1cF9yeF9jdHgoc3RydWN0IGljZV9yaW5n
ICpyaW5nKQogCQlpZiAocmluZy0+eHNrX3VtZW0pIHsKIAkJCXhkcF9yeHFfaW5mb191bnJlZ19t
ZW1fbW9kZWwoJnJpbmctPnhkcF9yeHEpOwogCi0JCQlyaW5nLT5yeF9idWZfbGVuID0gcmluZy0+
eHNrX3VtZW0tPmNodW5rX3NpemVfbm9ociAtCi0JCQkJCSAgIFhEUF9QQUNLRVRfSEVBRFJPT007
CisJCQlyaW5nLT5yeF9idWZfbGVuID0KKwkJCQl4c2tfdW1lbV9nZXRfcnhfZnJhbWVfc2l6ZShy
aW5nLT54c2tfdW1lbSk7CiAJCQkvKiBGb3IgQUZfWERQIFpDLCB3ZSBkaXNhbGxvdyBwYWNrZXRz
IHRvIHNwYW4gb24KIAkJCSAqIG11bHRpcGxlIGJ1ZmZlcnMsIHRodXMgbGV0dGluZyB1cyBza2lw
IHRoYXQKIAkJCSAqIGhhbmRsaW5nIGluIHRoZSBmYXN0LXBhdGguCiAJCQkgKi8KIAkJCWNoYWlu
X2xlbiA9IDE7Ci0JCQlyaW5nLT56Y2EuZnJlZSA9IGljZV96Y2FfZnJlZTsKIAkJCWVyciA9IHhk
cF9yeHFfaW5mb19yZWdfbWVtX21vZGVsKCZyaW5nLT54ZHBfcnhxLAotCQkJCQkJCSBNRU1fVFlQ
RV9aRVJPX0NPUFksCi0JCQkJCQkJICZyaW5nLT56Y2EpOworCQkJCQkJCSBNRU1fVFlQRV9YU0tf
QlVGRl9QT09MLAorCQkJCQkJCSBOVUxMKTsKIAkJCWlmIChlcnIpCiAJCQkJcmV0dXJuIGVycjsK
KwkJCXhza19idWZmX3NldF9yeHFfaW5mbyhyaW5nLT54c2tfdW1lbSwgJnJpbmctPnhkcF9yeHEp
OwogCi0JCQlkZXZfaW5mbyhpY2VfcGZfdG9fZGV2KHZzaS0+YmFjayksICJSZWdpc3RlcmVkIFhE
UCBtZW0gbW9kZWwgTUVNX1RZUEVfWkVST19DT1BZIG9uIFJ4IHJpbmcgJWRcbiIsCisJCQlkZXZf
aW5mbyhpY2VfcGZfdG9fZGV2KHZzaS0+YmFjayksICJSZWdpc3RlcmVkIFhEUCBtZW0gbW9kZWwg
TUVNX1RZUEVfWFNLX0JVRkZfUE9PTCBvbiBSeCByaW5nICVkXG4iLAogCQkJCSByaW5nLT5xX2lu
ZGV4KTsKIAkJfSBlbHNlIHsKLQkJCXJpbmctPnpjYS5mcmVlID0gTlVMTDsKIAkJCWlmICgheGRw
X3J4cV9pbmZvX2lzX3JlZygmcmluZy0+eGRwX3J4cSkpCiAJCQkJLyogY292ZXJpdHlbY2hlY2tf
cmV0dXJuXSAqLwogCQkJCXhkcF9yeHFfaW5mb19yZWcoJnJpbmctPnhkcF9yeHEsCkBAIC00MjYs
NyArNDI2LDcgQEAgaW50IGljZV9zZXR1cF9yeF9jdHgoc3RydWN0IGljZV9yaW5nICpyaW5nKQog
CXdyaXRlbCgwLCByaW5nLT50YWlsKTsKIAogCWVyciA9IHJpbmctPnhza191bWVtID8KLQkgICAg
ICBpY2VfYWxsb2NfcnhfYnVmc19zbG93X3pjKHJpbmcsIElDRV9ERVNDX1VOVVNFRChyaW5nKSkg
OgorCSAgICAgIGljZV9hbGxvY19yeF9idWZzX3pjKHJpbmcsIElDRV9ERVNDX1VOVVNFRChyaW5n
KSkgOgogCSAgICAgIGljZV9hbGxvY19yeF9idWZzKHJpbmcsIElDRV9ERVNDX1VOVVNFRChyaW5n
KSk7CiAJaWYgKGVycikKIAkJZGV2X2luZm8oaWNlX3BmX3RvX2Rldih2c2ktPmJhY2spLCAiRmFp
bGVkIGFsbG9jYXRlIHNvbWUgYnVmZmVycyBvbiAlc1J4IHJpbmcgJWQgKHBmX3EgJWQpXG4iLApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWNlL2ljZV90eHJ4LmggYi9k
cml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pY2UvaWNlX3R4cnguaAppbmRleCA3ZWUwMGExMjg2
NjMuLmQwZmQyMTczODU0ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwv
aWNlL2ljZV90eHJ4LmgKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWNlL2ljZV90
eHJ4LmgKQEAgLTE1NSwxNyArMTU1LDE2IEBAIHN0cnVjdCBpY2VfdHhfb2ZmbG9hZF9wYXJhbXMg
ewogfTsKIAogc3RydWN0IGljZV9yeF9idWYgewotCXN0cnVjdCBza19idWZmICpza2I7Ci0JZG1h
X2FkZHJfdCBkbWE7CiAJdW5pb24gewogCQlzdHJ1Y3QgeworCQkJc3RydWN0IHNrX2J1ZmYgKnNr
YjsKKwkJCWRtYV9hZGRyX3QgZG1hOwogCQkJc3RydWN0IHBhZ2UgKnBhZ2U7CiAJCQl1bnNpZ25l
ZCBpbnQgcGFnZV9vZmZzZXQ7CiAJCQl1MTYgcGFnZWNudF9iaWFzOwogCQl9OwogCQlzdHJ1Y3Qg
ewotCQkJdm9pZCAqYWRkcjsKLQkJCXU2NCBoYW5kbGU7CisJCQlzdHJ1Y3QgeGRwX2J1ZmYgKnhk
cDsKIAkJfTsKIAl9OwogfTsKQEAgLTI4OSw3ICsyODgsNiBAQCBzdHJ1Y3QgaWNlX3Jpbmcgewog
CXN0cnVjdCByY3VfaGVhZCByY3U7CQkvKiB0byBhdm9pZCByYWNlIG9uIGZyZWUgKi8KIAlzdHJ1
Y3QgYnBmX3Byb2cgKnhkcF9wcm9nOwogCXN0cnVjdCB4ZHBfdW1lbSAqeHNrX3VtZW07Ci0Jc3Ry
dWN0IHplcm9fY29weV9hbGxvY2F0b3IgemNhOwogCS8qIENMMyAtIDNyZCBjYWNoZWxpbmUgc3Rh
cnRzIGhlcmUgKi8KIAlzdHJ1Y3QgeGRwX3J4cV9pbmZvIHhkcF9yeHE7CiAJLyogQ0xYIC0gdGhl
IGJlbG93IGl0ZW1zIGFyZSBvbmx5IGFjY2Vzc2VkIGluZnJlcXVlbnRseSBhbmQgc2hvdWxkIGJl
CmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pY2UvaWNlX3hzay5jIGIv
ZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWNlL2ljZV94c2suYwppbmRleCA3MGUyMDQzMDdh
OTMuLmE3M2Y2YzNjNzBhNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwv
aWNlL2ljZV94c2suYworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pY2UvaWNlX3hz
ay5jCkBAIC0yNzksMjggKzI3OSw2IEBAIHN0YXRpYyBpbnQgaWNlX3hza19hbGxvY191bWVtcyhz
dHJ1Y3QgaWNlX3ZzaSAqdnNpKQogCXJldHVybiAwOwogfQogCi0vKioKLSAqIGljZV94c2tfYWRk
X3VtZW0gLSBhZGQgYSBVTUVNIHJlZ2lvbiBmb3IgWERQIHNvY2tldHMKLSAqIEB2c2k6IFZTSSB0
byB3aGljaCB0aGUgVU1FTSB3aWxsIGJlIGFkZGVkCi0gKiBAdW1lbTogcG9pbnRlciB0byBhIHJl
cXVlc3RlZCBVTUVNIHJlZ2lvbgotICogQHFpZDogcXVldWUgSUQKLSAqCi0gKiBSZXR1cm5zIDAg
b24gc3VjY2VzcywgbmVnYXRpdmUgb24gZXJyb3IKLSAqLwotc3RhdGljIGludCBpY2VfeHNrX2Fk
ZF91bWVtKHN0cnVjdCBpY2VfdnNpICp2c2ksIHN0cnVjdCB4ZHBfdW1lbSAqdW1lbSwgdTE2IHFp
ZCkKLXsKLQlpbnQgZXJyOwotCi0JZXJyID0gaWNlX3hza19hbGxvY191bWVtcyh2c2kpOwotCWlm
IChlcnIpCi0JCXJldHVybiBlcnI7Ci0KLQl2c2ktPnhza191bWVtc1txaWRdID0gdW1lbTsKLQl2
c2ktPm51bV94c2tfdW1lbXNfdXNlZCsrOwotCi0JcmV0dXJuIDA7Ci19Ci0KIC8qKgogICogaWNl
X3hza19yZW1vdmVfdW1lbSAtIFJlbW92ZSBhbiBVTUVNIGZvciBhIGNlcnRhaW4gcmluZy9xaWQK
ICAqIEB2c2k6IFZTSSBmcm9tIHdoaWNoIHRoZSBWU0kgd2lsbCBiZSByZW1vdmVkCkBAIC0zMTgs
NjUgKzI5Niw2IEBAIHN0YXRpYyB2b2lkIGljZV94c2tfcmVtb3ZlX3VtZW0oc3RydWN0IGljZV92
c2kgKnZzaSwgdTE2IHFpZCkKIAl9CiB9CiAKLS8qKgotICogaWNlX3hza191bWVtX2RtYV9tYXAg
LSBETUEgbWFwIFVNRU0gcmVnaW9uIGZvciBYRFAgc29ja2V0cwotICogQHZzaTogVlNJIHRvIG1h
cCB0aGUgVU1FTSByZWdpb24KLSAqIEB1bWVtOiBVTUVNIHRvIG1hcAotICoKLSAqIFJldHVybnMg
MCBvbiBzdWNjZXNzLCBuZWdhdGl2ZSBvbiBlcnJvcgotICovCi1zdGF0aWMgaW50IGljZV94c2tf
dW1lbV9kbWFfbWFwKHN0cnVjdCBpY2VfdnNpICp2c2ksIHN0cnVjdCB4ZHBfdW1lbSAqdW1lbSkK
LXsKLQlzdHJ1Y3QgaWNlX3BmICpwZiA9IHZzaS0+YmFjazsKLQlzdHJ1Y3QgZGV2aWNlICpkZXY7
Ci0JdW5zaWduZWQgaW50IGk7Ci0KLQlkZXYgPSBpY2VfcGZfdG9fZGV2KHBmKTsKLQlmb3IgKGkg
PSAwOyBpIDwgdW1lbS0+bnBnczsgaSsrKSB7Ci0JCWRtYV9hZGRyX3QgZG1hID0gZG1hX21hcF9w
YWdlX2F0dHJzKGRldiwgdW1lbS0+cGdzW2ldLCAwLAotCQkJCQkJICAgIFBBR0VfU0laRSwKLQkJ
CQkJCSAgICBETUFfQklESVJFQ1RJT05BTCwKLQkJCQkJCSAgICBJQ0VfUlhfRE1BX0FUVFIpOwot
CQlpZiAoZG1hX21hcHBpbmdfZXJyb3IoZGV2LCBkbWEpKSB7Ci0JCQlkZXZfZGJnKGRldiwgIlhT
SyBVTUVNIERNQSBtYXBwaW5nIGVycm9yIG9uIHBhZ2UgbnVtICVkXG4iLAotCQkJCWkpOwotCQkJ
Z290byBvdXRfdW5tYXA7Ci0JCX0KLQotCQl1bWVtLT5wYWdlc1tpXS5kbWEgPSBkbWE7Ci0JfQot
Ci0JcmV0dXJuIDA7Ci0KLW91dF91bm1hcDoKLQlmb3IgKDsgaSA+IDA7IGktLSkgewotCQlkbWFf
dW5tYXBfcGFnZV9hdHRycyhkZXYsIHVtZW0tPnBhZ2VzW2ldLmRtYSwgUEFHRV9TSVpFLAotCQkJ
CSAgICAgRE1BX0JJRElSRUNUSU9OQUwsIElDRV9SWF9ETUFfQVRUUik7Ci0JCXVtZW0tPnBhZ2Vz
W2ldLmRtYSA9IDA7Ci0JfQotCi0JcmV0dXJuIC1FRkFVTFQ7Ci19Ci0KLS8qKgotICogaWNlX3hz
a191bWVtX2RtYV91bm1hcCAtIERNQSB1bm1hcCBVTUVNIHJlZ2lvbiBmb3IgWERQIHNvY2tldHMK
LSAqIEB2c2k6IFZTSSBmcm9tIHdoaWNoIHRoZSBVTUVNIHdpbGwgYmUgdW5tYXBwZWQKLSAqIEB1
bWVtOiBVTUVNIHRvIHVubWFwCi0gKi8KLXN0YXRpYyB2b2lkIGljZV94c2tfdW1lbV9kbWFfdW5t
YXAoc3RydWN0IGljZV92c2kgKnZzaSwgc3RydWN0IHhkcF91bWVtICp1bWVtKQotewotCXN0cnVj
dCBpY2VfcGYgKnBmID0gdnNpLT5iYWNrOwotCXN0cnVjdCBkZXZpY2UgKmRldjsKLQl1bnNpZ25l
ZCBpbnQgaTsKLQotCWRldiA9IGljZV9wZl90b19kZXYocGYpOwotCWZvciAoaSA9IDA7IGkgPCB1
bWVtLT5ucGdzOyBpKyspIHsKLQkJZG1hX3VubWFwX3BhZ2VfYXR0cnMoZGV2LCB1bWVtLT5wYWdl
c1tpXS5kbWEsIFBBR0VfU0laRSwKLQkJCQkgICAgIERNQV9CSURJUkVDVElPTkFMLCBJQ0VfUlhf
RE1BX0FUVFIpOwotCi0JCXVtZW0tPnBhZ2VzW2ldLmRtYSA9IDA7Ci0JfQotfQogCiAvKioKICAq
IGljZV94c2tfdW1lbV9kaXNhYmxlIC0gZGlzYWJsZSBhIFVNRU0gcmVnaW9uCkBAIC0zOTEsNyAr
MzEwLDcgQEAgc3RhdGljIGludCBpY2VfeHNrX3VtZW1fZGlzYWJsZShzdHJ1Y3QgaWNlX3ZzaSAq
dnNpLCB1MTYgcWlkKQogCSAgICAhdnNpLT54c2tfdW1lbXNbcWlkXSkKIAkJcmV0dXJuIC1FSU5W
QUw7CiAKLQlpY2VfeHNrX3VtZW1fZG1hX3VubWFwKHZzaSwgdnNpLT54c2tfdW1lbXNbcWlkXSk7
CisJeHNrX2J1ZmZfZG1hX3VubWFwKHZzaS0+eHNrX3VtZW1zW3FpZF0sIElDRV9SWF9ETUFfQVRU
Uik7CiAJaWNlX3hza19yZW1vdmVfdW1lbSh2c2ksIHFpZCk7CiAKIAlyZXR1cm4gMDsKQEAgLTQw
OCw3ICszMjcsNiBAQCBzdGF0aWMgaW50IGljZV94c2tfdW1lbV9kaXNhYmxlKHN0cnVjdCBpY2Vf
dnNpICp2c2ksIHUxNiBxaWQpCiBzdGF0aWMgaW50CiBpY2VfeHNrX3VtZW1fZW5hYmxlKHN0cnVj
dCBpY2VfdnNpICp2c2ksIHN0cnVjdCB4ZHBfdW1lbSAqdW1lbSwgdTE2IHFpZCkKIHsKLQlzdHJ1
Y3QgeGRwX3VtZW1fZnFfcmV1c2UgKnJldXNlcTsKIAlpbnQgZXJyOwogCiAJaWYgKHZzaS0+dHlw
ZSAhPSBJQ0VfVlNJX1BGKQpAQCAtNDE5LDIwICszMzcsMTggQEAgaWNlX3hza191bWVtX2VuYWJs
ZShzdHJ1Y3QgaWNlX3ZzaSAqdnNpLCBzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0sIHUxNiBxaWQpCiAJ
aWYgKHFpZCA+PSB2c2ktPm51bV94c2tfdW1lbXMpCiAJCXJldHVybiAtRUlOVkFMOwogCisJZXJy
ID0gaWNlX3hza19hbGxvY191bWVtcyh2c2kpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisK
IAlpZiAodnNpLT54c2tfdW1lbXMgJiYgdnNpLT54c2tfdW1lbXNbcWlkXSkKIAkJcmV0dXJuIC1F
QlVTWTsKIAotCXJldXNlcSA9IHhza19yZXVzZXFfcHJlcGFyZSh2c2ktPnJ4X3JpbmdzWzBdLT5j
b3VudCk7Ci0JaWYgKCFyZXVzZXEpCi0JCXJldHVybiAtRU5PTUVNOwotCi0JeHNrX3JldXNlcV9m
cmVlKHhza19yZXVzZXFfc3dhcCh1bWVtLCByZXVzZXEpKTsKLQotCWVyciA9IGljZV94c2tfdW1l
bV9kbWFfbWFwKHZzaSwgdW1lbSk7Ci0JaWYgKGVycikKLQkJcmV0dXJuIGVycjsKKwl2c2ktPnhz
a191bWVtc1txaWRdID0gdW1lbTsKKwl2c2ktPm51bV94c2tfdW1lbXNfdXNlZCsrOwogCi0JZXJy
ID0gaWNlX3hza19hZGRfdW1lbSh2c2ksIHVtZW0sIHFpZCk7CisJZXJyID0geHNrX2J1ZmZfZG1h
X21hcCh2c2ktPnhza191bWVtc1txaWRdLCBpY2VfcGZfdG9fZGV2KHZzaS0+YmFjayksCisJCQkg
ICAgICAgSUNFX1JYX0RNQV9BVFRSKTsKIAlpZiAoZXJyKQogCQlyZXR1cm4gZXJyOwogCkBAIC00
ODMsMTM4ICszOTksMjMgQEAgaW50IGljZV94c2tfdW1lbV9zZXR1cChzdHJ1Y3QgaWNlX3ZzaSAq
dnNpLCBzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0sIHUxNiBxaWQpCiAJcmV0dXJuIHJldDsKIH0KIAot
LyoqCi0gKiBpY2VfemNhX2ZyZWUgLSBDYWxsYmFjayBmb3IgTUVNX1RZUEVfWkVST19DT1BZIGFs
bG9jYXRpb25zCi0gKiBAemNhOiB6ZXJvLWNwb3kgYWxsb2NhdG9yCi0gKiBAaGFuZGxlOiBCdWZm
ZXIgaGFuZGxlCi0gKi8KLXZvaWQgaWNlX3pjYV9mcmVlKHN0cnVjdCB6ZXJvX2NvcHlfYWxsb2Nh
dG9yICp6Y2EsIHVuc2lnbmVkIGxvbmcgaGFuZGxlKQotewotCXN0cnVjdCBpY2VfcnhfYnVmICpy
eF9idWY7Ci0Jc3RydWN0IGljZV9yaW5nICpyeF9yaW5nOwotCXN0cnVjdCB4ZHBfdW1lbSAqdW1l
bTsKLQl1NjQgaHIsIG1hc2s7Ci0JdTE2IG50YTsKLQotCXJ4X3JpbmcgPSBjb250YWluZXJfb2Yo
emNhLCBzdHJ1Y3QgaWNlX3JpbmcsIHpjYSk7Ci0JdW1lbSA9IHJ4X3JpbmctPnhza191bWVtOwot
CWhyID0gdW1lbS0+aGVhZHJvb20gKyBYRFBfUEFDS0VUX0hFQURST09NOwotCi0JbWFzayA9IHVt
ZW0tPmNodW5rX21hc2s7Ci0KLQludGEgPSByeF9yaW5nLT5uZXh0X3RvX2FsbG9jOwotCXJ4X2J1
ZiA9ICZyeF9yaW5nLT5yeF9idWZbbnRhXTsKLQotCW50YSsrOwotCXJ4X3JpbmctPm5leHRfdG9f
YWxsb2MgPSAobnRhIDwgcnhfcmluZy0+Y291bnQpID8gbnRhIDogMDsKLQotCWhhbmRsZSAmPSBt
YXNrOwotCi0JcnhfYnVmLT5kbWEgPSB4ZHBfdW1lbV9nZXRfZG1hKHVtZW0sIGhhbmRsZSk7Ci0J
cnhfYnVmLT5kbWEgKz0gaHI7Ci0KLQlyeF9idWYtPmFkZHIgPSB4ZHBfdW1lbV9nZXRfZGF0YSh1
bWVtLCBoYW5kbGUpOwotCXJ4X2J1Zi0+YWRkciArPSBocjsKLQotCXJ4X2J1Zi0+aGFuZGxlID0g
KHU2NCloYW5kbGUgKyB1bWVtLT5oZWFkcm9vbTsKLX0KLQotLyoqCi0gKiBpY2VfYWxsb2NfYnVm
X2Zhc3RfemMgLSBSZXRyaWV2ZSBidWZmZXIgYWRkcmVzcyBmcm9tIFhEUCB1bWVtCi0gKiBAcnhf
cmluZzogcmluZyB3aXRoIGFuIHhkcF91bWVtIGJvdW5kIHRvIGl0Ci0gKiBAcnhfYnVmOiBidWZm
ZXIgdG8gd2hpY2ggeHNrIHBhZ2UgYWRkcmVzcyB3aWxsIGJlIGFzc2lnbmVkCi0gKgotICogVGhp
cyBmdW5jdGlvbiBhbGxvY2F0ZXMgYW4gUnggYnVmZmVyIGluIHRoZSBob3QgcGF0aC4KLSAqIFRo
ZSBidWZmZXIgY2FuIGNvbWUgZnJvbSBmaWxsIHF1ZXVlIG9yIHJlY3ljbGUgcXVldWUuCi0gKgot
ICogUmV0dXJucyB0cnVlIGlmIGFuIGFzc2lnbm1lbnQgd2FzIHN1Y2Nlc3NmdWwsIGZhbHNlIGlm
IG5vdC4KLSAqLwotc3RhdGljIF9fYWx3YXlzX2lubGluZSBib29sCi1pY2VfYWxsb2NfYnVmX2Zh
c3RfemMoc3RydWN0IGljZV9yaW5nICpyeF9yaW5nLCBzdHJ1Y3QgaWNlX3J4X2J1ZiAqcnhfYnVm
KQotewotCXN0cnVjdCB4ZHBfdW1lbSAqdW1lbSA9IHJ4X3JpbmctPnhza191bWVtOwotCXZvaWQg
KmFkZHIgPSByeF9idWYtPmFkZHI7Ci0JdTY0IGhhbmRsZSwgaHI7Ci0KLQlpZiAoYWRkcikgewot
CQlyeF9yaW5nLT5yeF9zdGF0cy5wYWdlX3JldXNlX2NvdW50Kys7Ci0JCXJldHVybiB0cnVlOwot
CX0KLQotCWlmICgheHNrX3VtZW1fcGVla19hZGRyKHVtZW0sICZoYW5kbGUpKSB7Ci0JCXJ4X3Jp
bmctPnJ4X3N0YXRzLmFsbG9jX3BhZ2VfZmFpbGVkKys7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0K
LQlociA9IHVtZW0tPmhlYWRyb29tICsgWERQX1BBQ0tFVF9IRUFEUk9PTTsKLQotCXJ4X2J1Zi0+
ZG1hID0geGRwX3VtZW1fZ2V0X2RtYSh1bWVtLCBoYW5kbGUpOwotCXJ4X2J1Zi0+ZG1hICs9IGhy
OwotCi0JcnhfYnVmLT5hZGRyID0geGRwX3VtZW1fZ2V0X2RhdGEodW1lbSwgaGFuZGxlKTsKLQly
eF9idWYtPmFkZHIgKz0gaHI7Ci0KLQlyeF9idWYtPmhhbmRsZSA9IGhhbmRsZSArIHVtZW0tPmhl
YWRyb29tOwotCi0JeHNrX3VtZW1fcmVsZWFzZV9hZGRyKHVtZW0pOwotCXJldHVybiB0cnVlOwot
fQotCi0vKioKLSAqIGljZV9hbGxvY19idWZfc2xvd196YyAtIFJldHJpZXZlIGJ1ZmZlciBhZGRy
ZXNzIGZyb20gWERQIHVtZW0KLSAqIEByeF9yaW5nOiByaW5nIHdpdGggYW4geGRwX3VtZW0gYm91
bmQgdG8gaXQKLSAqIEByeF9idWY6IGJ1ZmZlciB0byB3aGljaCB4c2sgcGFnZSBhZGRyZXNzIHdp
bGwgYmUgYXNzaWduZWQKLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGFsbG9jYXRlcyBhbiBSeCBidWZm
ZXIgaW4gdGhlIHNsb3cgcGF0aC4KLSAqIFRoZSBidWZmZXIgY2FuIGNvbWUgZnJvbSBmaWxsIHF1
ZXVlIG9yIHJlY3ljbGUgcXVldWUuCi0gKgotICogUmV0dXJucyB0cnVlIGlmIGFuIGFzc2lnbm1l
bnQgd2FzIHN1Y2Nlc3NmdWwsIGZhbHNlIGlmIG5vdC4KLSAqLwotc3RhdGljIF9fYWx3YXlzX2lu
bGluZSBib29sCi1pY2VfYWxsb2NfYnVmX3Nsb3dfemMoc3RydWN0IGljZV9yaW5nICpyeF9yaW5n
LCBzdHJ1Y3QgaWNlX3J4X2J1ZiAqcnhfYnVmKQotewotCXN0cnVjdCB4ZHBfdW1lbSAqdW1lbSA9
IHJ4X3JpbmctPnhza191bWVtOwotCXU2NCBoYW5kbGUsIGhlYWRyb29tOwotCi0JaWYgKCF4c2tf
dW1lbV9wZWVrX2FkZHJfcnEodW1lbSwgJmhhbmRsZSkpIHsKLQkJcnhfcmluZy0+cnhfc3RhdHMu
YWxsb2NfcGFnZV9mYWlsZWQrKzsKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQotCWhhbmRsZSAmPSB1
bWVtLT5jaHVua19tYXNrOwotCWhlYWRyb29tID0gdW1lbS0+aGVhZHJvb20gKyBYRFBfUEFDS0VU
X0hFQURST09NOwotCi0JcnhfYnVmLT5kbWEgPSB4ZHBfdW1lbV9nZXRfZG1hKHVtZW0sIGhhbmRs
ZSk7Ci0JcnhfYnVmLT5kbWEgKz0gaGVhZHJvb207Ci0KLQlyeF9idWYtPmFkZHIgPSB4ZHBfdW1l
bV9nZXRfZGF0YSh1bWVtLCBoYW5kbGUpOwotCXJ4X2J1Zi0+YWRkciArPSBoZWFkcm9vbTsKLQot
CXJ4X2J1Zi0+aGFuZGxlID0gaGFuZGxlICsgdW1lbS0+aGVhZHJvb207Ci0KLQl4c2tfdW1lbV9y
ZWxlYXNlX2FkZHJfcnEodW1lbSk7Ci0JcmV0dXJuIHRydWU7Ci19Ci0KIC8qKgogICogaWNlX2Fs
bG9jX3J4X2J1ZnNfemMgLSBhbGxvY2F0ZSBhIG51bWJlciBvZiBSeCBidWZmZXJzCiAgKiBAcnhf
cmluZzogUnggcmluZwogICogQGNvdW50OiBUaGUgbnVtYmVyIG9mIGJ1ZmZlcnMgdG8gYWxsb2Nh
dGUKLSAqIEBhbGxvYzogdGhlIGZ1bmN0aW9uIHBvaW50ZXIgdG8gY2FsbCBmb3IgYWxsb2NhdGlv
bgogICoKICAqIFRoaXMgZnVuY3Rpb24gYWxsb2NhdGVzIGEgbnVtYmVyIG9mIFJ4IGJ1ZmZlcnMg
ZnJvbSB0aGUgZmlsbCByaW5nCiAgKiBvciB0aGUgaW50ZXJuYWwgcmVjeWNsZSBtZWNoYW5pc20g
YW5kIHBsYWNlcyB0aGVtIG9uIHRoZSBSeCByaW5nLgogICoKICAqIFJldHVybnMgZmFsc2UgaWYg
YWxsIGFsbG9jYXRpb25zIHdlcmUgc3VjY2Vzc2Z1bCwgdHJ1ZSBpZiBhbnkgZmFpbC4KICAqLwot
c3RhdGljIGJvb2wKLWljZV9hbGxvY19yeF9idWZzX3pjKHN0cnVjdCBpY2VfcmluZyAqcnhfcmlu
ZywgaW50IGNvdW50LAotCQkgICAgIGJvb2wgKCphbGxvYykoc3RydWN0IGljZV9yaW5nICosIHN0
cnVjdCBpY2VfcnhfYnVmICopKQorYm9vbCBpY2VfYWxsb2NfcnhfYnVmc196YyhzdHJ1Y3QgaWNl
X3JpbmcgKnJ4X3JpbmcsIHUxNiBjb3VudCkKIHsKIAl1bmlvbiBpY2VfMzJiX3J4X2ZsZXhfZGVz
YyAqcnhfZGVzYzsKIAl1MTYgbnR1ID0gcnhfcmluZy0+bmV4dF90b191c2U7CiAJc3RydWN0IGlj
ZV9yeF9idWYgKnJ4X2J1ZjsKIAlib29sIHJldCA9IGZhbHNlOworCWRtYV9hZGRyX3QgZG1hOwog
CiAJaWYgKCFjb3VudCkKIAkJcmV0dXJuIGZhbHNlOwpAQCAtNjIzLDE2ICs0MjQsMTQgQEAgaWNl
X2FsbG9jX3J4X2J1ZnNfemMoc3RydWN0IGljZV9yaW5nICpyeF9yaW5nLCBpbnQgY291bnQsCiAJ
cnhfYnVmID0gJnJ4X3JpbmctPnJ4X2J1ZltudHVdOwogCiAJZG8gewotCQlpZiAoIWFsbG9jKHJ4
X3JpbmcsIHJ4X2J1ZikpIHsKKwkJcnhfYnVmLT54ZHAgPSB4c2tfYnVmZl9hbGxvYyhyeF9yaW5n
LT54c2tfdW1lbSk7CisJCWlmICghcnhfYnVmLT54ZHApIHsKIAkJCXJldCA9IHRydWU7CiAJCQli
cmVhazsKIAkJfQogCi0JCWRtYV9zeW5jX3NpbmdsZV9yYW5nZV9mb3JfZGV2aWNlKHJ4X3Jpbmct
PmRldiwgcnhfYnVmLT5kbWEsIDAsCi0JCQkJCQkgcnhfcmluZy0+cnhfYnVmX2xlbiwKLQkJCQkJ
CSBETUFfQklESVJFQ1RJT05BTCk7Ci0KLQkJcnhfZGVzYy0+cmVhZC5wa3RfYWRkciA9IGNwdV90
b19sZTY0KHJ4X2J1Zi0+ZG1hKTsKKwkJZG1hID0geHNrX2J1ZmZfeGRwX2dldF9kbWEocnhfYnVm
LT54ZHApOworCQlyeF9kZXNjLT5yZWFkLnBrdF9hZGRyID0gY3B1X3RvX2xlNjQoZG1hKTsKIAkJ
cnhfZGVzYy0+d2Iuc3RhdHVzX2Vycm9yMCA9IDA7CiAKIAkJcnhfZGVzYysrOwpAQCAtNjUyLDMy
ICs0NTEsNiBAQCBpY2VfYWxsb2NfcnhfYnVmc196YyhzdHJ1Y3QgaWNlX3JpbmcgKnJ4X3Jpbmcs
IGludCBjb3VudCwKIAlyZXR1cm4gcmV0OwogfQogCi0vKioKLSAqIGljZV9hbGxvY19yeF9idWZz
X2Zhc3RfemMgLSBhbGxvY2F0ZSB6ZXJvIGNvcHkgYnVmcyBpbiB0aGUgaG90IHBhdGgKLSAqIEBy
eF9yaW5nOiBSeCByaW5nCi0gKiBAY291bnQ6IG51bWJlciBvZiBidWZzIHRvIGFsbG9jYXRlCi0g
KgotICogUmV0dXJucyBmYWxzZSBvbiBzdWNjZXNzLCB0cnVlIG9uIGZhaWx1cmUuCi0gKi8KLXN0
YXRpYyBib29sIGljZV9hbGxvY19yeF9idWZzX2Zhc3RfemMoc3RydWN0IGljZV9yaW5nICpyeF9y
aW5nLCB1MTYgY291bnQpCi17Ci0JcmV0dXJuIGljZV9hbGxvY19yeF9idWZzX3pjKHJ4X3Jpbmcs
IGNvdW50LAotCQkJCSAgICBpY2VfYWxsb2NfYnVmX2Zhc3RfemMpOwotfQotCi0vKioKLSAqIGlj
ZV9hbGxvY19yeF9idWZzX3Nsb3dfemMgLSBhbGxvY2F0ZSB6ZXJvIGNvcHkgYnVmcyBpbiB0aGUg
c2xvdyBwYXRoCi0gKiBAcnhfcmluZzogUnggcmluZwotICogQGNvdW50OiBudW1iZXIgb2YgYnVm
cyB0byBhbGxvY2F0ZQotICoKLSAqIFJldHVybnMgZmFsc2Ugb24gc3VjY2VzcywgdHJ1ZSBvbiBm
YWlsdXJlLgotICovCi1ib29sIGljZV9hbGxvY19yeF9idWZzX3Nsb3dfemMoc3RydWN0IGljZV9y
aW5nICpyeF9yaW5nLCB1MTYgY291bnQpCi17Ci0JcmV0dXJuIGljZV9hbGxvY19yeF9idWZzX3pj
KHJ4X3JpbmcsIGNvdW50LAotCQkJCSAgICBpY2VfYWxsb2NfYnVmX3Nsb3dfemMpOwotfQotCiAv
KioKICAqIGljZV9idW1wX250YyAtIEJ1bXAgdGhlIG5leHRfdG9fY2xlYW4gY291bnRlciBvZiBh
biBSeCByaW5nCiAgKiBAcnhfcmluZzogUnggcmluZwpAQCAtNjkxLDc3ICs0NjQsMjIgQEAgc3Rh
dGljIHZvaWQgaWNlX2J1bXBfbnRjKHN0cnVjdCBpY2VfcmluZyAqcnhfcmluZykKIAlwcmVmZXRj
aChJQ0VfUlhfREVTQyhyeF9yaW5nLCBudGMpKTsKIH0KIAotLyoqCi0gKiBpY2VfZ2V0X3J4X2J1
Zl96YyAtIEZldGNoIHRoZSBjdXJyZW50IFJ4IGJ1ZmZlcgotICogQHJ4X3Jpbmc6IFJ4IHJpbmcK
LSAqIEBzaXplOiBzaXplIG9mIGEgYnVmZmVyCi0gKgotICogVGhpcyBmdW5jdGlvbiByZXR1cm5z
IHRoZSBjdXJyZW50LCByZWNlaXZlZCBSeCBidWZmZXIgYW5kIGRvZXMKLSAqIERNQSBzeW5jaHJv
bml6YXRpb24uCi0gKgotICogUmV0dXJucyBhIHBvaW50ZXIgdG8gdGhlIHJlY2VpdmVkIFJ4IGJ1
ZmZlci4KLSAqLwotc3RhdGljIHN0cnVjdCBpY2VfcnhfYnVmICppY2VfZ2V0X3J4X2J1Zl96Yyhz
dHJ1Y3QgaWNlX3JpbmcgKnJ4X3JpbmcsIGludCBzaXplKQotewotCXN0cnVjdCBpY2VfcnhfYnVm
ICpyeF9idWY7Ci0KLQlyeF9idWYgPSAmcnhfcmluZy0+cnhfYnVmW3J4X3JpbmctPm5leHRfdG9f
Y2xlYW5dOwotCi0JZG1hX3N5bmNfc2luZ2xlX3JhbmdlX2Zvcl9jcHUocnhfcmluZy0+ZGV2LCBy
eF9idWYtPmRtYSwgMCwKLQkJCQkgICAgICBzaXplLCBETUFfQklESVJFQ1RJT05BTCk7Ci0KLQly
ZXR1cm4gcnhfYnVmOwotfQotCi0vKioKLSAqIGljZV9yZXVzZV9yeF9idWZfemMgLSByZXVzZSBh
biBSeCBidWZmZXIKLSAqIEByeF9yaW5nOiBSeCByaW5nCi0gKiBAb2xkX2J1ZjogVGhlIGJ1ZmZl
ciB0byByZWN5Y2xlCi0gKgotICogVGhpcyBmdW5jdGlvbiByZWN5Y2xlcyBhIGZpbmlzaGVkIFJ4
IGJ1ZmZlciwgYW5kIHBsYWNlcyBpdCBvbiB0aGUgcmVjeWNsZQotICogcXVldWUgKG5leHRfdG9f
YWxsb2MpLgotICovCi1zdGF0aWMgdm9pZAotaWNlX3JldXNlX3J4X2J1Zl96YyhzdHJ1Y3QgaWNl
X3JpbmcgKnJ4X3JpbmcsIHN0cnVjdCBpY2VfcnhfYnVmICpvbGRfYnVmKQotewotCXVuc2lnbmVk
IGxvbmcgbWFzayA9ICh1bnNpZ25lZCBsb25nKXJ4X3JpbmctPnhza191bWVtLT5jaHVua19tYXNr
OwotCXU2NCBociA9IHJ4X3JpbmctPnhza191bWVtLT5oZWFkcm9vbSArIFhEUF9QQUNLRVRfSEVB
RFJPT007Ci0JdTE2IG50YSA9IHJ4X3JpbmctPm5leHRfdG9fYWxsb2M7Ci0Jc3RydWN0IGljZV9y
eF9idWYgKm5ld19idWY7Ci0KLQluZXdfYnVmID0gJnJ4X3JpbmctPnJ4X2J1ZltudGErK107Ci0J
cnhfcmluZy0+bmV4dF90b19hbGxvYyA9IChudGEgPCByeF9yaW5nLT5jb3VudCkgPyBudGEgOiAw
OwotCi0JbmV3X2J1Zi0+ZG1hID0gb2xkX2J1Zi0+ZG1hICYgbWFzazsKLQluZXdfYnVmLT5kbWEg
Kz0gaHI7Ci0KLQluZXdfYnVmLT5hZGRyID0gKHZvaWQgKikoKHVuc2lnbmVkIGxvbmcpb2xkX2J1
Zi0+YWRkciAmIG1hc2spOwotCW5ld19idWYtPmFkZHIgKz0gaHI7Ci0KLQluZXdfYnVmLT5oYW5k
bGUgPSBvbGRfYnVmLT5oYW5kbGUgJiBtYXNrOwotCW5ld19idWYtPmhhbmRsZSArPSByeF9yaW5n
LT54c2tfdW1lbS0+aGVhZHJvb207Ci0KLQlvbGRfYnVmLT5hZGRyID0gTlVMTDsKLX0KLQogLyoq
CiAgKiBpY2VfY29uc3RydWN0X3NrYl96YyAtIENyZWF0ZSBhbiBza19idWZmIGZyb20gemVyby1j
b3B5IGJ1ZmZlcgogICogQHJ4X3Jpbmc6IFJ4IHJpbmcKICAqIEByeF9idWY6IHplcm8tY29weSBS
eCBidWZmZXIKLSAqIEB4ZHA6IFhEUCBidWZmZXIKICAqCiAgKiBUaGlzIGZ1bmN0aW9uIGFsbG9j
YXRlcyBhIG5ldyBza2IgZnJvbSBhIHplcm8tY29weSBSeCBidWZmZXIuCiAgKgogICogUmV0dXJu
cyB0aGUgc2tiIG9uIHN1Y2Nlc3MsIE5VTEwgb24gZmFpbHVyZS4KICAqLwogc3RhdGljIHN0cnVj
dCBza19idWZmICoKLWljZV9jb25zdHJ1Y3Rfc2tiX3pjKHN0cnVjdCBpY2VfcmluZyAqcnhfcmlu
Zywgc3RydWN0IGljZV9yeF9idWYgKnJ4X2J1ZiwKLQkJICAgICBzdHJ1Y3QgeGRwX2J1ZmYgKnhk
cCkKK2ljZV9jb25zdHJ1Y3Rfc2tiX3pjKHN0cnVjdCBpY2VfcmluZyAqcnhfcmluZywgc3RydWN0
IGljZV9yeF9idWYgKnJ4X2J1ZikKIHsKLQl1bnNpZ25lZCBpbnQgbWV0YXNpemUgPSB4ZHAtPmRh
dGEgLSB4ZHAtPmRhdGFfbWV0YTsKLQl1bnNpZ25lZCBpbnQgZGF0YXNpemUgPSB4ZHAtPmRhdGFf
ZW5kIC0geGRwLT5kYXRhOwotCXVuc2lnbmVkIGludCBkYXRhc2l6ZV9oYXJkID0geGRwLT5kYXRh
X2VuZCAtCi0JCQkJICAgICB4ZHAtPmRhdGFfaGFyZF9zdGFydDsKKwl1bnNpZ25lZCBpbnQgbWV0
YXNpemUgPSByeF9idWYtPnhkcC0+ZGF0YSAtIHJ4X2J1Zi0+eGRwLT5kYXRhX21ldGE7CisJdW5z
aWduZWQgaW50IGRhdGFzaXplID0gcnhfYnVmLT54ZHAtPmRhdGFfZW5kIC0gcnhfYnVmLT54ZHAt
PmRhdGE7CisJdW5zaWduZWQgaW50IGRhdGFzaXplX2hhcmQgPSByeF9idWYtPnhkcC0+ZGF0YV9l
bmQgLQorCQkJCSAgICAgcnhfYnVmLT54ZHAtPmRhdGFfaGFyZF9zdGFydDsKIAlzdHJ1Y3Qgc2tf
YnVmZiAqc2tiOwogCiAJc2tiID0gX19uYXBpX2FsbG9jX3NrYigmcnhfcmluZy0+cV92ZWN0b3It
Pm5hcGksIGRhdGFzaXplX2hhcmQsCkBAIC03NjksMTMgKzQ4NywxMyBAQCBpY2VfY29uc3RydWN0
X3NrYl96YyhzdHJ1Y3QgaWNlX3JpbmcgKnJ4X3JpbmcsIHN0cnVjdCBpY2VfcnhfYnVmICpyeF9i
dWYsCiAJaWYgKHVubGlrZWx5KCFza2IpKQogCQlyZXR1cm4gTlVMTDsKIAotCXNrYl9yZXNlcnZl
KHNrYiwgeGRwLT5kYXRhIC0geGRwLT5kYXRhX2hhcmRfc3RhcnQpOwotCW1lbWNweShfX3NrYl9w
dXQoc2tiLCBkYXRhc2l6ZSksIHhkcC0+ZGF0YSwgZGF0YXNpemUpOworCXNrYl9yZXNlcnZlKHNr
YiwgcnhfYnVmLT54ZHAtPmRhdGEgLSByeF9idWYtPnhkcC0+ZGF0YV9oYXJkX3N0YXJ0KTsKKwlt
ZW1jcHkoX19za2JfcHV0KHNrYiwgZGF0YXNpemUpLCByeF9idWYtPnhkcC0+ZGF0YSwgZGF0YXNp
emUpOwogCWlmIChtZXRhc2l6ZSkKIAkJc2tiX21ldGFkYXRhX3NldChza2IsIG1ldGFzaXplKTsK
IAotCWljZV9yZXVzZV9yeF9idWZfemMocnhfcmluZywgcnhfYnVmKTsKLQorCXhza19idWZmX2Zy
ZWUocnhfYnVmLT54ZHApOworCXJ4X2J1Zi0+eGRwID0gTlVMTDsKIAlyZXR1cm4gc2tiOwogfQog
CkBAIC04MDIsNyArNTIwLDYgQEAgaWNlX3J1bl94ZHBfemMoc3RydWN0IGljZV9yaW5nICpyeF9y
aW5nLCBzdHJ1Y3QgeGRwX2J1ZmYgKnhkcCkKIAl9CiAKIAlhY3QgPSBicGZfcHJvZ19ydW5feGRw
KHhkcF9wcm9nLCB4ZHApOwotCXhkcC0+aGFuZGxlICs9IHhkcC0+ZGF0YSAtIHhkcC0+ZGF0YV9o
YXJkX3N0YXJ0OwogCXN3aXRjaCAoYWN0KSB7CiAJY2FzZSBYRFBfUEFTUzoKIAkJYnJlYWs7CkBA
IC04NDAsMTMgKzU1Nyw4IEBAIGludCBpY2VfY2xlYW5fcnhfaXJxX3pjKHN0cnVjdCBpY2Vfcmlu
ZyAqcnhfcmluZywgaW50IGJ1ZGdldCkKIHsKIAl1bnNpZ25lZCBpbnQgdG90YWxfcnhfYnl0ZXMg
PSAwLCB0b3RhbF9yeF9wYWNrZXRzID0gMDsKIAl1MTYgY2xlYW5lZF9jb3VudCA9IElDRV9ERVND
X1VOVVNFRChyeF9yaW5nKTsKLQlzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0gPSByeF9yaW5nLT54c2tf
dW1lbTsKIAl1bnNpZ25lZCBpbnQgeGRwX3htaXQgPSAwOwogCWJvb2wgZmFpbHVyZSA9IGZhbHNl
OwotCXN0cnVjdCB4ZHBfYnVmZiB4ZHA7Ci0KLQl4ZHAucnhxID0gJnJ4X3JpbmctPnhkcF9yeHE7
Ci0JeGRwLmZyYW1lX3N6ID0geHNrX3VtZW1feGRwX2ZyYW1lX3N6KHVtZW0pOwogCiAJd2hpbGUg
KGxpa2VseSh0b3RhbF9yeF9wYWNrZXRzIDwgKHVuc2lnbmVkIGludClidWRnZXQpKSB7CiAJCXVu
aW9uIGljZV8zMmJfcnhfZmxleF9kZXNjICpyeF9kZXNjOwpAQCAtODU4LDggKzU3MCw4IEBAIGlu
dCBpY2VfY2xlYW5fcnhfaXJxX3pjKHN0cnVjdCBpY2VfcmluZyAqcnhfcmluZywgaW50IGJ1ZGdl
dCkKIAkJdTggcnhfcHR5cGU7CiAKIAkJaWYgKGNsZWFuZWRfY291bnQgPj0gSUNFX1JYX0JVRl9X
UklURSkgewotCQkJZmFpbHVyZSB8PSBpY2VfYWxsb2NfcnhfYnVmc19mYXN0X3pjKHJ4X3Jpbmcs
Ci0JCQkJCQkJICAgICBjbGVhbmVkX2NvdW50KTsKKwkJCWZhaWx1cmUgfD0gaWNlX2FsbG9jX3J4
X2J1ZnNfemMocnhfcmluZywKKwkJCQkJCQljbGVhbmVkX2NvdW50KTsKIAkJCWNsZWFuZWRfY291
bnQgPSAwOwogCQl9CiAKQEAgLTg4MCwyNSArNTkyLDE5IEBAIGludCBpY2VfY2xlYW5fcnhfaXJx
X3pjKHN0cnVjdCBpY2VfcmluZyAqcnhfcmluZywgaW50IGJ1ZGdldCkKIAkJaWYgKCFzaXplKQog
CQkJYnJlYWs7CiAKLQkJcnhfYnVmID0gaWNlX2dldF9yeF9idWZfemMocnhfcmluZywgc2l6ZSk7
Ci0JCWlmICghcnhfYnVmLT5hZGRyKQotCQkJYnJlYWs7CiAKLQkJeGRwLmRhdGEgPSByeF9idWYt
PmFkZHI7Ci0JCXhkcC5kYXRhX21ldGEgPSB4ZHAuZGF0YTsKLQkJeGRwLmRhdGFfaGFyZF9zdGFy
dCA9IHhkcC5kYXRhIC0gWERQX1BBQ0tFVF9IRUFEUk9PTTsKLQkJeGRwLmRhdGFfZW5kID0geGRw
LmRhdGEgKyBzaXplOwotCQl4ZHAuaGFuZGxlID0gcnhfYnVmLT5oYW5kbGU7CisJCXJ4X2J1ZiA9
ICZyeF9yaW5nLT5yeF9idWZbcnhfcmluZy0+bmV4dF90b19jbGVhbl07CisJCXJ4X2J1Zi0+eGRw
LT5kYXRhX2VuZCA9IHJ4X2J1Zi0+eGRwLT5kYXRhICsgc2l6ZTsKKwkJeHNrX2J1ZmZfZG1hX3N5
bmNfZm9yX2NwdShyeF9idWYtPnhkcCk7CiAKLQkJeGRwX3JlcyA9IGljZV9ydW5feGRwX3pjKHJ4
X3JpbmcsICZ4ZHApOworCQl4ZHBfcmVzID0gaWNlX3J1bl94ZHBfemMocnhfcmluZywgcnhfYnVm
LT54ZHApOwogCQlpZiAoeGRwX3JlcykgewotCQkJaWYgKHhkcF9yZXMgJiAoSUNFX1hEUF9UWCB8
IElDRV9YRFBfUkVESVIpKSB7CisJCQlpZiAoeGRwX3JlcyAmIChJQ0VfWERQX1RYIHwgSUNFX1hE
UF9SRURJUikpCiAJCQkJeGRwX3htaXQgfD0geGRwX3JlczsKLQkJCQlyeF9idWYtPmFkZHIgPSBO
VUxMOwotCQkJfSBlbHNlIHsKLQkJCQlpY2VfcmV1c2VfcnhfYnVmX3pjKHJ4X3JpbmcsIHJ4X2J1
Zik7Ci0JCQl9CisJCQllbHNlCisJCQkJeHNrX2J1ZmZfZnJlZShyeF9idWYtPnhkcCk7CiAKKwkJ
CXJ4X2J1Zi0+eGRwID0gTlVMTDsKIAkJCXRvdGFsX3J4X2J5dGVzICs9IHNpemU7CiAJCQl0b3Rh
bF9yeF9wYWNrZXRzKys7CiAJCQljbGVhbmVkX2NvdW50Kys7CkBAIC05MDgsNyArNjE0LDcgQEAg
aW50IGljZV9jbGVhbl9yeF9pcnFfemMoc3RydWN0IGljZV9yaW5nICpyeF9yaW5nLCBpbnQgYnVk
Z2V0KQogCQl9CiAKIAkJLyogWERQX1BBU1MgcGF0aCAqLwotCQlza2IgPSBpY2VfY29uc3RydWN0
X3NrYl96YyhyeF9yaW5nLCByeF9idWYsICZ4ZHApOworCQlza2IgPSBpY2VfY29uc3RydWN0X3Nr
Yl96YyhyeF9yaW5nLCByeF9idWYpOwogCQlpZiAoIXNrYikgewogCQkJcnhfcmluZy0+cnhfc3Rh
dHMuYWxsb2NfYnVmX2ZhaWxlZCsrOwogCQkJYnJlYWs7CkBAIC05NzksMTAgKzY4NSw5IEBAIHN0
YXRpYyBib29sIGljZV94bWl0X3pjKHN0cnVjdCBpY2VfcmluZyAqeGRwX3JpbmcsIGludCBidWRn
ZXQpCiAJCWlmICgheHNrX3VtZW1fY29uc3VtZV90eCh4ZHBfcmluZy0+eHNrX3VtZW0sICZkZXNj
KSkKIAkJCWJyZWFrOwogCi0JCWRtYSA9IHhkcF91bWVtX2dldF9kbWEoeGRwX3JpbmctPnhza191
bWVtLCBkZXNjLmFkZHIpOwotCi0JCWRtYV9zeW5jX3NpbmdsZV9mb3JfZGV2aWNlKHhkcF9yaW5n
LT5kZXYsIGRtYSwgZGVzYy5sZW4sCi0JCQkJCSAgIERNQV9CSURJUkVDVElPTkFMKTsKKwkJZG1h
ID0geHNrX2J1ZmZfcmF3X2dldF9kbWEoeGRwX3JpbmctPnhza191bWVtLCBkZXNjLmFkZHIpOwor
CQl4c2tfYnVmZl9yYXdfZG1hX3N5bmNfZm9yX2RldmljZSh4ZHBfcmluZy0+eHNrX3VtZW0sIGRt
YSwKKwkJCQkJCSBkZXNjLmxlbik7CiAKIAkJdHhfYnVmLT5ieXRlY291bnQgPSBkZXNjLmxlbjsK
IApAQCAtMTE2NSwxMSArODcwLDEwIEBAIHZvaWQgaWNlX3hza19jbGVhbl9yeF9yaW5nKHN0cnVj
dCBpY2VfcmluZyAqcnhfcmluZykKIAlmb3IgKGkgPSAwOyBpIDwgcnhfcmluZy0+Y291bnQ7IGkr
KykgewogCQlzdHJ1Y3QgaWNlX3J4X2J1ZiAqcnhfYnVmID0gJnJ4X3JpbmctPnJ4X2J1ZltpXTsK
IAotCQlpZiAoIXJ4X2J1Zi0+YWRkcikKKwkJaWYgKCFyeF9idWYtPnhkcCkKIAkJCWNvbnRpbnVl
OwogCi0JCXhza191bWVtX2ZxX3JldXNlKHJ4X3JpbmctPnhza191bWVtLCByeF9idWYtPmhhbmRs
ZSk7Ci0JCXJ4X2J1Zi0+YWRkciA9IE5VTEw7CisJCXJ4X2J1Zi0+eGRwID0gTlVMTDsKIAl9CiB9
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2ljZS9pY2VfeHNrLmgg
Yi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pY2UvaWNlX3hzay5oCmluZGV4IDhhNGJhN2M2
ZDU0OS4uZmMxYTA2YjRkZjM2IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRl
bC9pY2UvaWNlX3hzay5oCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2ljZS9pY2Vf
eHNrLmgKQEAgLTEwLDExICsxMCwxMCBAQCBzdHJ1Y3QgaWNlX3ZzaTsKIAogI2lmZGVmIENPTkZJ
R19YRFBfU09DS0VUUwogaW50IGljZV94c2tfdW1lbV9zZXR1cChzdHJ1Y3QgaWNlX3ZzaSAqdnNp
LCBzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0sIHUxNiBxaWQpOwotdm9pZCBpY2VfemNhX2ZyZWUoc3Ry
dWN0IHplcm9fY29weV9hbGxvY2F0b3IgKnpjYSwgdW5zaWduZWQgbG9uZyBoYW5kbGUpOwogaW50
IGljZV9jbGVhbl9yeF9pcnFfemMoc3RydWN0IGljZV9yaW5nICpyeF9yaW5nLCBpbnQgYnVkZ2V0
KTsKIGJvb2wgaWNlX2NsZWFuX3R4X2lycV96YyhzdHJ1Y3QgaWNlX3JpbmcgKnhkcF9yaW5nLCBp
bnQgYnVkZ2V0KTsKIGludCBpY2VfeHNrX3dha2V1cChzdHJ1Y3QgbmV0X2RldmljZSAqbmV0ZGV2
LCB1MzIgcXVldWVfaWQsIHUzMiBmbGFncyk7Ci1ib29sIGljZV9hbGxvY19yeF9idWZzX3Nsb3df
emMoc3RydWN0IGljZV9yaW5nICpyeF9yaW5nLCB1MTYgY291bnQpOworYm9vbCBpY2VfYWxsb2Nf
cnhfYnVmc196YyhzdHJ1Y3QgaWNlX3JpbmcgKnJ4X3JpbmcsIHUxNiBjb3VudCk7CiBib29sIGlj
ZV94c2tfYW55X3J4X3JpbmdfZW5hKHN0cnVjdCBpY2VfdnNpICp2c2kpOwogdm9pZCBpY2VfeHNr
X2NsZWFuX3J4X3Jpbmcoc3RydWN0IGljZV9yaW5nICpyeF9yaW5nKTsKIHZvaWQgaWNlX3hza19j
bGVhbl94ZHBfcmluZyhzdHJ1Y3QgaWNlX3JpbmcgKnhkcF9yaW5nKTsKQEAgLTI3LDEyICsyNiw2
IEBAIGljZV94c2tfdW1lbV9zZXR1cChzdHJ1Y3QgaWNlX3ZzaSBfX2Fsd2F5c191bnVzZWQgKnZz
aSwKIAlyZXR1cm4gLUVPUE5PVFNVUFA7CiB9CiAKLXN0YXRpYyBpbmxpbmUgdm9pZAotaWNlX3pj
YV9mcmVlKHN0cnVjdCB6ZXJvX2NvcHlfYWxsb2NhdG9yIF9fYWx3YXlzX3VudXNlZCAqemNhLAot
CSAgICAgdW5zaWduZWQgbG9uZyBfX2Fsd2F5c191bnVzZWQgaGFuZGxlKQotewotfQotCiBzdGF0
aWMgaW5saW5lIGludAogaWNlX2NsZWFuX3J4X2lycV96YyhzdHJ1Y3QgaWNlX3JpbmcgX19hbHdh
eXNfdW51c2VkICpyeF9yaW5nLAogCQkgICAgaW50IF9fYWx3YXlzX3VudXNlZCBidWRnZXQpCkBA
IC00OCw4ICs0MSw4IEBAIGljZV9jbGVhbl90eF9pcnFfemMoc3RydWN0IGljZV9yaW5nIF9fYWx3
YXlzX3VudXNlZCAqeGRwX3JpbmcsCiB9CiAKIHN0YXRpYyBpbmxpbmUgYm9vbAotaWNlX2FsbG9j
X3J4X2J1ZnNfc2xvd196YyhzdHJ1Y3QgaWNlX3JpbmcgX19hbHdheXNfdW51c2VkICpyeF9yaW5n
LAotCQkJICB1MTYgX19hbHdheXNfdW51c2VkIGNvdW50KQoraWNlX2FsbG9jX3J4X2J1ZnNfemMo
c3RydWN0IGljZV9yaW5nIF9fYWx3YXlzX3VudXNlZCAqcnhfcmluZywKKwkJICAgICB1MTYgX19h
bHdheXNfdW51c2VkIGNvdW50KQogewogCXJldHVybiBmYWxzZTsKIH0KLS0gCjIuMjUuMQoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtd2lyZWQt
bGFuIG1haWxpbmcgbGlzdApJbnRlbC13aXJlZC1sYW5Ab3N1b3NsLm9yZwpodHRwczovL2xpc3Rz
Lm9zdW9zbC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC13aXJlZC1sYW4K
