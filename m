Return-Path: <intel-wired-lan-bounces@osuosl.org>
X-Original-To: lists+intel-wired-lan@lfdr.de
Delivered-To: lists+intel-wired-lan@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 2C3DE1DBE20
	for <lists+intel-wired-lan@lfdr.de>; Wed, 20 May 2020 21:38:57 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id D48DF86E24;
	Wed, 20 May 2020 19:38:55 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 0IyOTO6JOIIA; Wed, 20 May 2020 19:38:51 +0000 (UTC)
Received: from ash.osuosl.org (ash.osuosl.org [140.211.166.34])
	by fraxinus.osuosl.org (Postfix) with ESMTP id DD59E870F7;
	Wed, 20 May 2020 19:38:51 +0000 (UTC)
X-Original-To: intel-wired-lan@lists.osuosl.org
Delivered-To: intel-wired-lan@lists.osuosl.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by ash.osuosl.org (Postfix) with ESMTP id 9D09E1BF2F9
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:22:00 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id 8183220484
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:22:00 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id WIgZAwGxiL6P for <intel-wired-lan@lists.osuosl.org>;
 Wed, 20 May 2020 19:21:57 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mail-pl1-f194.google.com (mail-pl1-f194.google.com
 [209.85.214.194])
 by silver.osuosl.org (Postfix) with ESMTPS id 4B7CC2011A
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 19:21:57 +0000 (UTC)
Received: by mail-pl1-f194.google.com with SMTP id f15so1753011plr.3
 for <intel-wired-lan@lists.osuosl.org>; Wed, 20 May 2020 12:21:57 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=aopS+Xt534w3ri8BrZUDdiHB6f7YGZmwlsFupZRetAc=;
 b=buoUp+5pdTX31xDltlE5Qlrm3mS3TX+D59PW7mao3UMsUDt6TkL56lJ92uC79T1lcq
 RXEO3cF2HdiDcO/Sh8p0GJhMVEMc0BHisF8EFs8hBl4/q33PNm0TFRpw1XgDrkFdOm9R
 LtlSPgH/1CD8tKOEb5Qj6zTv6QCbWQ97Qjy0rQxNPO2jimKWkdKorzBbjzKNck/tY2C6
 o0rF/diBn2KYsh+7MvmzyyMO4RpX5czU7SSkk95DnYw03tADyFWwxWJmSZFXSCeIr/dZ
 /M07Mpf4s5khZogHczId4JgT4uHlUxtYrm0rRYeEzVjtwmJdEjO50XPt1gRX3N+Q+O3o
 cQhg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=aopS+Xt534w3ri8BrZUDdiHB6f7YGZmwlsFupZRetAc=;
 b=NKFLpLEWOctqz+Wr9meL+Gtu3+moRL/WzE7gFri/bzu3/XqMA355+xcfE8wVL5pgjS
 maZwlFOE7GZkQachFZZSi7ZZovPd9QWcME595JNc/X2RXcLb/7h6nJI9Fzm6hfgRBfEo
 GIMst1/PzLDVX+1iPCzRSwmioL+VZxdJ7j/ZIKQqPisl3ZFhKeeJmKpkR7EgG7kryo73
 qSpDKIxPC4atEI6jZX8Ik+ucFQjhxKNbcPOMTksDoHDrvQtGWTbwQUXbYvzf59TNqYKX
 Q0ch5XSdAemFAleHOQ4406MPjW+7gj3MsXJQUk/q5HfjIcbso3ueW4MayzMhR2Ohx9oj
 Y9nA==
X-Gm-Message-State: AOAM531vE5n62RNB2IFhhmOh+pZevKrOpBSjSuoy7H5YlQEaMlmWOhKv
 epoPedFYFp8BVqBVc1xT0zw=
X-Google-Smtp-Source: ABdhPJx1pG96yTNUJKQyrs1Cs8O7EPld5dDdD8LoebkbfBP8RPh82wWDjxGKxUwlQJQ2gOSy89V3Xw==
X-Received: by 2002:a17:902:465:: with SMTP id
 92mr5835044ple.227.1590002516697; 
 Wed, 20 May 2020 12:21:56 -0700 (PDT)
Received: from btopel-mobl.ger.intel.com (fmdmzpr03-ext.fm.intel.com.
 [192.55.54.38])
 by smtp.gmail.com with ESMTPSA id 62sm2762424pfc.204.2020.05.20.12.21.51
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Wed, 20 May 2020 12:21:55 -0700 (PDT)
From: =?UTF-8?q?Bj=C3=B6rn=20T=C3=B6pel?= <bjorn.topel@gmail.com>
To: ast@kernel.org, daniel@iogearbox.net, davem@davemloft.net, kuba@kernel.org,
 hawk@kernel.org, john.fastabend@gmail.com, netdev@vger.kernel.org,
 bpf@vger.kernel.org, magnus.karlsson@intel.com, jonathan.lemon@gmail.com,
 jeffrey.t.kirsher@intel.com
Date: Wed, 20 May 2020 21:20:55 +0200
Message-Id: <20200520192103.355233-8-bjorn.topel@gmail.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20200520192103.355233-1-bjorn.topel@gmail.com>
References: <20200520192103.355233-1-bjorn.topel@gmail.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 20 May 2020 19:38:45 +0000
Subject: [Intel-wired-lan] [PATCH bpf-next v5 07/15] i40e: separate kernel
 allocated rx_bi rings from AF_XDP rings
X-BeenThere: intel-wired-lan@osuosl.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel Wired Ethernet Linux Kernel Driver Development
 <intel-wired-lan.osuosl.org>
List-Unsubscribe: <https://lists.osuosl.org/mailman/options/intel-wired-lan>, 
 <mailto:intel-wired-lan-request@osuosl.org?subject=unsubscribe>
List-Archive: <http://lists.osuosl.org/pipermail/intel-wired-lan/>
List-Post: <mailto:intel-wired-lan@osuosl.org>
List-Help: <mailto:intel-wired-lan-request@osuosl.org?subject=help>
List-Subscribe: <https://lists.osuosl.org/mailman/listinfo/intel-wired-lan>,
 <mailto:intel-wired-lan-request@osuosl.org?subject=subscribe>
Cc: maximmi@mellanox.com,
 =?UTF-8?q?Bj=C3=B6rn=20T=C3=B6pel?= <bjorn.topel@intel.com>,
 maciej.fijalkowski@intel.com, intel-wired-lan@lists.osuosl.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-wired-lan-bounces@osuosl.org
Sender: "Intel-wired-lan" <intel-wired-lan-bounces@osuosl.org>

RnJvbTogQmrDtnJuIFTDtnBlbCA8Ympvcm4udG9wZWxAaW50ZWwuY29tPgoKQ29udGludWluZyB0
aGUgcGF0aCB0byBzdXBwb3J0IE1FTV9UWVBFX1hTS19CVUZGX1BPT0wsIHRoZSBBRl9YRFAKemVy
by1jb3B5L3NrX2J1ZmYgcnhfYmkgcmluZ3MgYXJlIG5vdyBzZXBhcmF0ZS4gRnVuY3Rpb25zIHRv
IHByb3Blcmx5CmFsbG9jYXRlIHRoZSBkaWZmZXJlbnQgcmluZ3MgYXJlIGFkZGVkIGFzIHdlbGwu
Cgp2My0+djQ6IE1hZGUgaTQwZV9mZF9oYW5kbGVfc3RhdHVzKCkgc3RhdGljLiAoa2J1aWxkIHRl
c3Qgcm9ib3QpCnY0LT52NTogRml4IGtkb2MgZm9yIGk0MGVfY2xlYW5fcHJvZ3JhbW1pbmdfc3Rh
dHVzKCkuIChKYWt1YikKCkNjOiBpbnRlbC13aXJlZC1sYW5AbGlzdHMub3N1b3NsLm9yZwpTaWdu
ZWQtb2ZmLWJ5OiBCasO2cm4gVMO2cGVsIDxiam9ybi50b3BlbEBpbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX21haW4uYyAgIHwgICA3ICsrCiBkcml2
ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfdHhyeC5jICAgfCAxMTkgKysrKysrKy0t
LS0tLS0tLS0tCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfdHhyeC5oICAg
fCAgMjIgKystLQogLi4uL2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV90eHJ4X2NvbW1vbi5oICAg
IHwgIDQwICsrKysrLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R5cGUu
aCAgIHwgICA1ICstCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfeHNrLmMg
ICAgfCAgNzQgKysrKysrLS0tLS0KIGRyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQw
ZV94c2suaCAgICB8ICAgMiArCiA3IGZpbGVzIGNoYW5nZWQsIDE0MiBpbnNlcnRpb25zKCspLCAx
MjcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwv
aTQwZS9pNDBlX21haW4uYyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV9t
YWluLmMKaW5kZXggZDZiMmRiNGYyYzY1Li4zZTE2OTViYjgyNjIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV9tYWluLmMKKysrIGIvZHJpdmVycy9uZXQv
ZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX21haW4uYwpAQCAtMzI2MCw4ICszMjYwLDEyIEBAIHN0
YXRpYyBpbnQgaTQwZV9jb25maWd1cmVfcnhfcmluZyhzdHJ1Y3QgaTQwZV9yaW5nICpyaW5nKQog
CWlmIChyaW5nLT52c2ktPnR5cGUgPT0gSTQwRV9WU0lfTUFJTikKIAkJeGRwX3J4cV9pbmZvX3Vu
cmVnX21lbV9tb2RlbCgmcmluZy0+eGRwX3J4cSk7CiAKKwlrZnJlZShyaW5nLT5yeF9iaSk7CiAJ
cmluZy0+eHNrX3VtZW0gPSBpNDBlX3hza191bWVtKHJpbmcpOwogCWlmIChyaW5nLT54c2tfdW1l
bSkgeworCQlyZXQgPSBpNDBlX2FsbG9jX3J4X2JpX3pjKHJpbmcpOworCQlpZiAocmV0KQorCQkJ
cmV0dXJuIHJldDsKIAkJcmluZy0+cnhfYnVmX2xlbiA9IHJpbmctPnhza191bWVtLT5jaHVua19z
aXplX25vaHIgLQogCQkJCSAgIFhEUF9QQUNLRVRfSEVBRFJPT007CiAJCS8qIEZvciBBRl9YRFAg
WkMsIHdlIGRpc2FsbG93IHBhY2tldHMgdG8gc3BhbiBvbgpAQCAtMzI4MCw2ICszMjg0LDkgQEAg
c3RhdGljIGludCBpNDBlX2NvbmZpZ3VyZV9yeF9yaW5nKHN0cnVjdCBpNDBlX3JpbmcgKnJpbmcp
CiAJCQkgcmluZy0+cXVldWVfaW5kZXgpOwogCiAJfSBlbHNlIHsKKwkJcmV0ID0gaTQwZV9hbGxv
Y19yeF9iaShyaW5nKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CiAJCXJpbmctPnJ4X2J1
Zl9sZW4gPSB2c2ktPnJ4X2J1Zl9sZW47CiAJCWlmIChyaW5nLT52c2ktPnR5cGUgPT0gSTQwRV9W
U0lfTUFJTikgewogCQkJcmV0ID0geGRwX3J4cV9pbmZvX3JlZ19tZW1fbW9kZWwoJnJpbmctPnhk
cF9yeHEsCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVf
dHhyeC5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnguYwppbmRl
eCA5YjllZjk1MWY5Y2UuLmY2MTM3ODJmMmY1NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRo
ZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnguYworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9p
bnRlbC9pNDBlL2k0MGVfdHhyeC5jCkBAIC01MjEsMjggKzUyMSwyOSBAQCBpbnQgaTQwZV9hZGRf
ZGVsX2ZkaXIoc3RydWN0IGk0MGVfdnNpICp2c2ksCiAvKioKICAqIGk0MGVfZmRfaGFuZGxlX3N0
YXR1cyAtIGNoZWNrIHRoZSBQcm9ncmFtbWluZyBTdGF0dXMgZm9yIEZECiAgKiBAcnhfcmluZzog
dGhlIFJ4IHJpbmcgZm9yIHRoaXMgZGVzY3JpcHRvcgotICogQHJ4X2Rlc2M6IHRoZSBSeCBkZXNj
cmlwdG9yIGZvciBwcm9ncmFtbWluZyBTdGF0dXMsIG5vdCBhIHBhY2tldCBkZXNjcmlwdG9yLgor
ICogQHF3b3JkMF9yYXc6IHF3b3JkMAorICogQHF3b3JkMTogcXdvcmQxIGFmdGVyIGxlX3RvX2Nw
dQogICogQHByb2dfaWQ6IHRoZSBpZCBvcmlnaW5hbGx5IHVzZWQgZm9yIHByb2dyYW1taW5nCiAg
KgogICogVGhpcyBpcyB1c2VkIHRvIHZlcmlmeSBpZiB0aGUgRkQgcHJvZ3JhbW1pbmcgb3IgaW52
YWxpZGF0aW9uCiAgKiByZXF1ZXN0ZWQgYnkgU1cgdG8gdGhlIEhXIGlzIHN1Y2Nlc3NmdWwgb3Ig
bm90IGFuZCB0YWtlIGFjdGlvbnMgYWNjb3JkaW5nbHkuCiAgKiovCi12b2lkIGk0MGVfZmRfaGFu
ZGxlX3N0YXR1cyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAotCQkJICAgdW5pb24gaTQwZV9y
eF9kZXNjICpyeF9kZXNjLCB1OCBwcm9nX2lkKQorc3RhdGljIHZvaWQgaTQwZV9mZF9oYW5kbGVf
c3RhdHVzKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsIHU2NCBxd29yZDBfcmF3LAorCQkJCSAg
dTY0IHF3b3JkMSwgdTggcHJvZ19pZCkKIHsKIAlzdHJ1Y3QgaTQwZV9wZiAqcGYgPSByeF9yaW5n
LT52c2ktPmJhY2s7CiAJc3RydWN0IHBjaV9kZXYgKnBkZXYgPSBwZi0+cGRldjsKKwlzdHJ1Y3Qg
aTQwZV8zMmJfcnhfd2JfcXcwICpxdzA7CiAJdTMyIGZjbnRfcHJvZywgZmNudF9hdmFpbDsKIAl1
MzIgZXJyb3I7Ci0JdTY0IHF3OwogCi0JcXcgPSBsZTY0X3RvX2NwdShyeF9kZXNjLT53Yi5xd29y
ZDEuc3RhdHVzX2Vycm9yX2xlbik7Ci0JZXJyb3IgPSAocXcgJiBJNDBFX1JYX1BST0dfU1RBVFVT
X0RFU0NfUVcxX0VSUk9SX01BU0spID4+CisJcXcwID0gKHN0cnVjdCBpNDBlXzMyYl9yeF93Yl9x
dzAgKikmcXdvcmQwX3JhdzsKKwllcnJvciA9IChxd29yZDEgJiBJNDBFX1JYX1BST0dfU1RBVFVT
X0RFU0NfUVcxX0VSUk9SX01BU0spID4+CiAJCUk0MEVfUlhfUFJPR19TVEFUVVNfREVTQ19RVzFf
RVJST1JfU0hJRlQ7CiAKIAlpZiAoZXJyb3IgPT0gQklUKEk0MEVfUlhfUFJPR19TVEFUVVNfREVT
Q19GRF9UQkxfRlVMTF9TSElGVCkpIHsKLQkJcGYtPmZkX2ludiA9IGxlMzJfdG9fY3B1KHJ4X2Rl
c2MtPndiLnF3b3JkMC5oaV9kd29yZC5mZF9pZCk7Ci0JCWlmICgocnhfZGVzYy0+d2IucXdvcmQw
LmhpX2R3b3JkLmZkX2lkICE9IDApIHx8CisJCXBmLT5mZF9pbnYgPSBsZTMyX3RvX2NwdShxdzAt
PmhpX2R3b3JkLmZkX2lkKTsKKwkJaWYgKHF3MC0+aGlfZHdvcmQuZmRfaWQgIT0gMCB8fAogCQkg
ICAgKEk0MEVfREVCVUdfRkQgJiBwZi0+aHcuZGVidWdfbWFzaykpCiAJCQlkZXZfd2FybigmcGRl
di0+ZGV2LCAibnR1cGxlIGZpbHRlciBsb2MgPSAlZCwgY291bGQgbm90IGJlIGFkZGVkXG4iLAog
CQkJCSBwZi0+ZmRfaW52KTsKQEAgLTU2MCw3ICs1NjEsNyBAQCB2b2lkIGk0MGVfZmRfaGFuZGxl
X3N0YXR1cyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAogCQkvKiBzdG9yZSB0aGUgY3VycmVu
dCBhdHIgZmlsdGVyIGNvdW50ICovCiAJCXBmLT5mZF9hdHJfY250ID0gaTQwZV9nZXRfY3VycmVu
dF9hdHJfY250KHBmKTsKIAotCQlpZiAoKHJ4X2Rlc2MtPndiLnF3b3JkMC5oaV9kd29yZC5mZF9p
ZCA9PSAwKSAmJgorCQlpZiAocXcwLT5oaV9kd29yZC5mZF9pZCA9PSAwICYmCiAJCSAgICB0ZXN0
X2JpdChfX0k0MEVfRkRfU0JfQVVUT19ESVNBQkxFRCwgcGYtPnN0YXRlKSkgewogCQkJLyogVGhl
c2Ugc2V0X2JpdCgpIGNhbGxzIGFyZW4ndCBhdG9taWMgd2l0aCB0aGUKIAkJCSAqIHRlc3RfYml0
KCkgaGVyZSwgYnV0IHdvcnNlIGNhc2Ugd2UgcG90ZW50aWFsbHkKQEAgLTU4OSw3ICs1OTAsNyBA
QCB2b2lkIGk0MGVfZmRfaGFuZGxlX3N0YXR1cyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAog
CX0gZWxzZSBpZiAoZXJyb3IgPT0gQklUKEk0MEVfUlhfUFJPR19TVEFUVVNfREVTQ19OT19GRF9F
TlRSWV9TSElGVCkpIHsKIAkJaWYgKEk0MEVfREVCVUdfRkQgJiBwZi0+aHcuZGVidWdfbWFzaykK
IAkJCWRldl9pbmZvKCZwZGV2LT5kZXYsICJudHVwbGUgZmlsdGVyIGZkX2lkID0gJWQsIGNvdWxk
IG5vdCBiZSByZW1vdmVkXG4iLAotCQkJCSByeF9kZXNjLT53Yi5xd29yZDAuaGlfZHdvcmQuZmRf
aWQpOworCQkJCSBxdzAtPmhpX2R3b3JkLmZkX2lkKTsKIAl9CiB9CiAKQEAgLTEyMzIsMjkgKzEy
MzMsMTAgQEAgc3RhdGljIHZvaWQgaTQwZV9yZXVzZV9yeF9wYWdlKHN0cnVjdCBpNDBlX3Jpbmcg
KnJ4X3JpbmcsCiB9CiAKIC8qKgotICogaTQwZV9yeF9pc19wcm9ncmFtbWluZ19zdGF0dXMgLSBj
aGVjayBmb3IgcHJvZ3JhbW1pbmcgc3RhdHVzIGRlc2NyaXB0b3IKLSAqIEBxdzogcXdvcmQgcmVw
cmVzZW50aW5nIHN0YXR1c19lcnJvcl9sZW4gaW4gQ1BVIG9yZGVyaW5nCi0gKgotICogVGhlIHZh
bHVlIG9mIGluIHRoZSBkZXNjcmlwdG9yIGxlbmd0aCBmaWVsZCBpbmRpY2F0ZSBpZiB0aGlzCi0g
KiBpcyBhIHByb2dyYW1taW5nIHN0YXR1cyBkZXNjcmlwdG9yIGZvciBmbG93IGRpcmVjdG9yIG9y
IEZDb0UKLSAqIGJ5IHRoZSB2YWx1ZSBvZiBJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfTEVOR1RI
LCBvdGhlcndpc2UKLSAqIGl0IGlzIGEgcGFja2V0IGRlc2NyaXB0b3IuCi0gKiovCi1zdGF0aWMg
aW5saW5lIGJvb2wgaTQwZV9yeF9pc19wcm9ncmFtbWluZ19zdGF0dXModTY0IHF3KQotewotCS8q
IFRoZSBSeCBmaWx0ZXIgcHJvZ3JhbW1pbmcgc3RhdHVzIGFuZCBTUEggYml0IG9jY3VweSB0aGUg
c2FtZQotCSAqIHNwb3QgaW4gdGhlIGRlc2NyaXB0b3IuIFNpbmNlIHdlIGRvbid0IHN1cHBvcnQg
cGFja2V0IHNwbGl0IHdlCi0JICogY2FuIGp1c3QgcmV1c2UgdGhlIGJpdCBhcyBhbiBpbmRpY2F0
aW9uIHRoYXQgdGhpcyBpcyBhCi0JICogcHJvZ3JhbW1pbmcgc3RhdHVzIGRlc2NyaXB0b3IuCi0J
ICovCi0JcmV0dXJuIHF3ICYgSTQwRV9SWERfUVcxX0xFTkdUSF9TUEhfTUFTSzsKLX0KLQotLyoq
Ci0gKiBpNDBlX2NsZWFuX3Byb2dyYW1taW5nX3N0YXR1cyAtIHRyeSBjbGVhbiB0aGUgcHJvZ3Jh
bW1pbmcgc3RhdHVzIGRlc2NyaXB0b3IKKyAqIGk0MGVfY2xlYW5fcHJvZ3JhbW1pbmdfc3RhdHVz
IC0gY2xlYW4gdGhlIHByb2dyYW1taW5nIHN0YXR1cyBkZXNjcmlwdG9yCiAgKiBAcnhfcmluZzog
dGhlIHJ4IHJpbmcgdGhhdCBoYXMgdGhpcyBkZXNjcmlwdG9yCi0gKiBAcnhfZGVzYzogdGhlIHJ4
IGRlc2NyaXB0b3Igd3JpdHRlbiBiYWNrIGJ5IEhXCi0gKiBAcXc6IHF3b3JkIHJlcHJlc2VudGlu
ZyBzdGF0dXNfZXJyb3JfbGVuIGluIENQVSBvcmRlcmluZworICogQHF3b3JkMF9yYXc6IHF3b3Jk
MAorICogQHF3b3JkMTogcXdvcmQxIHJlcHJlc2VudGluZyBzdGF0dXNfZXJyb3JfbGVuIGluIENQ
VSBvcmRlcmluZwogICoKICAqIEZsb3cgZGlyZWN0b3Igc2hvdWxkIGhhbmRsZSBGRF9GSUxURVJf
U1RBVFVTIHRvIGNoZWNrIGl0cyBmaWx0ZXIgcHJvZ3JhbW1pbmcKICAqIHN0YXR1cyBiZWluZyBz
dWNjZXNzZnVsIG9yIG5vdCBhbmQgdGFrZSBhY3Rpb25zIGFjY29yZGluZ2x5LiBGQ29FIHNob3Vs
ZApAQCAtMTI2MiwzNCArMTI0NCwxNiBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaTQwZV9yeF9pc19w
cm9ncmFtbWluZ19zdGF0dXModTY0IHF3KQogICoKICAqIFJldHVybnMgYW4gaTQwZV9yeF9idWZm
ZXIgdG8gcmV1c2UgaWYgdGhlIGNsZWFudXAgb2NjdXJyZWQsIG90aGVyd2lzZSBOVUxMLgogICoq
Lwotc3RydWN0IGk0MGVfcnhfYnVmZmVyICppNDBlX2NsZWFuX3Byb2dyYW1taW5nX3N0YXR1cygK
LQlzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAotCXVuaW9uIGk0MGVfcnhfZGVzYyAqcnhfZGVz
YywKLQl1NjQgcXcpCit2b2lkIGk0MGVfY2xlYW5fcHJvZ3JhbW1pbmdfc3RhdHVzKHN0cnVjdCBp
NDBlX3JpbmcgKnJ4X3JpbmcsIHU2NCBxd29yZDBfcmF3LAorCQkJCSAgIHU2NCBxd29yZDEpCiB7
Ci0Jc3RydWN0IGk0MGVfcnhfYnVmZmVyICpyeF9idWZmZXI7Ci0JdTMyIG50YzsKIAl1OCBpZDsK
IAotCWlmICghaTQwZV9yeF9pc19wcm9ncmFtbWluZ19zdGF0dXMocXcpKQotCQlyZXR1cm4gTlVM
TDsKLQotCW50YyA9IHJ4X3JpbmctPm5leHRfdG9fY2xlYW47Ci0KLQkvKiBmZXRjaCwgdXBkYXRl
LCBhbmQgc3RvcmUgbmV4dCB0byBjbGVhbiAqLwotCXJ4X2J1ZmZlciA9IGk0MGVfcnhfYmkocnhf
cmluZywgbnRjKyspOwotCW50YyA9IChudGMgPCByeF9yaW5nLT5jb3VudCkgPyBudGMgOiAwOwot
CXJ4X3JpbmctPm5leHRfdG9fY2xlYW4gPSBudGM7Ci0KLQlwcmVmZXRjaChJNDBFX1JYX0RFU0Mo
cnhfcmluZywgbnRjKSk7Ci0KLQlpZCA9IChxdyAmIEk0MEVfUlhfUFJPR19TVEFUVVNfREVTQ19R
VzFfUFJPR0lEX01BU0spID4+CisJaWQgPSAocXdvcmQxICYgSTQwRV9SWF9QUk9HX1NUQVRVU19E
RVNDX1FXMV9QUk9HSURfTUFTSykgPj4KIAkJICBJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfUVcx
X1BST0dJRF9TSElGVDsKIAogCWlmIChpZCA9PSBJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfRkRf
RklMVEVSX1NUQVRVUykKLQkJaTQwZV9mZF9oYW5kbGVfc3RhdHVzKHJ4X3JpbmcsIHJ4X2Rlc2Ms
IGlkKTsKLQotCXJldHVybiByeF9idWZmZXI7CisJCWk0MGVfZmRfaGFuZGxlX3N0YXR1cyhyeF9y
aW5nLCBxd29yZDBfcmF3LCBxd29yZDEsIGlkKTsKIH0KIAogLyoqCkBAIC0xMzQxLDEzICsxMzA1
LDI1IEBAIGludCBpNDBlX3NldHVwX3R4X2Rlc2NyaXB0b3JzKHN0cnVjdCBpNDBlX3JpbmcgKnR4
X3JpbmcpCiAJcmV0dXJuIC1FTk9NRU07CiB9CiAKK2ludCBpNDBlX2FsbG9jX3J4X2JpKHN0cnVj
dCBpNDBlX3JpbmcgKnJ4X3JpbmcpCit7CisJdW5zaWduZWQgbG9uZyBzeiA9IHNpemVvZigqcnhf
cmluZy0+cnhfYmkpICogcnhfcmluZy0+Y291bnQ7CisKKwlyeF9yaW5nLT5yeF9iaSA9IGt6YWxs
b2Moc3osIEdGUF9LRVJORUwpOworCXJldHVybiByeF9yaW5nLT5yeF9iaSA/IDAgOiAtRU5PTUVN
OworfQorCitzdGF0aWMgdm9pZCBpNDBlX2NsZWFyX3J4X2JpKHN0cnVjdCBpNDBlX3JpbmcgKnJ4
X3JpbmcpCit7CisJbWVtc2V0KHJ4X3JpbmctPnJ4X2JpLCAwLCBzaXplb2YoKnJ4X3JpbmctPnJ4
X2JpKSAqIHJ4X3JpbmctPmNvdW50KTsKK30KKwogLyoqCiAgKiBpNDBlX2NsZWFuX3J4X3Jpbmcg
LSBGcmVlIFJ4IGJ1ZmZlcnMKICAqIEByeF9yaW5nOiByaW5nIHRvIGJlIGNsZWFuZWQKICAqKi8K
IHZvaWQgaTQwZV9jbGVhbl9yeF9yaW5nKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcpCiB7Ci0J
dW5zaWduZWQgbG9uZyBiaV9zaXplOwogCXUxNiBpOwogCiAJLyogcmluZyBhbHJlYWR5IGNsZWFy
ZWQsIG5vdGhpbmcgdG8gZG8gKi8KQEAgLTEzOTMsOCArMTM2OSwxMCBAQCB2b2lkIGk0MGVfY2xl
YW5fcnhfcmluZyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nKQogCX0KIAogc2tpcF9mcmVlOgot
CWJpX3NpemUgPSBzaXplb2Yoc3RydWN0IGk0MGVfcnhfYnVmZmVyKSAqIHJ4X3JpbmctPmNvdW50
OwotCW1lbXNldChyeF9yaW5nLT5yeF9iaSwgMCwgYmlfc2l6ZSk7CisJaWYgKHJ4X3JpbmctPnhz
a191bWVtKQorCQlpNDBlX2NsZWFyX3J4X2JpX3pjKHJ4X3JpbmcpOworCWVsc2UKKwkJaTQwZV9j
bGVhcl9yeF9iaShyeF9yaW5nKTsKIAogCS8qIFplcm8gb3V0IHRoZSBkZXNjcmlwdG9yIHJpbmcg
Ki8KIAltZW1zZXQocnhfcmluZy0+ZGVzYywgMCwgcnhfcmluZy0+c2l6ZSk7CkBAIC0xNDM1LDE1
ICsxNDEzLDcgQEAgdm9pZCBpNDBlX2ZyZWVfcnhfcmVzb3VyY2VzKHN0cnVjdCBpNDBlX3Jpbmcg
KnJ4X3JpbmcpCiBpbnQgaTQwZV9zZXR1cF9yeF9kZXNjcmlwdG9ycyhzdHJ1Y3QgaTQwZV9yaW5n
ICpyeF9yaW5nKQogewogCXN0cnVjdCBkZXZpY2UgKmRldiA9IHJ4X3JpbmctPmRldjsKLQlpbnQg
ZXJyID0gLUVOT01FTTsKLQlpbnQgYmlfc2l6ZTsKLQotCS8qIHdhcm4gaWYgd2UgYXJlIGFib3V0
IHRvIG92ZXJ3cml0ZSB0aGUgcG9pbnRlciAqLwotCVdBUk5fT04ocnhfcmluZy0+cnhfYmkpOwot
CWJpX3NpemUgPSBzaXplb2Yoc3RydWN0IGk0MGVfcnhfYnVmZmVyKSAqIHJ4X3JpbmctPmNvdW50
OwotCXJ4X3JpbmctPnJ4X2JpID0ga3phbGxvYyhiaV9zaXplLCBHRlBfS0VSTkVMKTsKLQlpZiAo
IXJ4X3JpbmctPnJ4X2JpKQotCQlnb3RvIGVycjsKKwlpbnQgZXJyOwogCiAJdTY0X3N0YXRzX2lu
aXQoJnJ4X3JpbmctPnN5bmNwKTsKIApAQCAtMTQ1Niw3ICsxNDI2LDcgQEAgaW50IGk0MGVfc2V0
dXBfcnhfZGVzY3JpcHRvcnMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykKIAlpZiAoIXJ4X3Jp
bmctPmRlc2MpIHsKIAkJZGV2X2luZm8oZGV2LCAiVW5hYmxlIHRvIGFsbG9jYXRlIG1lbW9yeSBm
b3IgdGhlIFJ4IGRlc2NyaXB0b3IgcmluZywgc2l6ZT0lZFxuIiwKIAkJCSByeF9yaW5nLT5zaXpl
KTsKLQkJZ290byBlcnI7CisJCXJldHVybiAtRU5PTUVNOwogCX0KIAogCXJ4X3JpbmctPm5leHRf
dG9fYWxsb2MgPSAwOwpAQCAtMTQ2OCwxNiArMTQzOCwxMiBAQCBpbnQgaTQwZV9zZXR1cF9yeF9k
ZXNjcmlwdG9ycyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nKQogCQllcnIgPSB4ZHBfcnhxX2lu
Zm9fcmVnKCZyeF9yaW5nLT54ZHBfcnhxLCByeF9yaW5nLT5uZXRkZXYsCiAJCQkJICAgICAgIHJ4
X3JpbmctPnF1ZXVlX2luZGV4KTsKIAkJaWYgKGVyciA8IDApCi0JCQlnb3RvIGVycjsKKwkJCXJl
dHVybiBlcnI7CiAJfQogCiAJcnhfcmluZy0+eGRwX3Byb2cgPSByeF9yaW5nLT52c2ktPnhkcF9w
cm9nOwogCiAJcmV0dXJuIDA7Ci1lcnI6Ci0Ja2ZyZWUocnhfcmluZy0+cnhfYmkpOwotCXJ4X3Jp
bmctPnJ4X2JpID0gTlVMTDsKLQlyZXR1cm4gZXJyOwogfQogCiAvKioKQEAgLTIzODcsOSArMjM1
MywxMiBAQCBzdGF0aWMgaW50IGk0MGVfY2xlYW5fcnhfaXJxKHN0cnVjdCBpNDBlX3JpbmcgKnJ4
X3JpbmcsIGludCBidWRnZXQpCiAJCSAqLwogCQlkbWFfcm1iKCk7CiAKLQkJcnhfYnVmZmVyID0g
aTQwZV9jbGVhbl9wcm9ncmFtbWluZ19zdGF0dXMocnhfcmluZywgcnhfZGVzYywKLQkJCQkJCQkg
IHF3b3JkKTsKLQkJaWYgKHVubGlrZWx5KHJ4X2J1ZmZlcikpIHsKKwkJaWYgKGk0MGVfcnhfaXNf
cHJvZ3JhbW1pbmdfc3RhdHVzKHF3b3JkKSkgeworCQkJaTQwZV9jbGVhbl9wcm9ncmFtbWluZ19z
dGF0dXMocnhfcmluZywKKwkJCQkJCSAgICAgIHJ4X2Rlc2MtPnJhdy5xd29yZFswXSwKKwkJCQkJ
CSAgICAgIHF3b3JkKTsKKwkJCXJ4X2J1ZmZlciA9IGk0MGVfcnhfYmkocnhfcmluZywgcnhfcmlu
Zy0+bmV4dF90b19jbGVhbik7CisJCQlpNDBlX2luY19udGMocnhfcmluZyk7CiAJCQlpNDBlX3Jl
dXNlX3J4X3BhZ2UocnhfcmluZywgcnhfYnVmZmVyKTsKIAkJCWNsZWFuZWRfY291bnQrKzsKIAkJ
CWNvbnRpbnVlOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9p
NDBlX3R4cnguaCBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV90eHJ4LmgK
aW5kZXggMzZkMzdmMzFhMjg3Li5kMzQzNDk4ZThkZTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0
L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV90eHJ4LmgKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJu
ZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnguaApAQCAtMjk2LDE3ICsyOTYsMTUgQEAgc3RydWN0IGk0
MGVfdHhfYnVmZmVyIHsKIAogc3RydWN0IGk0MGVfcnhfYnVmZmVyIHsKIAlkbWFfYWRkcl90IGRt
YTsKLQl1bmlvbiB7Ci0JCXN0cnVjdCB7Ci0JCQlzdHJ1Y3QgcGFnZSAqcGFnZTsKLQkJCV9fdTMy
IHBhZ2Vfb2Zmc2V0OwotCQkJX191MTYgcGFnZWNudF9iaWFzOwotCQl9OwotCQlzdHJ1Y3Qgewot
CQkJdm9pZCAqYWRkcjsKLQkJCXU2NCBoYW5kbGU7Ci0JCX07Ci0JfTsKKwlzdHJ1Y3QgcGFnZSAq
cGFnZTsKKwlfX3UzMiBwYWdlX29mZnNldDsKKwlfX3UxNiBwYWdlY250X2JpYXM7Cit9OworCitz
dHJ1Y3QgaTQwZV9yeF9idWZmZXJfemMgeworCWRtYV9hZGRyX3QgZG1hOworCXZvaWQgKmFkZHI7
CisJdTY0IGhhbmRsZTsKIH07CiAKIHN0cnVjdCBpNDBlX3F1ZXVlX3N0YXRzIHsKQEAgLTM1OCw2
ICszNTYsNyBAQCBzdHJ1Y3QgaTQwZV9yaW5nIHsKIAl1bmlvbiB7CiAJCXN0cnVjdCBpNDBlX3R4
X2J1ZmZlciAqdHhfYmk7CiAJCXN0cnVjdCBpNDBlX3J4X2J1ZmZlciAqcnhfYmk7CisJCXN0cnVj
dCBpNDBlX3J4X2J1ZmZlcl96YyAqcnhfYmlfemM7CiAJfTsKIAlERUNMQVJFX0JJVE1BUChzdGF0
ZSwgX19JNDBFX1JJTkdfU1RBVEVfTkJJVFMpOwogCXUxNiBxdWV1ZV9pbmRleDsJCS8qIFF1ZXVl
IG51bWJlciBvZiByaW5nICovCkBAIC00OTUsNiArNDk0LDcgQEAgaW50IF9faTQwZV9tYXliZV9z
dG9wX3R4KHN0cnVjdCBpNDBlX3JpbmcgKnR4X3JpbmcsIGludCBzaXplKTsKIGJvb2wgX19pNDBl
X2Noa19saW5lYXJpemUoc3RydWN0IHNrX2J1ZmYgKnNrYik7CiBpbnQgaTQwZV94ZHBfeG1pdChz
dHJ1Y3QgbmV0X2RldmljZSAqZGV2LCBpbnQgbiwgc3RydWN0IHhkcF9mcmFtZSAqKmZyYW1lcywK
IAkJICB1MzIgZmxhZ3MpOworaW50IGk0MGVfYWxsb2NfcnhfYmkoc3RydWN0IGk0MGVfcmluZyAq
cnhfcmluZyk7CiAKIC8qKgogICogaTQwZV9nZXRfaGVhZCAtIFJldHJpZXZlIGhlYWQgZnJvbSBo
ZWFkIHdyaXRlYmFjawpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQw
ZS9pNDBlX3R4cnhfY29tbW9uLmggYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0
MGVfdHhyeF9jb21tb24uaAppbmRleCA4YWYwZTk5YzZjMGQuLjY2N2M0ZGM0YjM5ZiAxMDA2NDQK
LS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnhfY29tbW9uLmgK
KysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3R4cnhfY29tbW9uLmgK
QEAgLTQsMTMgKzQsOSBAQAogI2lmbmRlZiBJNDBFX1RYUlhfQ09NTU9OXwogI2RlZmluZSBJNDBF
X1RYUlhfQ09NTU9OXwogCi12b2lkIGk0MGVfZmRfaGFuZGxlX3N0YXR1cyhzdHJ1Y3QgaTQwZV9y
aW5nICpyeF9yaW5nLAotCQkJICAgdW5pb24gaTQwZV9yeF9kZXNjICpyeF9kZXNjLCB1OCBwcm9n
X2lkKTsKIGludCBpNDBlX3htaXRfeGRwX3R4X3Jpbmcoc3RydWN0IHhkcF9idWZmICp4ZHAsIHN0
cnVjdCBpNDBlX3JpbmcgKnhkcF9yaW5nKTsKLXN0cnVjdCBpNDBlX3J4X2J1ZmZlciAqaTQwZV9j
bGVhbl9wcm9ncmFtbWluZ19zdGF0dXMoCi0Jc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKLQl1
bmlvbiBpNDBlX3J4X2Rlc2MgKnJ4X2Rlc2MsCi0JdTY0IHF3KTsKK3ZvaWQgaTQwZV9jbGVhbl9w
cm9ncmFtbWluZ19zdGF0dXMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgdTY0IHF3b3JkMF9y
YXcsCisJCQkJICAgdTY0IHF3b3JkMSk7CiB2b2lkIGk0MGVfcHJvY2Vzc19za2JfZmllbGRzKHN0
cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsCiAJCQkgICAgIHVuaW9uIGk0MGVfcnhfZGVzYyAqcnhf
ZGVzYywgc3RydWN0IHNrX2J1ZmYgKnNrYik7CiB2b2lkIGk0MGVfeGRwX3JpbmdfdXBkYXRlX3Rh
aWwoc3RydWN0IGk0MGVfcmluZyAqeGRwX3JpbmcpOwpAQCAtODQsNiArODAsMzggQEAgc3RhdGlj
IGlubGluZSB2b2lkIGk0MGVfYXJtX3diKHN0cnVjdCBpNDBlX3JpbmcgKnR4X3JpbmcsCiAJfQog
fQogCisvKioKKyAqIGk0MGVfcnhfaXNfcHJvZ3JhbW1pbmdfc3RhdHVzIC0gY2hlY2sgZm9yIHBy
b2dyYW1taW5nIHN0YXR1cyBkZXNjcmlwdG9yCisgKiBAcXdvcmQxOiBxd29yZDEgcmVwcmVzZW50
aW5nIHN0YXR1c19lcnJvcl9sZW4gaW4gQ1BVIG9yZGVyaW5nCisgKgorICogVGhlIHZhbHVlIG9m
IGluIHRoZSBkZXNjcmlwdG9yIGxlbmd0aCBmaWVsZCBpbmRpY2F0ZSBpZiB0aGlzCisgKiBpcyBh
IHByb2dyYW1taW5nIHN0YXR1cyBkZXNjcmlwdG9yIGZvciBmbG93IGRpcmVjdG9yIG9yIEZDb0UK
KyAqIGJ5IHRoZSB2YWx1ZSBvZiBJNDBFX1JYX1BST0dfU1RBVFVTX0RFU0NfTEVOR1RILCBvdGhl
cndpc2UKKyAqIGl0IGlzIGEgcGFja2V0IGRlc2NyaXB0b3IuCisgKiovCitzdGF0aWMgaW5saW5l
IGJvb2wgaTQwZV9yeF9pc19wcm9ncmFtbWluZ19zdGF0dXModTY0IHF3b3JkMSkKK3sKKwkvKiBU
aGUgUnggZmlsdGVyIHByb2dyYW1taW5nIHN0YXR1cyBhbmQgU1BIIGJpdCBvY2N1cHkgdGhlIHNh
bWUKKwkgKiBzcG90IGluIHRoZSBkZXNjcmlwdG9yLiBTaW5jZSB3ZSBkb24ndCBzdXBwb3J0IHBh
Y2tldCBzcGxpdCB3ZQorCSAqIGNhbiBqdXN0IHJldXNlIHRoZSBiaXQgYXMgYW4gaW5kaWNhdGlv
biB0aGF0IHRoaXMgaXMgYQorCSAqIHByb2dyYW1taW5nIHN0YXR1cyBkZXNjcmlwdG9yLgorCSAq
LworCXJldHVybiBxd29yZDEgJiBJNDBFX1JYRF9RVzFfTEVOR1RIX1NQSF9NQVNLOworfQorCisv
KioKKyAqIGk0MGVfaW5jX250YzogQWR2YW5jZSB0aGUgbmV4dF90b19jbGVhbiBpbmRleAorICog
QHJ4X3Jpbmc6IFJ4IHJpbmcKKyAqKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCBpNDBlX2luY19udGMo
c3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykKK3sKKwl1MzIgbnRjID0gcnhfcmluZy0+bmV4dF90
b19jbGVhbiArIDE7CisKKwludGMgPSAobnRjIDwgcnhfcmluZy0+Y291bnQpID8gbnRjIDogMDsK
KwlyeF9yaW5nLT5uZXh0X3RvX2NsZWFuID0gbnRjOworCXByZWZldGNoKEk0MEVfUlhfREVTQyhy
eF9yaW5nLCBudGMpKTsKK30KKwogdm9pZCBpNDBlX3hza19jbGVhbl9yeF9yaW5nKHN0cnVjdCBp
NDBlX3JpbmcgKnJ4X3JpbmcpOwogdm9pZCBpNDBlX3hza19jbGVhbl90eF9yaW5nKHN0cnVjdCBp
NDBlX3JpbmcgKnR4X3JpbmcpOwogYm9vbCBpNDBlX3hza19hbnlfcnhfcmluZ19lbmFibGVkKHN0
cnVjdCBpNDBlX3ZzaSAqdnNpKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2lu
dGVsL2k0MGUvaTQwZV90eXBlLmggYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0
MGVfdHlwZS5oCmluZGV4IDZlYTI4NjdmZjYwZi4uNjNlMDk4ZjdjYjYzIDEwMDY0NAotLS0gYS9k
cml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVfdHlwZS5oCisrKyBiL2RyaXZlcnMv
bmV0L2V0aGVybmV0L2ludGVsL2k0MGUvaTQwZV90eXBlLmgKQEAgLTY4OSw3ICs2ODksNyBAQCB1
bmlvbiBpNDBlXzMyYnl0ZV9yeF9kZXNjIHsKIAkJX19sZTY0ICByc3ZkMjsKIAl9IHJlYWQ7CiAJ
c3RydWN0IHsKLQkJc3RydWN0IHsKKwkJc3RydWN0IGk0MGVfMzJiX3J4X3diX3F3MCB7CiAJCQlz
dHJ1Y3QgewogCQkJCXVuaW9uIHsKIAkJCQkJX19sZTE2IG1pcnJvcmluZ19zdGF0dXM7CkBAIC03
MjcsNiArNzI3LDkgQEAgdW5pb24gaTQwZV8zMmJ5dGVfcnhfZGVzYyB7CiAJCQl9IGhpX2R3b3Jk
OwogCQl9IHF3b3JkMzsKIAl9IHdiOyAgLyogd3JpdGViYWNrICovCisJc3RydWN0IHsKKwkJdTY0
IHF3b3JkWzRdOworCX0gcmF3OwogfTsKIAogZW51bSBpNDBlX3J4X2Rlc2Nfc3RhdHVzX2JpdHMg
ewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5j
IGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5jCmluZGV4IGQ4NGVj
OTJmODUzOC4uNGZjYTUyYTMwZWE0IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9p
bnRlbC9pNDBlL2k0MGVfeHNrLmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQw
ZS9pNDBlX3hzay5jCkBAIC05LDkgKzksMjMgQEAKICNpbmNsdWRlICJpNDBlX3R4cnhfY29tbW9u
LmgiCiAjaW5jbHVkZSAiaTQwZV94c2suaCIKIAotc3RhdGljIHN0cnVjdCBpNDBlX3J4X2J1ZmZl
ciAqaTQwZV9yeF9iaShzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLCB1MzIgaWR4KQoraW50IGk0
MGVfYWxsb2NfcnhfYmlfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykKIHsKLQlyZXR1cm4g
JnJ4X3JpbmctPnJ4X2JpW2lkeF07CisJdW5zaWduZWQgbG9uZyBzeiA9IHNpemVvZigqcnhfcmlu
Zy0+cnhfYmlfemMpICogcnhfcmluZy0+Y291bnQ7CisKKwlyeF9yaW5nLT5yeF9iaV96YyA9IGt6
YWxsb2Moc3osIEdGUF9LRVJORUwpOworCXJldHVybiByeF9yaW5nLT5yeF9iaV96YyA/IDAgOiAt
RU5PTUVNOworfQorCit2b2lkIGk0MGVfY2xlYXJfcnhfYmlfemMoc3RydWN0IGk0MGVfcmluZyAq
cnhfcmluZykKK3sKKwltZW1zZXQocnhfcmluZy0+cnhfYmlfemMsIDAsCisJICAgICAgIHNpemVv
ZigqcnhfcmluZy0+cnhfYmlfemMpICogcnhfcmluZy0+Y291bnQpOworfQorCitzdGF0aWMgc3Ry
dWN0IGk0MGVfcnhfYnVmZmVyX3pjICppNDBlX3J4X2JpKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3Jp
bmcsIHUzMiBpZHgpCit7CisJcmV0dXJuICZyeF9yaW5nLT5yeF9iaV96Y1tpZHhdOwogfQogCiAv
KioKQEAgLTIzOCw3ICsyNTIsNyBAQCBzdGF0aWMgaW50IGk0MGVfcnVuX3hkcF96YyhzdHJ1Y3Qg
aTQwZV9yaW5nICpyeF9yaW5nLCBzdHJ1Y3QgeGRwX2J1ZmYgKnhkcCkKIH0KIAogLyoqCi0gKiBp
NDBlX2FsbG9jX2J1ZmZlcl96YyAtIEFsbG9jYXRlcyBhbiBpNDBlX3J4X2J1ZmZlcgorICogaTQw
ZV9hbGxvY19idWZmZXJfemMgLSBBbGxvY2F0ZXMgYW4gaTQwZV9yeF9idWZmZXJfemMKICAqIEBy
eF9yaW5nOiBSeCByaW5nCiAgKiBAYmk6IFJ4IGJ1ZmZlciB0byBwb3B1bGF0ZQogICoKQEAgLTI0
OCw3ICsyNjIsNyBAQCBzdGF0aWMgaW50IGk0MGVfcnVuX3hkcF96YyhzdHJ1Y3QgaTQwZV9yaW5n
ICpyeF9yaW5nLCBzdHJ1Y3QgeGRwX2J1ZmYgKnhkcCkKICAqIFJldHVybnMgdHJ1ZSBmb3IgYSBz
dWNjZXNzZnVsIGFsbG9jYXRpb24sIGZhbHNlIG90aGVyd2lzZQogICoqLwogc3RhdGljIGJvb2wg
aTQwZV9hbGxvY19idWZmZXJfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKLQkJCQkgc3Ry
dWN0IGk0MGVfcnhfYnVmZmVyICpiaSkKKwkJCQkgc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpi
aSkKIHsKIAlzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0gPSByeF9yaW5nLT54c2tfdW1lbTsKIAl2b2lk
ICphZGRyID0gYmktPmFkZHI7CkBAIC0yNzksNyArMjkzLDcgQEAgc3RhdGljIGJvb2wgaTQwZV9h
bGxvY19idWZmZXJfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKIH0KIAogLyoqCi0gKiBp
NDBlX2FsbG9jX2J1ZmZlcl9zbG93X3pjIC0gQWxsb2NhdGVzIGFuIGk0MGVfcnhfYnVmZmVyCisg
KiBpNDBlX2FsbG9jX2J1ZmZlcl9zbG93X3pjIC0gQWxsb2NhdGVzIGFuIGk0MGVfcnhfYnVmZmVy
X3pjCiAgKiBAcnhfcmluZzogUnggcmluZwogICogQGJpOiBSeCBidWZmZXIgdG8gcG9wdWxhdGUK
ICAqCkBAIC0yODksNyArMzAzLDcgQEAgc3RhdGljIGJvb2wgaTQwZV9hbGxvY19idWZmZXJfemMo
c3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKICAqIFJldHVybnMgdHJ1ZSBmb3IgYSBzdWNjZXNz
ZnVsIGFsbG9jYXRpb24sIGZhbHNlIG90aGVyd2lzZQogICoqLwogc3RhdGljIGJvb2wgaTQwZV9h
bGxvY19idWZmZXJfc2xvd196YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAotCQkJCSAgICAg
IHN0cnVjdCBpNDBlX3J4X2J1ZmZlciAqYmkpCisJCQkJICAgICAgc3RydWN0IGk0MGVfcnhfYnVm
ZmVyX3pjICpiaSkKIHsKIAlzdHJ1Y3QgeGRwX3VtZW0gKnVtZW0gPSByeF9yaW5nLT54c2tfdW1l
bTsKIAl1NjQgaGFuZGxlLCBocjsKQEAgLTMxOCwxMSArMzMyLDExIEBAIHN0YXRpYyBib29sIGk0
MGVfYWxsb2NfYnVmZmVyX3Nsb3dfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywKIHN0YXRp
YyBfX2Fsd2F5c19pbmxpbmUgYm9vbAogX19pNDBlX2FsbG9jX3J4X2J1ZmZlcnNfemMoc3RydWN0
IGk0MGVfcmluZyAqcnhfcmluZywgdTE2IGNvdW50LAogCQkJICAgYm9vbCBhbGxvYyhzdHJ1Y3Qg
aTQwZV9yaW5nICpyeF9yaW5nLAotCQkJCSAgICAgIHN0cnVjdCBpNDBlX3J4X2J1ZmZlciAqYmkp
KQorCQkJCSAgICAgIHN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqYmkpKQogewogCXUxNiBudHUg
PSByeF9yaW5nLT5uZXh0X3RvX3VzZTsKIAl1bmlvbiBpNDBlX3J4X2Rlc2MgKnJ4X2Rlc2M7Ci0J
c3RydWN0IGk0MGVfcnhfYnVmZmVyICpiaTsKKwlzdHJ1Y3QgaTQwZV9yeF9idWZmZXJfemMgKmJp
OwogCWJvb2wgb2sgPSB0cnVlOwogCiAJcnhfZGVzYyA9IEk0MEVfUlhfREVTQyhyeF9yaW5nLCBu
dHUpOwpAQCAtNDAyLDEwICs0MTYsMTEgQEAgc3RhdGljIGJvb2wgaTQwZV9hbGxvY19yeF9idWZm
ZXJzX2Zhc3RfemMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgdTE2IGNvdW50KQogICoKICAq
IFJldHVybnMgdGhlIHJlY2VpdmVkIFJ4IGJ1ZmZlcgogICoqLwotc3RhdGljIHN0cnVjdCBpNDBl
X3J4X2J1ZmZlciAqaTQwZV9nZXRfcnhfYnVmZmVyX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3Jp
bmcsCi0JCQkJCQkgICAgY29uc3QgdW5zaWduZWQgaW50IHNpemUpCitzdGF0aWMgc3RydWN0IGk0
MGVfcnhfYnVmZmVyX3pjICppNDBlX2dldF9yeF9idWZmZXJfemMoCisJc3RydWN0IGk0MGVfcmlu
ZyAqcnhfcmluZywKKwljb25zdCB1bnNpZ25lZCBpbnQgc2l6ZSkKIHsKLQlzdHJ1Y3QgaTQwZV9y
eF9idWZmZXIgKmJpOworCXN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqYmk7CiAKIAliaSA9IGk0
MGVfcnhfYmkocnhfcmluZywgcnhfcmluZy0+bmV4dF90b19jbGVhbik7CiAKQEAgLTQyNywxMCAr
NDQyLDEwIEBAIHN0YXRpYyBzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKmk0MGVfZ2V0X3J4X2J1ZmZl
cl96YyhzdHJ1Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAogICogcmVjeWNsZSBxdWV1ZSAobmV4dF90
b19hbGxvYykuCiAgKiovCiBzdGF0aWMgdm9pZCBpNDBlX3JldXNlX3J4X2J1ZmZlcl96YyhzdHJ1
Y3QgaTQwZV9yaW5nICpyeF9yaW5nLAotCQkJCSAgICBzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKm9s
ZF9iaSkKKwkJCQkgICAgc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpvbGRfYmkpCiB7Ci0Jc3Ry
dWN0IGk0MGVfcnhfYnVmZmVyICpuZXdfYmkgPSBpNDBlX3J4X2JpKHJ4X3JpbmcsCi0JCQkJCQkg
ICByeF9yaW5nLT5uZXh0X3RvX2FsbG9jKTsKKwlzdHJ1Y3QgaTQwZV9yeF9idWZmZXJfemMgKm5l
d19iaSA9IGk0MGVfcnhfYmkocnhfcmluZywKKwkJCQkJCSAgICAgIHJ4X3JpbmctPm5leHRfdG9f
YWxsb2MpOwogCXUxNiBudGEgPSByeF9yaW5nLT5uZXh0X3RvX2FsbG9jOwogCiAJLyogdXBkYXRl
LCBhbmQgc3RvcmUgbmV4dCB0byBhbGxvYyAqLwpAQCAtNDUyLDcgKzQ2Nyw3IEBAIHN0YXRpYyB2
b2lkIGk0MGVfcmV1c2VfcnhfYnVmZmVyX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsCiAg
KiovCiB2b2lkIGk0MGVfemNhX2ZyZWUoc3RydWN0IHplcm9fY29weV9hbGxvY2F0b3IgKmFsbG9j
LCB1bnNpZ25lZCBsb25nIGhhbmRsZSkKIHsKLQlzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKmJpOwor
CXN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqYmk7CiAJc3RydWN0IGk0MGVfcmluZyAqcnhfcmlu
ZzsKIAl1NjQgaHIsIG1hc2s7CiAJdTE2IG50YTsKQEAgLTQ5MCw3ICs1MDUsNyBAQCB2b2lkIGk0
MGVfemNhX2ZyZWUoc3RydWN0IHplcm9fY29weV9hbGxvY2F0b3IgKmFsbG9jLCB1bnNpZ25lZCBs
b25nIGhhbmRsZSkKICAqIFJldHVybnMgdGhlIHNrYiwgb3IgTlVMTCBvbiBmYWlsdXJlLgogICoq
Lwogc3RhdGljIHN0cnVjdCBza19idWZmICppNDBlX2NvbnN0cnVjdF9za2JfemMoc3RydWN0IGk0
MGVfcmluZyAqcnhfcmluZywKLQkJCQkJICAgICBzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKmJpLAor
CQkJCQkgICAgIHN0cnVjdCBpNDBlX3J4X2J1ZmZlcl96YyAqYmksCiAJCQkJCSAgICAgc3RydWN0
IHhkcF9idWZmICp4ZHApCiB7CiAJdW5zaWduZWQgaW50IG1ldGFzaXplID0geGRwLT5kYXRhIC0g
eGRwLT5kYXRhX21ldGE7CkBAIC01MTMsMTkgKzUyOCw2IEBAIHN0YXRpYyBzdHJ1Y3Qgc2tfYnVm
ZiAqaTQwZV9jb25zdHJ1Y3Rfc2tiX3pjKHN0cnVjdCBpNDBlX3JpbmcgKnJ4X3JpbmcsCiAJcmV0
dXJuIHNrYjsKIH0KIAotLyoqCi0gKiBpNDBlX2luY19udGM6IEFkdmFuY2UgdGhlIG5leHRfdG9f
Y2xlYW4gaW5kZXgKLSAqIEByeF9yaW5nOiBSeCByaW5nCi0gKiovCi1zdGF0aWMgdm9pZCBpNDBl
X2luY19udGMoc3RydWN0IGk0MGVfcmluZyAqcnhfcmluZykKLXsKLQl1MzIgbnRjID0gcnhfcmlu
Zy0+bmV4dF90b19jbGVhbiArIDE7Ci0KLQludGMgPSAobnRjIDwgcnhfcmluZy0+Y291bnQpID8g
bnRjIDogMDsKLQlyeF9yaW5nLT5uZXh0X3RvX2NsZWFuID0gbnRjOwotCXByZWZldGNoKEk0MEVf
UlhfREVTQyhyeF9yaW5nLCBudGMpKTsKLX0KLQogLyoqCiAgKiBpNDBlX2NsZWFuX3J4X2lycV96
YyAtIENvbnN1bWVzIFJ4IHBhY2tldHMgZnJvbSB0aGUgaGFyZHdhcmUgcmluZwogICogQHJ4X3Jp
bmc6IFJ4IHJpbmcKQEAgLTU0Nyw3ICs1NDksNyBAQCBpbnQgaTQwZV9jbGVhbl9yeF9pcnFfemMo
c3RydWN0IGk0MGVfcmluZyAqcnhfcmluZywgaW50IGJ1ZGdldCkKIAl4ZHAuZnJhbWVfc3ogPSB4
c2tfdW1lbV94ZHBfZnJhbWVfc3oodW1lbSk7CiAKIAl3aGlsZSAobGlrZWx5KHRvdGFsX3J4X3Bh
Y2tldHMgPCAodW5zaWduZWQgaW50KWJ1ZGdldCkpIHsKLQkJc3RydWN0IGk0MGVfcnhfYnVmZmVy
ICpiaTsKKwkJc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpiaTsKIAkJdW5pb24gaTQwZV9yeF9k
ZXNjICpyeF9kZXNjOwogCQl1bnNpZ25lZCBpbnQgc2l6ZTsKIAkJdTY0IHF3b3JkOwpAQCAtNTY4
LDE0ICs1NzAsMTggQEAgaW50IGk0MGVfY2xlYW5fcnhfaXJxX3pjKHN0cnVjdCBpNDBlX3Jpbmcg
KnJ4X3JpbmcsIGludCBidWRnZXQpCiAJCSAqLwogCQlkbWFfcm1iKCk7CiAKLQkJYmkgPSBpNDBl
X2NsZWFuX3Byb2dyYW1taW5nX3N0YXR1cyhyeF9yaW5nLCByeF9kZXNjLAotCQkJCQkJICAgcXdv
cmQpOwotCQlpZiAodW5saWtlbHkoYmkpKSB7CisJCWlmIChpNDBlX3J4X2lzX3Byb2dyYW1taW5n
X3N0YXR1cyhxd29yZCkpIHsKKwkJCWk0MGVfY2xlYW5fcHJvZ3JhbW1pbmdfc3RhdHVzKHJ4X3Jp
bmcsCisJCQkJCQkgICAgICByeF9kZXNjLT5yYXcucXdvcmRbMF0sCisJCQkJCQkgICAgICBxd29y
ZCk7CisJCQliaSA9IGk0MGVfcnhfYmkocnhfcmluZywgcnhfcmluZy0+bmV4dF90b19jbGVhbik7
CisJCQlpNDBlX2luY19udGMocnhfcmluZyk7CiAJCQlpNDBlX3JldXNlX3J4X2J1ZmZlcl96Yyhy
eF9yaW5nLCBiaSk7CiAJCQljbGVhbmVkX2NvdW50Kys7CiAJCQljb250aW51ZTsKIAkJfQogCisJ
CWJpID0gaTQwZV9yeF9iaShyeF9yaW5nLCByeF9yaW5nLT5uZXh0X3RvX2NsZWFuKTsKIAkJc2l6
ZSA9IChxd29yZCAmIEk0MEVfUlhEX1FXMV9MRU5HVEhfUEJVRl9NQVNLKSA+PgogCQkgICAgICAg
STQwRV9SWERfUVcxX0xFTkdUSF9QQlVGX1NISUZUOwogCQlpZiAoIXNpemUpCkBAIC04MzIsNyAr
ODM4LDcgQEAgdm9pZCBpNDBlX3hza19jbGVhbl9yeF9yaW5nKHN0cnVjdCBpNDBlX3JpbmcgKnJ4
X3JpbmcpCiAJdTE2IGk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgcnhfcmluZy0+Y291bnQ7IGkrKykg
ewotCQlzdHJ1Y3QgaTQwZV9yeF9idWZmZXIgKnJ4X2JpID0gaTQwZV9yeF9iaShyeF9yaW5nLCBp
KTsKKwkJc3RydWN0IGk0MGVfcnhfYnVmZmVyX3pjICpyeF9iaSA9IGk0MGVfcnhfYmkocnhfcmlu
ZywgaSk7CiAKIAkJaWYgKCFyeF9iaS0+YWRkcikKIAkJCWNvbnRpbnVlOwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5oIGIvZHJpdmVycy9uZXQv
ZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5oCmluZGV4IDllZDU5YzE0ZWI1NS4uZjVlMjky
YzIxOGVlIDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pNDBlL2k0MGVf
eHNrLmgKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaTQwZS9pNDBlX3hzay5oCkBA
IC0xOSw1ICsxOSw3IEBAIGludCBpNDBlX2NsZWFuX3J4X2lycV96YyhzdHJ1Y3QgaTQwZV9yaW5n
ICpyeF9yaW5nLCBpbnQgYnVkZ2V0KTsKIGJvb2wgaTQwZV9jbGVhbl94ZHBfdHhfaXJxKHN0cnVj
dCBpNDBlX3ZzaSAqdnNpLAogCQkJICAgc3RydWN0IGk0MGVfcmluZyAqdHhfcmluZywgaW50IG5h
cGlfYnVkZ2V0KTsKIGludCBpNDBlX3hza193YWtldXAoc3RydWN0IG5ldF9kZXZpY2UgKmRldiwg
dTMyIHF1ZXVlX2lkLCB1MzIgZmxhZ3MpOworaW50IGk0MGVfYWxsb2NfcnhfYmlfemMoc3RydWN0
IGk0MGVfcmluZyAqcnhfcmluZyk7Cit2b2lkIGk0MGVfY2xlYXJfcnhfYmlfemMoc3RydWN0IGk0
MGVfcmluZyAqcnhfcmluZyk7CiAKICNlbmRpZiAvKiBfSTQwRV9YU0tfSF8gKi8KLS0gCjIuMjUu
MQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwt
d2lyZWQtbGFuIG1haWxpbmcgbGlzdApJbnRlbC13aXJlZC1sYW5Ab3N1b3NsLm9yZwpodHRwczov
L2xpc3RzLm9zdW9zbC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC13aXJlZC1sYW4K
